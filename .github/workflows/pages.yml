# Nome do workflow (aparece na aba "Actions" do GitHub)
name: Deploy Jekyll site to Pages

# Define os gatilhos que iniciam o workflow:
on:
  push:
    branches: ["main"]       # Executa automaticamente em pushes para a branch main
  workflow_dispatch:         # Permite execu√ß√£o manual pelo GitHub

# Permiss√µes que o GitHub precisa para publicar via GitHub Pages
permissions:
  contents: read             # Pode ler o conte√∫do do reposit√≥rio
  pages: write               # Pode publicar no GitHub Pages
  id-token: write            # Necess√°rio para autentica√ß√£o segura

# Garante que apenas um deploy seja executado por vez
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest   # Ambiente de execu√ß√£o: Linux padr√£o do GitHub

    steps:
      # Passo 1: Clona o reposit√≥rio para o ambiente de build
      - name: üì• Checkout
        uses: actions/checkout@v4

      # Passo 2: Instala Ruby e Bundler, e executa bundle install no diret√≥rio docs/
      - name: üíé Setup Ruby e Bundler (com cache)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'                # Use a mesma vers√£o do Ruby usada localmente
          bundler-cache: true                # Usa cache para acelerar builds futuros
          working-directory: docs            # Executa o bundle install dentro de /docs

      # Passo 3: Prepara o ambiente interno para deploy com GitHub Pages
      - name: ‚öôÔ∏è Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      # Passo 4: Executa o script de build multil√≠ngue (gera pt-br, en e index.html)
      - name: üõ†Ô∏è Executa githubpages.sh (build multil√≠ngue)
        run: |
          chmod +x docs/githubpages.sh       # Garante permiss√£o de execu√ß√£o no script
          ./docs/githubpages.sh              # Executa o script principal localizado em /docs

      # Passo 5: Corrige o caminho do site final para evitar duplica√ß√£o de "/Documentation"
      # O script gera os arquivos em _site/Documentation, mas como baseurl j√° √© /Documentation,
      # o GitHub Pages serve melhor se o conte√∫do for movido para _site/
      - name: üîÄ Corrige duplica√ß√£o do caminho /Documentation
        run: |
          rm -rf _site_tmp
          mv _site/Documentation _site_tmp   # Move o conte√∫do gerado de dentro de /Documentation
          rm -rf _site                       # Remove o diret√≥rio _site original
          mv _site_tmp _site                 # Substitui por _site final com conte√∫do direto

      # Passo 6: Faz upload dos arquivos gerados para que o deploy ocorra
      - name: üì§ Upload do site para GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site                        # Caminho final onde est√° o conte√∫do do site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL final do site publicado

    runs-on: ubuntu-latest
    needs: build    # Este job s√≥ roda ap√≥s o job de build terminar

    steps:
      # Passo 7: Publica o conte√∫do processado no ambiente GitHub Pages
      - name: üöÄ Deploy para GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
