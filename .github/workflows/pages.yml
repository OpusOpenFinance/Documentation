# Nome do workflow que aparece na aba "Actions"
name: Deploy Jekyll site to Pages

# Define quando o workflow será executado:
on:
  push:
    branches: ["main"]  # Sempre que houver push para o branch main
  workflow_dispatch:     # Também permite execução manual pelo GitHub

# Permissões que o GitHub precisa para realizar o deploy via GitHub Pages
permissions:
  contents: read       # Pode ler os arquivos do repositório
  pages: write         # Pode escrever na infraestrutura do GitHub Pages
  id-token: write      # Necessário para autenticação do deploy

# Garante que só um deploy ocorra por vez
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest  # Usa uma máquina Linux padrão do GitHub

    # Define que todos os comandos 'run:' serão executados dentro do diretório 'docs'
    defaults:
      run:
        working-directory: docs

    steps:
      # Passo 1: Clona o repositório
      - name: 📥 Checkout
        uses: actions/checkout@v4

      # Passo 2: Prepara o ambiente Ruby com Bundler e cache
      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'         # Versão do Ruby usada pelo Jekyll
          bundler-cache: true         # Faz cache das gems para acelerar builds futuros

      # Passo 3: Configura GitHub Pages (cria ambiente interno de deploy)
      - name: ⚙️ Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      # Passo 4: Executa o script personalizado que gera os sites pt-br, en e o index.html
      - name: 🛠️ Build multilingual site with githubpages.sh
        run: |
          chmod +x githubpages.sh    # Garante permissão de execução
          ./githubpages.sh           # Executa o build completo

      # Passo 5: Envia o conteúdo gerado em ../_site para o GitHub Pages
      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ../_site             # Caminho onde o script monta o site final

  # Job separado para realizar o deploy após o build
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # Só executa após o job de build terminar
    steps:
      # Passo 6: Realiza o deploy do conteúdo publicado como artifact
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
