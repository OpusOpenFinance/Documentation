openapi: 3.0.0
info:
  title: API Customers - Integration Layer - OPUS Open Finance Brasil
  description: |
    API for customer registration data from the Integration Layer of the Transmitting Institution with the Opus Open Finance Brasil.
    API that returns customer registration data and data of their representatives, including identification data, financial qualification, information about registered representatives, and the customer's financial relationship with the data transmitting institution.
    It segregates between natural persons and legal entities.
  version: 3.0.0-base2.2.1
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: Customers
    description: Operations for listing Customer Registration information
paths:
  /personal/identifications:
    post:
      tags:
        - Customers
      summary: Gets the identification records of the natural person.
      description: Method to get the identification records of the natural person maintained at the transmitting institution.
      operationId: customersGetPersonalIdentifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMetaAndPagination'
      responses:
        '200':
          $ref: '#/components/responses/OKResponsePersonalCustomersIdentification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /personal/qualifications:
    post:
      tags:
        - Customers
      summary: Gets the qualification records of the natural person.
      description: Method to get the qualification records of the natural person maintained at the transmitting institution.
      operationId: customersGetPersonalQualifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMeta'
      responses:
        '200':
          $ref: '#/components/responses/OKResponsePersonalCustomersQualification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /personal/financial-relations:
    post:
      tags:
        - Customers
      summary: Gets the financial relationship and representative records of the natural person.
      description: Method to get the financial relationship and representative records of the natural person maintained at the transmitting institution.
      operationId: customersGetPersonalFinancialRelations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMeta'
      responses:
        '200':
          $ref: '#/components/responses/OKResponsePersonalCustomersFinancialRelation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /business/identifications:
    post:
      tags:
        - Customers
      summary: Gets the identification records of the legal entity.
      description: Method to get the identification records of the legal entity maintained at the transmitting institution.
      operationId: customersGetBusinessIdentifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMetaAndPagination'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseBusinessCustomersIdentification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /business/qualifications:
    post:
      tags:
        - Customers
      summary: Gets the qualification records of the legal entity.
      description: Method to get the qualification records of the legal entity maintained at the transmitting institution.
      operationId: customersGetBusinessQualifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMeta'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseBusinessCustomersQualification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /business/financial-relations:
    post:
      tags:
        - Customers
      summary: Gets the financial relationship and representative records of the legal entity.
      description: Method to get the financial relationship and representative records of the legal entity maintained at the transmitting institution.
      operationId: customersGetBusinessFinancialRelations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMeta'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseBusinessCustomersFinancialRelation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
components:
  schemas:
    BusinessFinancialRelationData:
      type: object
      description: 'Object that gathers information related to the customer''s relationship with the Institution. Relationship is considered as information that allows knowing since when the queried person has been a customer of the institution, as well as an indicator of the products and services they currently consume and their representatives.'
      required:
        - updateDateTime
        - startDate
        - productsServicesType
        - procurators
        - accounts
      properties:
        updateDateTime:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2020-07-21T08:30:00Z'
          description: |
            Date and time of the update of the <_endpoint_> fields, as per RFC-3339 specification, UTC format. When there is no date specifically linked to the block, assume the date and time of the overall registration update.
        startDate:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2020-07-21T08:30:00Z'
          description: Start date of the relationship with the Financial Institution. It should bring the smallest value between the information reported to BACEN by DOC 3040 and CCS.
        productsServicesType:
          type: array
          minItems: 1
          maxItems: 12
          items:
            $ref: '#/components/schemas/EnumProductServiceType'
        procurators:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcurator'
          minItems: 0
          description: List of representatives. Mandatory if there is a representative.
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/BusinessAccount'
          minItems: 0
          description: |
            List of demand deposit, savings, and prepaid payment accounts maintained by the customer at the transmitting institution.    
    BusinessIdentificationData:
      type: object
      description: Set of information related to Identification, meaning the action and effect of uniquely identifying the legal entity through its registration data.
      required:
        - businessId
        - updateDateTime
        - brandName
        - cnpjNumber
        - companiesCnpj
        - companyName
        - incorporationDate
        - parties
        - contacts
      properties:
        updateDateTime:
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
          description: |
            Date and time of the update of the <_endpoint_> fields, as per RFC-3339 specification, UTC format. When there is no date specifically linked to the block, assume the date and time of the overall registration update.
        businessId:
          $ref: '#/components/schemas/LegacyId'
        brandName:
          type: string
          maxLength: 80
          pattern: '[\w\W\s]*'
          example: Organização A
          description: |
            Brand name reported by the participant in Open Finance. It is recommended to use, whenever possible, the same brand name assigned in the Customer Friendly Server Name directory field (Authorization Server).
        companyName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Luiza e Benjamin Assessoria Jurídica Ltda
          description: Legal name of the queried company is the registered term under which a legal entity (PJ) individualizes itself and carries out its activities. It may also be called by corporate name or trade name.
        tradeName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Mundo da Eletronica
          description: 'Trade name of the legal entity, if any. (It is the popular name of the company, used for company promotion and better public recognition). Mandatory if applicable.'
        incorporationDate:
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
          description: 'Company incorporation date, as per RFC-3339 specification.'
        cnpjNumber:
          type: string
          maxLength: 14
          pattern: '^\d{14}$'
          example: '50685362006773'
          description: 'Full CNPJ number of the queried Company - the CNPJ corresponds to the registration number in the National Registry of Legal Entities. Only the CNPJ numbers should be provided, without masking.'
        companiesCnpj:
          minItems: 1
          type: array
          example:
            - '50685362000135'
            - '50685362006555'
          description: |
            Full CNPJ number of the institution responsible for the Registration - the CNPJ corresponds to the registration number in the National Registry of Legal Entities. 
            Only the CNPJ numbers should be provided, without masking.
          items:
            type: string
            maxLength: 14
            pattern: '^\d{14}$'
            example: '50685362000135'
        otherDocuments:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/BusinessOtherDocument'
          description: List of other documents
        parties:
          type: array
          items:
            $ref: '#/components/schemas/PartiesParticipation'
          minItems: 0
          description: |
            List of information related to the parties involved, such as: partner and/or administrator. Mandatory object for all CNPJs that have partners and/or administrators in the QSA (Quadro de Sócios e Administradores) registry.
        contacts:
          $ref: '#/components/schemas/BusinessContacts'
    BusinessProcurator:
      type: object
      required:
        - type
        - cnpjCpfNumber
        - civilName
      properties:
        type:
          type: string
          enum:
            - REPRESENTANTE_LEGAL
            - PROCURADOR
          description: |
            Type of representative.
            Legal representative - Full Civil Name of the Natural Person who represents an entity or a company and is appointed in its constituent act, i.e., in the social contract or bylaws.
            Procurator - is any person who represents the Natural Person in a business, with written authorization from the latter.
          example: PROCURADOR
        cnpjCpfNumber:
          type: string
          maxLength: 14
          pattern: '^\d{11}$|^\d{14}$'
          example: '73677831148'
          description: Identification of the Legal Representative or Procurator. Registration number at the Federal Revenue (Fill in with CPF or CNPJ without formatting).
        civilName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Elza Milena Stefany Teixeira
          description: Full civil name or Legal name
        socialName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Stefany Teixeirass
          description: |
            Social name of the natural person, if any. The one by which transvestites and transsexuals identify themselves, 
            as well as are identified by their community and in their social environment, according to Local Decree.
    BusinessQualificationData:
      type: object
      description: 'Object that gathers information related to the qualification process. Qualification is considered as information that allows institutions to assess, evaluate, characterize, and classify the customer with the purpose of knowing their risk profile and economic-financial capacity.'
      required:
        - updateDateTime
      properties:
        updateDateTime:
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
          description: |
            Date and time of the update of the <_endpoint_> fields, as per RFC-3339 specification, UTC format. When there is no date specifically linked to the block, assume the date and time of the overall registration update.
        economicActivities:
          type: array
          items:
            $ref: '#/components/schemas/EconomicActivity'
          minItems: 0
          description: 'List of other codes related to the company''s other economic activities, according to the CNAE (National Classification of Economic Activities) standard. Mandatory if applicable.'
        informedRevenue:
          $ref: '#/components/schemas/InformedRevenue'
        informedPatrimony:
          $ref: '#/components/schemas/BusinessInformedPatrimony'
    BusinessOtherDocument:
      type: object
      required:
        - type
        - number
        - country
      properties:
        type:
          type: string
          maxLength: 20
          pattern: '[\w\W\s]*'
          example: EIN
          description: 'Type number of the informed document. Mandatory for Legal Entities domiciled or headquartered abroad, exempt from CNPJ registration.'
        number:
          type: string
          maxLength: 20
          pattern: '[\w\W\s]*'
          example: '128328453'
          description: 'Number of the other document. Mandatory for Legal Entities domiciled or headquartered abroad, exempt from CNPJ registration.'
        country:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: CAN
          description: Country of issuance of the informed document type. Country code according to the alpha3 code of ISO-3166.
        expirationDate:
          type: string
          format: date
          maxLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: 'Expiry date of the informed document type, as per RFC-3339 specification.'
    BusinessContacts:
      type: object
      description: Set of information regarding how to contact the customer.
      required:
        - postalAddresses
        - phones
        - emails
      properties:
        postalAddresses:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPostalAddress'
          minItems: 0
          description: List of legal entity addresses
        phones:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPhone'
          minItems: 0
          description: List of legal entity contact phones
        emails:
          type: array
          items:
            $ref: '#/components/schemas/CustomerEmail'
          minItems: 0
          description: List of contact emails
    PersonalContacts:
      type: object
      description: Set of information regarding how to contact the customer.
      required:
        - postalAddresses
        - phones
        - emails
      properties:
        postalAddresses:
          type: array
          items:
            $ref: '#/components/schemas/PersonalPostalAddress'
          minItems: 0
          description: List of natural person addresses
        phones:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPhone'
          minItems: 0
          description: List of natural person contact phones
        emails:
          type: array
          items:
            $ref: '#/components/schemas/CustomerEmail'
          minItems: 0
          description: List of contact emails
    BusinessInformedPatrimony:
      type: object
      required:
        - amount
        - date
      properties:
        amount:
          $ref: '#/components/schemas/InformedPatrimonyAmount'
        date:
          type: string
          format: date
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: 'Reference date of the Patrimony, as per RFC-3339 specification.'
    PersonalInformedPatrimony:
      type: object
      required:
        - amount
        - year
      properties:
        amount:
          $ref: '#/components/schemas/InformedPatrimonyAmount'
        year:
          type: number
          maximum: 9999
          example: 2010
          description: 'Reference year of the Income, as per RFC-3339 specification.'
    CustomerEmail:
      type: object
      required:
        - isMain
        - email
      properties:
        isMain:
          type: boolean
          description: Indicates if the informed email is the main one
          example: true
        email:
          type: string
          format: email
          description: Email address
          maxLength: 320
          example: karinafernandes-81@br.inter.net
    CustomerPhone:
      type: object
      required:
        - isMain
        - type
        - areaCode
        - number
      properties:
        isMain:
          type: boolean
          description: Indicates if the informed phone is the main one
          example: true
        type:
          $ref: '#/components/schemas/EnumCustomerPhoneType'
        additionalInfo:
          type: string
          description: 'Complementary information related to the selected phone type. [Restriction] Mandatory when type ''OUTRO'' is selected.'
          pattern: '[\w\W\s]*'
          maxLength: 70
          example: Informações adicionais.
        countryCallingCode:
          type: string
          maxLength: 4
          pattern: '^\d{1,4}$'
          example: '55'
          description: |
            International Direct Dialing (DDI) number for Customer access phone - if any

            [Restriction] Mandatory if different from 55. 
        areaCode:
          $ref: '#/components/schemas/AreaCode'
        number:
          type: string
          maxLength: 13
          pattern: '^([0-9]{6,13})$'
          example: '29875132'
          description: Customer phone number
        phoneExtension:
          type: string
          maxLength: 5
          pattern: '^\d{1,5}$'
          description: Extension number. Mandatory if it is part of the informed phone number identification.
          example: '932'
    BusinessPostalAddress:
      type: object
      required:
        - isMain
        - townName
        - country
        - countryCode
      properties:
        isMain:
          type: boolean
          example: true
          description: Indicates if the informed address is the main one.
        address:
          type: string
          maxLength: 150
          minLength: 2
          pattern: '^[\w\W\s]*$'
          example: 'Av Naburo Ykesaki, 1270'
          description: |
            Corresponds to the customer's business address.
        additionalInfo:
          type: string
          maxLength: 30
          pattern: '[\w\W\s]*'
          example: Fundos
          description: Some street addresses still need to be specified by complement.
        districtName:
          type: string
          maxLength: 50
          pattern: '[\w\W\s]*'
          example: Centro
          description: |
            Neighborhood is a community or region located in a city or municipality according to its geographical subdivisions. Mandatory if applicable.
        townName:
          type: string
          maxLength: 50
          pattern: '^[\w\W\s]*$'
          minLength: 2
          example: Marília
          description: |
            Locality: The locality name corresponds to the designation of the city or municipality where the address is located.  
        ibgeTownCode:
          type: string
          pattern: '\d{7}$'
          maxLength: 7
          example: '3550308'
          description: 'IBGE Municipality Code. The IBGE Municipality Codes Table presents the list of Brazilian municipalities associated with a 7-digit code, where the first two digits refer to the State Unit code.'
        countrySubDivision:
          $ref: '#/components/schemas/EnumCountrySubDivision'
        postCode:
          type: string
          pattern: '^\d{8}$'
          maxLength: 8
          example: '17500001'
          description: |
            Postal Code: Composed of an eight-digit numeric set, the main objective of the CEP is to guide and expedite the routing, processing, and delivery of items posted at the Post Office, by assigning them to localities, street addresses, Post Office units, services, public agencies, companies, and buildings. e.g. '01311000'
        country:
          type: string
          maxLength: 80
          pattern: '[\w\W\s]*'
          example: Brasil
          description: Country name
        countryCode:
          type: string
          maxLength: 3
          pattern: '^([A-Z]{3})$'
          example: BRA
          description: Country code according to the alpha3 code of ISO-3166.
        geographicCoordinates:
          $ref: '#/components/schemas/GeographicCoordinates'
    PersonalPostalAddress:
      type: object
      required:
        - isMain
        - address
        - townName
        - postCode
        - country
      properties:
        isMain:
          type: boolean
          example: true
          description: Indicates if the informed address is the main one.
        address:
          type: string
          maxLength: 150
          pattern: '[\w\W\s]*'
          example: 'Av Naburo Ykesaki, 1270'
          description: Corresponds to the customer's residential address.
        additionalInfo:
          type: string
          maxLength: 30
          pattern: '[\w\W\s]*'
          example: Fundos
          description: Some street addresses still need to be specified by complement.
        districtName:
          type: string
          maxLength: 50
          pattern: '[\w\W\s]*'
          example: Centro
          description: |
            Neighborhood is a community or region located in a city or municipality according to its geographical subdivisions.
            [Restriction] Mandatory if applicable.
        townName:
          type: string
          maxLength: 50
          pattern: '[\w\W\s]*'
          example: Marília
          description: |
            Locality: The locality name corresponds to the designation of the city or municipality where the address is located.
        ibgeTownCode:
          type: string
          pattern: '\d{7}$'
          maxLength: 7
          example: '3550308'
          description: 'IBGE Municipality Code. The IBGE Municipality Codes Table presents the list of Brazilian municipalities associated with a 7-digit code, where the first two digits refer to the State Unit code.'
        countrySubDivision:
          $ref: '#/components/schemas/EnumCountrySubDivision'
        postCode:
          type: string
          pattern: '^\d{8}$'
          maxLength: 8
          example: '17500001'
          description: |
            Postal Code: Composed of an eight-digit numeric set, the main objective of the CEP is to guide and expedite the routing, processing, and delivery of items posted at the Post Office, by assigning them to localities, street addresses, Post Office units, services, public agencies, companies, and buildings. e.g. '01311000'.
        country:
          type: string
          maxLength: 80
          pattern: '[\w\W\s]*'
          example: Brasil
          description: Country name
        countryCode:
          type: string
          pattern: '^([A-Z]{3})$'
          maxLength: 3
          example: BRA
          description: Country code according to the alpha3 code of ISO-3166.
        geographicCoordinates:
          $ref: '#/components/schemas/GeographicCoordinates'
    BusinessAccount:
      type: object
      required:
        - compeCode
        - number
        - checkDigit
        - type
      properties:
        compeCode:
          type: string
          maxLength: 3
          pattern: '^\d{3}$'
          description: 'Identifier code assigned by the Central Bank of Brazil to institutions participating in the STR (Reserve Transfer System). COMPE (Check and Other Paper Clearing System) is a system that identifies and processes bank clearings. It is represented by a three-digit code that serves as a bank identifier, so each banking institution has a unique number.'
          example: '001'
        branchCode:
          type: string
          maxLength: 4
          pattern: '^\d{4}$'
          description: |
            Code of the branch holding the account. (A branch is an establishment intended for serving customers, the general public, and credit union members, in the exercise of the institution's activities, and cannot be mobile or temporary)   
            [Restriction] Mandatory if the "type" field is different from prepaid account.
          example: '6272'
        number:
          type: string
          maxLength: 20
          pattern: '^\d{8,20}$'
          description: |
            Account number
          example: '24550245'
        checkDigit:
          type: string
          maxLength: 1
          pattern: '[\w\W\s]*'
          description: |
            Account check digit
          example: '4'
        type:
          $ref: '#/components/schemas/EnumAccountTypeCustomers'
    PersonalAccount:
      type: object
      description: |
        List of demand deposit, savings, and prepaid payment accounts maintained by the customer at the transmitting institution and for which they have provided consent.
      required:
        - compeCode
        - number
        - checkDigit
        - type
        - subtype
      properties:
        compeCode:
          type: string
          maxLength: 3
          pattern: '^\d{3}$'
          description: 'Identifier code assigned by the Central Bank of Brazil to institutions participating in the STR (Reserve Transfer System). COMPE (Check and Other Paper Clearing System) is a system that identifies and processes bank clearings. It is represented by a three-digit code that serves as a bank identifier, so each banking institution has a unique number.'
          example: '001'
        branchCode:
          type: string
          maxLength: 4
          pattern: '^\d{4}$'
          description: |
            Code of the branch holding the account. (A branch is an establishment intended for serving customers, the general public, and credit union members, in the exercise of the institution's activities, and cannot be mobile or temporary)   
            [Restriction] Mandatory if the "type" field is different from prepaid account.
          example: '6272'
        number:
          type: string
          maxLength: 20
          pattern: '^\d{8,20}$'
          description: |
            Account number
          example: '24550245'
        checkDigit:
          type: string
          maxLength: 1
          pattern: '[\w\W\s]*'
          description: |
            Account check digit
          example: '4'
        type:
          $ref: '#/components/schemas/EnumAccountTypeCustomers'
        subtype:
          type: string
          enum:
            - INDIVIDUAL
            - CONJUNTA_SIMPLES
            - CONJUNTA_SOLIDARIA
          description: |
            Account subtype (see Enum): 
            Individual account - has a single holder.
            Simple joint account - where financial transactions can only be performed with the authorization of ALL account holders.
            Joint solidary account - is the modality whose holders can perform transactions individually, that is, without the need for authorization from the other holders.
          example: INDIVIDUAL
    PortabilitiesReceived:
      type: object
      required:
        - employerName
        - employerCnpjCpf
        - paycheckBankDetainerCnpj
        - paycheckBankDetainerIspb
        - portabilityApprovalDate
      properties:
        employerName:
          type: string
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          maxLength: 80
          description: |
            Employer's name as received through the portability communication. The employer can be a natural person or a legal entity; if it is a legal entity, the legal name must be sent.
        employerCnpjCpf:
          type: string
          pattern: '^\d{14}$|^\d{11}$'
          maxLength: 14
          description: |
            Registration number (CPF/CNPJ) of the employer (payer), as received through the portability communication.
        paycheckBankDetainerCnpj:
          type: string
          pattern: '^\d{14}$'
          maxLength: 14
          description: |
            CNPJ number of the payroll bank (financial institution holding the payroll account) as received through the portability communication.
        paycheckBankDetainerIspb:
          type: string
          pattern: '^[0-9]{8}$'
          maxLength: 8
          description: |
            ISPB number of the Payroll Bank (financial institution holding the payroll account) as received through the portability communication.
        portabilityApprovalDate:
          type: string
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          maxLength: 10
          description: |
            Portability approval date, as received through the portability communication.

            Note: only approved requests should be shared, even if compulsively approved.
    PaychecksBankLink:
      type: object
      required:
        - employerName
        - employerCnpjCpf
        - paycheckBankCnpj
        - paycheckBankIspb
        - accountOpeningDate
      properties:
        employerName:
          type: string
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          maxLength: 80
          description: |
            Employer's name as registered upon payroll account opening. The employer can be a natural person or a legal entity; if it is a legal entity, the legal name must be sent.
        employerCnpjCpf:
          type: string
          pattern: '^\d{14}$|^\d{11}$'
          maxLength: 14
          description: |
            Employer's document (CNPJ/CPF), as registered upon payroll account opening.
        paycheckBankCnpj:
          type: string
          pattern: '^\d{14}$'
          maxLength: 14
          description: |
            CNPJ of the financial institution contracted to provide payroll payment service (payroll bank).
        paycheckBankIspb:
          type: string
          pattern: '^[0-9]{8}$'
          maxLength: 8
          description: |
            ISPB number (Brazilian Payment System Identifier) of the financial institution contracted to provide payroll payment service (payroll bank).
        accountOpeningDate:
          type: string
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          maxLength: 10
          description: |
            Payroll account opening date.
    EconomicActivity:
      type: object
      required:
        - code
        - isMain
      properties:
        code:
          type: string
          pattern: '^\d{7}$'
          description: |
            Brings the code of the main activity branch of the queried company, according to the CNAE (National Classification of Economic Activities) standard.

            [Note] The field must always be sent with 7 characters, following the “CNAE-Subclasse 2.3” classification. In cases where the value starts with zeros, it must contain all characters, including the zeros.
          example: '0600001'
        isMain:
          type: boolean
          description: 'Indicates if it is the main activity branch of the company when true and if it is the secondary branch when false. [Restriction] Only one occurrence related to the main economic activity code must have the value true.'
          example: true
    EnumAccountTypeCustomers:
      type: string
      enum:
        - CONTA_DEPOSITO_A_VISTA
        - CONTA_POUPANCA
        - CONTA_PAGAMENTO_PRE_PAGA
      description: |
        Account types. Traditional modalities provided by Resolution 4.753, not including linked accounts, accounts of non-residents, foreign currency accounts, and electronic currency corresponding accounts. See Enum:

        Demand deposit account or Checking account - is the most common type. In it, the money is available to be withdrawn at any time. This account does not generate income for the depositor.

        Savings account - was created to encourage people to save. Money left in the account for thirty days starts generating income, with income tax exemption for those who declare. That is, the money “grows” (yields) while kept in the account. Each deposit will yield month by month, always on the day of the month the money was deposited.

        Prepaid payment account - according to CIRCULAR Nº 3.680, BCB of 2013, it is 'intended for the execution of payment transactions in electronic currency carried out based on funds denominated in Brazilian Reais previously deposited'.
      example: CONTA_DEPOSITO_A_VISTA
    AreaCode:
      type: string
      example: '19'
      description: Customer phone area code (DDD - Direct Distance Dialing) - if any.
      maxLength: 3
      minLength: 2
      pattern: ^(\d{2,3})$
    EnumCountrySubDivision:
      type: string
      description: 'Enumeration referring to each abbreviation of the federative unit that identifies the state or the federal district, where the address is located. e.g. ''AC''. Only abbreviations for Brazilian states are considered.'
      enum:
        - AC
        - AL
        - AP
        - AM
        - BA
        - CE
        - DF
        - ES
        - GO
        - MA
        - MT
        - MS
        - MG
        - PA
        - PB
        - PR
        - PE
        - PI
        - RJ
        - RN
        - RS
        - RO
        - RR
        - SC
        - SP
        - SE
        - TO
      example: SP
    EnumCustomerPhoneType:
      type: string
      description: Identification of the customer's phone type.
      enum:
        - FIXO
        - MOVEL
        - OUTRO
      example: FIXO
    EnumFiliationType:
      type: string
      enum:
        - MAE
        - PAI
      example: PAI
      description: Filiation type.
    EnumInformedRevenueFrequency:
      type: string
      description: |
        Brings the frequency or period of the informed revenue.
        "Revenue is calculated from all benefits that the company obtained from its economic activity in a given period. These benefits are the organization's income or earnings through its sales or services provided."
      enum:
        - DIARIA
        - SEMANAL
        - QUINZENAL
        - MENSAL
        - BIMESTRAL
        - TRIMESTRAL
        - SEMESTRAL
        - ANUAL
        - OUTROS
      example: DIARIA
    EnumInformedIncomeFrequency:
      type: string
      enum:
        - DIARIA
        - SEMANAL
        - QUINZENAL
        - MENSAL
        - BIMESTRAL
        - TRIMESTRAL
        - SEMESTRAL
        - ANUAL
        - OUTROS
      description: Brings the frequency or period of the informed income.
    EnumMaritalStatusCode:
      type: string
      enum:
        - SOLTEIRO
        - CASADO
        - VIUVO
        - SEPARADO_JUDICIALMENTE
        - DIVORCIADO
        - UNIAO_ESTAVEL
        - OUTRO
      example: OUTRO
      description: |
        Customer's marital status.
    EnumOccupationMainCodeType:
      type: string
      enum:
        - RECEITA_FEDERAL
        - CBO
        - OUTRO
      example: RECEITA_FEDERAL
      description: |
        Brings the relation of codes related to occupation.
    EnumPartiesParticipationDocumentType:
      type: string
      enum:
        - CPF
        - PASSAPORTE
        - OUTRO_DOCUMENTO_VIAGEM
        - CNPJ
      description: |
        Type of informed document. 
    EnumPersonalOtherDocumentType:
      type: string
      enum:
        - CNH
        - RG
        - NIF
        - RNE
        - OUTROS
      description: |
        List of Codes for other natural person documents.
    EnumProcuratorsTypePersonal:
      type: string
      enum:
        - REPRESENTANTE_LEGAL
        - PROCURADOR
      example: PROCURADOR
      description: |
        Type of representative.
        Legal representative - Full Civil Name of the Natural Person who represents an entity or a company and is appointed in its constituent act, i.e., in the social contract or bylaws.
        Procurator - is any person who represents the Natural Person in a business, with written authorization from the latter.
    EnumProductServiceType:
      type: string
      enum:
        - CONTA_DEPOSITO_A_VISTA
        - CONTA_POUPANCA
        - CONTA_PAGAMENTO_PRE_PAGA
        - CARTAO_CREDITO
        - OPERACAO_CREDITO
        - SEGURO
        - PREVIDENCIA
        - INVESTIMENTO
        - OPERACOES_CAMBIO
        - CONTA_SALARIO
        - CREDENCIAMENTO
        - OUTROS
      example: SEGURO
      description: List with the relation of products and services with current contracts.
    EnumSex:
      type: string
      enum:
        - FEMININO
        - MASCULINO
        - OUTRO
      example: FEMININO
      description: |
        "Set of anatomophysiological characteristics that distinguish man and woman: Male sex; female sex." 
        If it is neither female nor male, it is classified as 'OUTRO'.
    GeographicCoordinates:
      type: object
      description: 'Set of information, corresponding to the values of geographical coordinates in decimal degrees, in the WGS84 Reference System.'
      required:
        - latitude
        - longitude
      properties:
        latitude:
          description: |
            Latitude information referring to the informed geolocation. Between -90 and 90. e.g. '-23.5475000'. (2 digits before the comma, 11 positions)
          type: string
          pattern: '^-?\d{1,2}\.\d{1,9}$'
          maxLength: 13
          example: '-23.5475000'
        longitude:
          description: |
            Longitude information referring to the informed geolocation. Between -180 and 180. e.g '-46.6361100'. (3 digits before the comma, 11 positions)
          type: string
          pattern: '^-?\d{1,3}\.\d{1,8}$'
          maxLength: 13
          example: '-46.6361100'
    InformedRevenue:
      type: object
      required:
        - amount
      properties:
        frequency:
          $ref: '#/components/schemas/EnumInformedRevenueFrequency'
        frequencyAdditionalInfo:
          type: string
          maxLength: 100
          pattern: '[\w\W\s]*'
          example: Informações adicionais
          description: |
            Free text to complement information related to patrimony.

            [Restriction] Fill in when frequency is equal to OUTROS.
        amount:
          $ref: '#/components/schemas/InformedRevenueAmount'
        year:
          type: number
          maximum: 9999
          example: 2010
          description: 'Reference year of the Income, as per RFC-3339 specification.'
    InformedRevenueAmount:
      type: object
      required:
        - amount
        - currency
      description: Informed patrimony value
      properties:
        amount:
          description: |
            Informed patrimony value. Expressed as a monetary value with a minimum of 2 and a maximum of 4 decimal places.
            Patrimony is the set of assets linked to a person or an entity.
          type: string
          pattern: '^-?\d{1,15}\.\d{2,4}$'
          maxLength: 21
          minLength: 4
          example: '100000.0400'
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          maxLength: 3
          description: 'Currency related to the monetary value, following the ISO-4217 model.'
          example: BRL
    InformedIncome:
      type: object
      required:
        - frequency
        - amount
        - date
      properties:
        frequency:
          $ref: '#/components/schemas/EnumInformedIncomeFrequency'
        amount:
          $ref: '#/components/schemas/InformedIncomeAmount'
        date:
          type: string
          format: date
          maxLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: 'Income date, as per RFC-3339 specification.'
    InformedIncomeAmount:
      type: object
      required:
        - amount
        - currency
      description: Total informed income value
      properties:
        amount:
          description: |
            Total informed income value. Expressed as a monetary value with a minimum of 2 and a maximum of 4 decimal places. 
            Primary income indicates amounts to be paid or received in exchange for the temporary use of financial resources, labor, or non-produced non-financial assets, namely, compensation of employees, investment income, and other primary income.
            The first includes compensation of employees (wages and salaries); the second, direct investment income, portfolio investment income, other investment income, and reserve asset income; and the third, taxes on production and imports, subsidies, and rents.
            Source: Central Bank of Brazil – Economic Department
          type: string
          pattern: '^\d{1,15}\.\d{2,4}$'
          maxLength: 20
          minLength: 4
          example: '100000.0400'
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          maxLength: 3
          description: 'Currency related to the monetary value, following the ISO-4217 model.'
          example: BRL
    InformedPatrimonyAmount:
      type: object
      required:
        - amount
        - currency
      description: Informed patrimony value
      properties:
        amount:
          description: |
            Informed patrimony value. Expressed as a monetary value with a minimum of 2 and a maximum of 4 decimal places.
            Patrimony is the set of assets linked to a person or an entity.
          type: string
          pattern: '^-?\d{1,15}\.\d{2,4}$'
          maxLength: 21
          minLength: 4
          example: '100000.0400'
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          maxLength: 3
          description: 'Currency related to the monetary value, following the ISO-4217 model.'
          example: BRL
    Meta:
      type: object
      description: Meta information regarding the requested API.
      required:
        - requestDateTime
      properties:
        requestDateTime:
          description: 'Query date and time, according to RFC-3339 specification, UTC format.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
    Nationality:
      type: object
      description: Object grouping information related to the Natural Person's nationality.
      required:
        - otherNationalitiesInfo
        - documents
      properties:
        otherNationalitiesInfo:
          type: string
          pattern: '^\S[\s\S]*$'
          maxLength: 40
          example: CAN
          description: |
            Mandatory field if the customer does not have Brazilian nationality. Fill in indicating all their other nationalities using the country code according to the alpha3 code of ISO-3166. e.g., 'CAN'.
        documents:
          type: array
          items:
            $ref: '#/components/schemas/NationalityOtherDocument'
          description: List that brings the relation of complementary documents of people with non-Brazilian nationality.
    NationalityOtherDocument:
      type: object
      required:
        - type
        - number
      properties:
        type:
          type: string
          maxLength: 10
          pattern: '[\w\W\s]*'
          description: 'Document Type number. Mandatory field when nationality is not Brazilian. Inform document type and number, as well as validity and other complementary information to identify the foreign person''s document.'
          example: SOCIAL SEC
        number:
          type: string
          maxLength: 40
          pattern: '[\w\W\s]*'
          description: 'Document identification number. Mandatory field when nationality is not Brazilian. Inform document number and other complementary information to identify the foreign person''s document.'
          example: '423929299'
        expirationDate:
          description: 'Expiration date of the informed document, as per RFC-3339 specification.'
          type: string
          maxLength: 10
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
        issueDate:
          description: 'Document issue date, as per RFC-3339 specification.'
          type: string
          maxLength: 10
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
        country:
          type: string
          maxLength: 80
          pattern: '[\w\W\s]*'
          example: Brasil
          description: |
            Country name.
        additionalInfo:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          description: Free field to fill in when necessary.
          example: Informações adicionais.
    PartiesParticipation:
      type: object
      description: |
        List of information related to the parties involved, such as: partner and/or administrator.
      required:
        - type
        - personType
        - documentType
        - documentNumber
      properties:
        personType:
          type: string
          enum:
            - PESSOA_NATURAL
            - PESSOA_JURIDICA
          description: Indicates if the involved party is a natural person or a legal entity.
        type:
          type: string
          description: |
            Indicates the role in the company. See Enum.
            The administrator is responsible for performing all administrative functions of the company. They manage the day-to-day business, signing documents, legally representing the company, taking out loans, and other managerial actions. Although they are on the front line of the company, they are called a partner because they also have their share of participation in the Share Capital.
            A partner has no involvement in the administrative activities of the company.
          enum:
            - SOCIO
            - ADMINISTRADOR
        civilName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Juan Kaique Cláudio Fernandes
          description: |
            Full civil name of the natural person (A fundamental right of the person, the civil name is the one assigned to the natural person from the registration of their birth, with which they will be identified throughout their life, as well as after their death).

            [Restriction] The civilName field must be filled in if personType is PESSOA_NATURAL.
        socialName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Karina
          description: |
            Social name of the natural person, if any. (the one by which transvestites and transsexuals identify themselves, as well as are identified by their community and in their social environment, according to Local Decree).   
        companyName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Luiza e Benjamin Assessoria Jurídica Ltda
          description: |
            Legal name of the queried company is the registered term under which a legal entity (PJ) individualizes itself and carries out its activities. It may also be called by corporate name or trade name.

            [Restriction] The companyName field must be filled in if personType is PESSOA_JURIDICA.
        tradeName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Mundo da Eletronica
          description: 'Trade name of the legal entity, if any. (It is the popular name of the company, used for company promotion and better public recognition). Mandatory if applicable.'
        startDate:
          type: string
          maxLength: 20
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-05-21T08:30:00Z'
          description: 'Start date of participation, as per RFC-3339 specification.'
        shareholding:
          type: string
          format: double
          maxLength: 8
          minLength: 8
          pattern: '^[01]\.\d{6}$'
          example: '0.510000'
          description: |
            Shareholding percentage (inform with 6 decimal places). The Partner should only be informed if their shareholding is equal to or greater than 25%. e.g.: 0.250000 (This value represents 25%. The value '1' represents 100%).

            [Restriction]: Mandatory field if type is equal to SOCIO and they have a shareholding greater than 25%.
        documentType:
          $ref: '#/components/schemas/EnumPartiesParticipationDocumentType'
        documentNumber:
          type: string
          maxLength: 20
          pattern: '[\w\W\s]*'
          example: '73677831148'
          description: Informed document number. Free text field to fill in the number and digit of the document if applicable.
        documentAdditionalInfo:
          type: string
          maxLength: 100
          pattern: '[\w\W\s]*'
          example: CNH
          description: 'Free field, mandatory if the informed document has relevant complementary information for its identification.'
        documentCountry:
          type: string
          maxLength: 3
          pattern: '[\w\W\s]*'
          example: CAN
          description: |
            Country of document issuance. Country code according to the alpha3 code of ISO-3166.
        documentExpirationDate:
          type: string
          format: date
          maxLength: 10
          example: '2021-05-21'
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          description: 'Expiration date of the informed document, as per RFC-3339 specification.'
        documentIssueDate:
          type: string
          maxLength: 10
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: 'Issue date of the document, as per RFC-3339 specification.'
    PersonalDocument:
      type: object
      description: Object grouping information related to Natural Person Documents.
      properties:
        cpfNumber:
          type: string
          maxLength: 11
          pattern: '^\d{11}$'
          example: '25872252137'
          description: |
            Full CPF number. 
            Attribute corresponding to the minimum information required by current regulation. 
            CPF is the National Registry of Natural Persons. It is a document issued by the Federal Revenue and serves to identify taxpayers. The CPF is an 11-digit number that only changes by court order. The document is issued by the Federal Revenue.

            [Restriction] Mandatory if the passport is not informed.
        passport:
          $ref: '#/components/schemas/PersonalPassport'
    PersonalFinancialRelationData:
      type: object
      description: 'Object that gathers information related to the customer''s relationship with the Institution. Relationship is considered as information that allows knowing since when the queried person has been a customer of the institution, as well as an indicator of the products and services they currently consume and their representatives.'
      required:
        - updateDateTime
        - startDate
        - productsServicesType
        - accounts
        - procurators
      properties:
        updateDateTime:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-05-21T08:30:00Z'
          description: |
            Date and time of the update of the <_endpoint_> fields, as per RFC-3339 specification, UTC format. When there is no date specifically linked to the block, assume the date and time of the overall registration update.
        startDate:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-05-21T08:30:00Z'
          description: Start date of the relationship with the Financial Institution. It should bring the smallest value between the information reported to BACEN by DOC 3040 and CCS.
        productsServicesType:
          type: array
          items:
            $ref: '#/components/schemas/EnumProductServiceType'
          minItems: 1
          maxItems: 12
        productsServicesTypeAdditionalInfo:
          type: string
          pattern: '^[\w\W]*$'
          maxLength: 100
          example: Informações adicionais do tipo de serviço.
          description: |
            Additional information about the service type.
            [Restriction] Mandatory field when productsServicesType is 'OUTROS'.
        procurators:
          type: array
          items:
            $ref: '#/components/schemas/PersonalProcurator'
          minItems: 0
          description: |
            List of representatives. 
            [Restriction] Mandatory if there is a representative.
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/PersonalAccount'
          minItems: 0
          description: |
            List of demand deposit, savings, and prepaid payment accounts maintained by the customer at the transmitting institution.
        portabilitiesReceived:
          type: array
          items:
            $ref: '#/components/schemas/PortabilitiesReceived'
          minItems: 1
          description: |
            List of employer information received through salary portability requested by the transmitting institution's customer to the financial institution(s) holding their payroll account, whether active or previously active. Each link is associated with a salary portability received by the transmitting institution.

            Note: portability is not explicitly terminated, meaning the financial institution to which the salary was ported is not notified when the payroll account is closed or the salary is ported to another financial institution. It is not possible to guarantee that the informed data is from an active portability, nor that the link with the payroll bank still exists. The transmitting institution will only have such information when the portability request was submitted through its channels.
        paychecksBankLink:
          type: array
          items:
            $ref: '#/components/schemas/PaychecksBankLink'
          minItems: 1
          description: |
            List of payroll account information related to employment relationships, existing or previously existing, established between the natural person customer and one or more employers. Each link is associated with an open payroll account maintained at the payroll bank (transmitting institution).

            Note: since former employers may not have requested the closing of the payroll account, it is not possible to guarantee that the informed data is from the current employer.
    PersonalIdentificationData:
      type: object
      description: Set of information related to Identification, meaning the action and effect of uniquely identifying the natural person through their registration data.
      required:
        - updateDateTime
        - personalId
        - brandName
        - civilName
        - birthDate
        - documents
        - hasBrazilianNationality
        - contacts
        - companiesCnpj
      properties:
        updateDateTime:
          type: string
          maxLength: 20
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-05-21T08:30:00Z'
          description: |
            Date and time of the update of the <_endpoint_> fields, as per RFC-3339 specification, UTC format. When there is no date specifically linked to the block, assume the date and time of the overall registration update.
        personalId:
          $ref: '#/components/schemas/LegacyId'
        brandName:
          type: string
          maxLength: 80
          pattern: '[\w\W\s]*'
          example: Organização A
          description: 'Brand name reported by the participant in Open Finance. It is recommended to use, whenever possible, the same brand name assigned in the Customer Friendly Server Name directory field (Authorization Server).'
        civilName:
          type: string
          maxLength: 70
          pattern: '^[\w\W]*$'
          example: Juan Kaique Cláudio Fernandes
          description: 'Full civil name of the natural person (A fundamental right of the person, the civil name is the one assigned to the natural person from the registration of their birth, with which they will be identified throughout their life, as well as after their death).'
        socialName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Jaqueline de Freitas
          description: 'Social name of the natural person, if any. (the one by which transvestites and transsexuals identify themselves, as well as are identified by their community and in their social environment, according to Local Decree).'
        birthDate:
          type: string
          maxLength: 10
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '1989-03-23'
          description: 'Birth date, as per RFC-3339 specification.'
        maritalStatusCode:
          $ref: '#/components/schemas/EnumMaritalStatusCode'
        maritalStatusAdditionalInfo:
          type: string
          pattern: '[\w\W\s]*'
          maxLength: 50
          example: Amasiado
          description: |
            Free field to complement the information related to marital status.

            [Restriction] Mandatory when type 'OUTRO' is selected.
        sex:
          $ref: '#/components/schemas/EnumSex'
        companiesCnpj:
          type: array
          minItems: 1
          items:
            type: string
            pattern: '^\d{14}$'
            maxLength: 14
          example:
            - '01773247000103'
            - '01773247000563'
          description: |
            Full CNPJ number of the institution responsible for the Registration - the CNPJ corresponds to the registration number in the National Registry of Legal Entities. 
            Only the CNPJ numbers should be provided, without masking.
        documents:
          $ref: '#/components/schemas/PersonalDocument'
        otherDocuments:
          type: array
          items:
            $ref: '#/components/schemas/PersonalOtherDocument'
          minItems: 1
          description: List of other documents.
        hasBrazilianNationality:
          type: boolean
          example: false
          description: Informs if the Customer has Brazilian nationality.
        nationality:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Nationality'
        filiation:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - type
              - civilName
            properties:
              type:
                $ref: '#/components/schemas/EnumFiliationType'
              civilName:
                type: string
                maxLength: 70
                pattern: '^[\w\W]*$'
                example: Marcelo Cláudio Fernandes
                description: |
                  Full civil name of the person related to filiation.
                  (A fundamental right of the person, the civil name is the one assigned to the natural person from the registration of their birth, 
                  with which they will be identified throughout their life, as well as after their death).
              socialName:
                type: string
                maxLength: 70
                pattern: '^[\w\W]*$'
                description: |
                  Social name of the natural person, if any. 
                  (the one by which transvestites and transsexuals identify themselves, 
                  as well as are identified by their community and in their social environment, according to Local Decree).
        contacts:
          $ref: '#/components/schemas/PersonalContacts'
    PersonalOtherDocument:
      type: object
      required:
        - type
        - number
      properties:
        type:
          $ref: '#/components/schemas/EnumPersonalOtherDocumentType'
        typeAdditionalInfo:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: CREA-RJ
          description: Free field, mandatory if the option OTHER document types is selected.
        number:
          type: string
          maxLength: 40
          pattern: '[\w\W\s]*'
          example: '15291908'
          description: Identification/Number of the informed document.
        checkDigit:
          type: string
          maxLength: 2
          pattern: '[\w\W\s]*'
          example: P
          description: Check digit of the informed document. Mandatory if the informed document has a check digit.
        additionalInfo:
          type: string
          maxLength: 50
          pattern: '[\w\W\s]*'
          example: SSP/SP
          description: |
            For documents where the place of issuance applies, it must be sent mandatorily, with the information of the issuing body and State Unit (UF). Example: RG, place of issuance: SSP/RS.
            [Restriction] Mandatory when the Document Issuance Location is relevant.
        expirationDate:
          type: string
          format: date
          maxLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: 'Expiration date of the informed document, as per RFC-3339 specification.'
    PersonalProcurator:
      type: object
      required:
        - type
        - cpfNumber
        - civilName
      properties:
        type:
          $ref: '#/components/schemas/EnumProcuratorsTypePersonal'
        cpfNumber:
          type: string
          maxLength: 11
          pattern: '^\d{11}$'
          example: '73677831148'
          description: 'Full CPF number. The CPF is the National Registry of Natural Persons. It is a document issued by the Federal Revenue and serves to identify taxpayers. The CPF is an 11-digit number that only changes by court order. The document is issued by the Federal Revenue.'
        civilName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Elza Milena Stefany Teixeira
          description: 'Full civil name of the natural person. (A fundamental right of the person, the civil name is the one assigned to the natural person from the registration of their birth, with which they will be identified throughout their life, as well as after their death).'
        socialName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
          example: Carlos
          description: 'Social name of the natural person, if any. (the one by which transvestites and transsexuals identify themselves, as well as are identified by their community and in their social environment, according to Local Decree No. 51,180, of January 14, 2010).'
    PersonalPassport:
      type: object
      description: |
        Document granted to travelers by a national administrative authority to certify their identity before foreign authorities. 

        [Restriction] Applicable only to Natural Persons residing abroad exempt from CPF registration.

        [Restriction] Mandatory if the cpfNumber is not informed.
      required:
        - number
        - country
      properties:
        number:
          type: string
          maxLength: 20
          pattern: '^[\w\W]*$'
          example: '75253468744594820620'
          description: |
            Passport Number. 
        country:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: CAN
          description: |
            Country of passport issuance. Country code according to the 'alpha3' code of ISO-3166.
        expirationDate:
          type: string
          format: date
          maxLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: |
            Passport expiry date, as per RFC-3339 specification.
        issueDate:
          type: string
          format: date
          maxLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2021-05-21'
          description: |
            Passport issue date, as per RFC-3339 specification.
    PersonalQualificationData:
      type: object
      description: 'Set of information related to the qualification process. Qualification is considered as information that allows institutions to assess, evaluate, characterize, and classify the customer with the purpose of knowing their risk profile and economic-financial capacity.'
      required:
        - updateDateTime
        - companyCnpj
      properties:
        updateDateTime:
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
          description: |
            Date and time of the update of the <_endpoint_> fields, as per RFC-3339 specification, UTC format. When there is no date specifically linked to the block, assume the date and time of the overall registration update.
        companyCnpj:
          type: string
          pattern: '^\d{14}$'
          maxLength: 14
          example: '50685362000135'
          description: |
            Full CNPJ number of the institution responsible for the Registration - the CNPJ corresponds to the registration number in the National Registry of Legal Entities. 
            Only the CNPJ numbers should be provided, without masking.
        occupationCode:
          $ref: '#/components/schemas/EnumOccupationMainCodeType'
        occupationDescription:
          type: string
          maxLength: 100
          pattern: '[\w\W\s]*'
          example: '01'
          description: |
            Free field, mandatory. If the *occupationCode* option "RECEITA_FEDERAL" or "CBO" is selected, inform the code from this standardized list.   
            If *occupationCode* "OUTRO" is selected, inform the description of the occupation when the FI does not follow the standardized list of the Federal Revenue or CBO.
        informedIncome:
          $ref: '#/components/schemas/InformedIncome'
        informedPatrimony:
          $ref: '#/components/schemas/PersonalInformedPatrimony'
    ResponseBusinessCustomersFinancialRelation:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/BusinessFinancialRelationData'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponseBusinessCustomersIdentification:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/BusinessIdentificationData'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponseBusinessCustomersQualification:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/BusinessQualificationData'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              title:
                description: Human-readable title of this specific error
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              detail:
                description: Human-readable description of this specific error
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 2048
        meta:
          $ref: '#/components/schemas/Meta'
    ResponsePersonalCustomersFinancialRelation:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/PersonalFinancialRelationData'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponsePersonalCustomersIdentification:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PersonalIdentificationData'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponsePersonalCustomersQualification:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/PersonalQualificationData'
        meta:
          $ref: '#/components/schemas/Meta'
    LegacyId:
      description: |
        Key-value array with the resource identification key in the source (legacy) system, allowing for composite keys.
      type: array
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            description: |
              Name of the identifier field in the source system.
            type: string
            example: internalResourceId
          value:
            description: |
              Value of the identifier field in the source system.
            type: string
            example: '1234'
        additionalProperties: false
      minItems: 1
      maxItems: 10
    PaginationKey:
      description: |
        Recall identifier, used to avoid counting calls to the endpoint during pagination.
      type: string
      maxLength: 2048
      pattern: '[\w\W\s]*'
    Page:
      description: |
        Number of the requested page (the value of the first page is 1).
      type: integer
      default: 1
      minimum: 1
      maximum: 2147483647
      format: int32
    PageSize:
      description: |
        Total number of records per page.
      type: integer
      default: 25
      minimum: 1
      format: int32
      maximum: 1000
    ConsentDataSharing:
      description: |
        Data sharing consent
      type: object
      required:
        - brandId
        - creationDateTime
        - tpp
        - externalId
        - loggedUser
        - permissions
      properties:
        authExtraData:
          type: array
          description: |
            Key-value array with additional data from the authorizer.
            This data can be used as resource filters.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                example: agencia
              value:
                type: string
                example: '0011'
        consentOwner:
          deprecated: true
          type: array
          description: |
            [Deprecated] Key-value array with identification data related to the consent owner.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                example: agencia
              value:
                type: string
                example: '0011'
        brandId:
          type: string
          description: |
            Identifier of the brand reported by the Open Finance participant
          example: cbanco
          minLength: 1
          maxLength: 50
        creationDateTime:
          description: |
            Date and time when the consent was created.
            A string with date and time according to RFC-3339 specification, always using UTC timezone (UTC time format).
          type: string
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$ '
          example: '2021-05-21T08:30:00Z'
          maxLength: 20
        tpp:
          type: object
          description: |
            Details of the TPP (Third Party Provider) that requested the consent
          additionalProperties: false
          required:
            - name
          properties:
            name:
              type: string
              description: |
                Name of the TPP that requested the consent
              example: GuiaBolsa
              maxLength: 100
        externalId:
          type: string
          description: |
            Identifier of the consent used outside the Opus Open Finance platform
          example: urn:oob-bank:2f710909-4ccd-4998-8679-3d8de00e5ccf
          maxLength: 100
        loggedUser:
          type: object
          description: |
            User (natural person) who is logged into the Data Transmitting institution.
          additionalProperties: false
          required:
            - document
          properties:
            document:
              type: object
              description: |
                Official identification document of the user.
              additionalProperties: false
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  maxLength: 11
                  description: |
                    Number of the user's official identification document.
                  example: '11111111111'
                  pattern: ^\d{11}$
                rel:
                  type: string
                  maxLength: 3
                  description: |
                    Type of the user's official identification document.
                  example: CPF
                  pattern: ^[A-Z]{3}$
        businessDocumentType:
          type: object
          description: |
            User (legal entity) who is logged into the Data Transmitting institution.
            [Restriction] Mandatory if the user logged into the Data Transmitting institution is a CNPJ (legal entity).
          additionalProperties: false
          required:
            - document
          properties:
            document:
              type: object
              description: |
                Official identification document of the legal entity holder.
              additionalProperties: false
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  maxLength: 14
                  description: |
                    Number of the legal entity holder's official identification document.
                  example: '11111111111111'
                  pattern: ^\d{14}$
                rel:
                  type: string
                  maxLength: 4
                  description: |
                    Type of the legal entity holder's official identification document.
                  example: CNPJ
                  pattern: ^[A-Z]{4}$
        resources:
          description: |
            List of resources allowed by the customer
          type: array
          items:
            type: object
            description: |
              Resources selected by the customer
            required:
              - type
              - resourceLegacyId
            properties:
              type:
                description: |
                  Resource type
                type: string
                enum:
                  - ACCOUNT
                  - CREDIT_CARD_ACCOUNT
                  - LOAN
                  - FINANCING
                  - UNARRANGED_ACCOUNT_OVERDRAFT
                  - INVOICE_FINANCING
                  - PAYMENT
                  - BANK_FIXED_INCOME
                  - CREDIT_FIXED_INCOME
                  - VARIABLE_INCOME
                  - TREASURE_TITLE
                  - FUND
                example: PAYMENT
              resourceLegacyId:
                $ref: '#/components/schemas/LegacyId'
              authorizers:
                deprecated: true
                description: |
                  [Deprecated] List of authorizers for the resource for cases of multiple authorization levels.
                  This field will be discontinued in future versions.
                  As the current version requires this field, it must be filled with at least the name and CPF of the logguedUser.
                type: array
                items:
                  type: object
                  required:
                    - cpf
                    - name
                  properties:
                    cpf:
                      description: |
                        Authorizer's CPF
                      type: string
                      minLength: 11
                      maxLength: 11
                      pattern: ^\d{11}$
                      example: '11111111111'
                    name:
                      description: |
                        Authorizer's name
                      type: string
                      example: Marco Antonio de Brito
                minItems: 1
              hasMultipleAuthorisers:
                deprecated: true
                type: boolean
                example: 'false'
            additionalProperties: false
          maxItems: 1000
        expirationDateTime:
          description: |
            Permission expiration date and time.
            Mandatory, reflects the consent validity limit date.
            A string with date and time according to RFC-3339 specification, always using UTC timezone (UTC time format).
          type: string
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$ '
          example: '2021-05-21T08:30:00Z'
        permissions:
          type: array
          items:
            description: |
              Only for data sharing consents.
              Specifies the types of API access permissions within the scope of Open Finance Brazil - Phase 2, according to the consent blocks provided by the user and necessary for accessing each API endpoint.
            type: string
            enum:
              - ACCOUNTS_READ
              - ACCOUNTS_BALANCES_READ
              - ACCOUNTS_TRANSACTIONS_READ
              - ACCOUNTS_OVERDRAFT_LIMITS_READ
              - CREDIT_CARDS_ACCOUNTS_READ
              - CREDIT_CARDS_ACCOUNTS_BILLS_READ
              - CREDIT_CARDS_ACCOUNTS_BILLS_TRANSACTIONS_READ
              - CREDIT_CARDS_ACCOUNTS_LIMITS_READ
              - CREDIT_CARDS_ACCOUNTS_TRANSACTIONS_READ
              - CUSTOMERS_PERSONAL_IDENTIFICATIONS_READ
              - CUSTOMERS_PERSONAL_ADITTIONALINFO_READ
              - CUSTOMERS_BUSINESS_IDENTIFICATIONS_READ
              - CUSTOMERS_BUSINESS_ADITTIONALINFO_READ
              - FINANCINGS_READ
              - FINANCINGS_SCHEDULED_INSTALMENTS_READ
              - FINANCINGS_PAYMENTS_READ
              - FINANCINGS_WARRANTIES_READ
              - INVOICE_FINANCINGS_READ
              - INVOICE_FINANCINGS_SCHEDULED_INSTALMENTS_READ
              - INVOICE_FINANCINGS_PAYMENTS_READ
              - INVOICE_FINANCINGS_WARRANTIES_READ
              - LOANS_READ
              - LOANS_SCHEDULED_INSTALMENTS_READ
              - LOANS_PAYMENTS_READ
              - LOANS_WARRANTIES_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_SCHEDULED_INSTALMENTS_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_PAYMENTS_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_WARRANTIES_READ
              - BANK_FIXED_INCOMES_READ
              - CREDIT_FIXED_INCOMES_READ
              - FUNDS_READ
              - VARIABLE_INCOMES_READ
              - TREASURE_TITLES_READ
              - EXCHANGES_READ
              - RESOURCES_READ
          minItems: 1
          maxItems: 30
          example:
            - ACCOUNTS_READ
            - ACCOUNTS_OVERDRAFT_LIMITS_READ
            - RESOURCES_READ
      additionalProperties: false
    RequestMeta:
      type: object
      description: |
        Object containing data related to the context in which the request was received.
      required:
        - correlationId
        - brandId
      properties:
        correlationId:
          type: string
          description: |
            UUID that identifies the correlation ID of the performed request.
            Should be propagated to all calls made between systems and logged whenever possible to facilitate error tracing.
          pattern: ^(localID:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          example: localID:97623ed1-4732-4bf2-8d4b-ae7aced5443b
        brandId:
          type: string
          description: |
            Identifier of the brand reported by the Open Finance participant
          example: cbanco
          minLength: 1
          maxLength: 50
      additionalProperties: false
    RequestWithConsentAndRequestMeta:
      type: object
      required:
        - consent
        - requestMeta
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
    RequestWithConsentAndRequestMetaAndPagination:
      type: object
      required:
        - consent
        - requestMeta
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        page:
          $ref: '#/components/schemas/Page'
        pageSize:
          $ref: '#/components/schemas/PageSize'
        pagination-key:
          $ref: '#/components/schemas/PaginationKey'
  responses:
    OKResponsePersonalCustomersIdentification:
      description: Natural person identification data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePersonalCustomersIdentification'
    OKResponsePersonalCustomersQualification:
      description: Natural person qualification data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePersonalCustomersQualification'
    OKResponsePersonalCustomersFinancialRelation:
      description: Natural person relationship data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePersonalCustomersFinancialRelation'
    OKResponseBusinessCustomersIdentification:
      description: Legal entity identification data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBusinessCustomersIdentification'
    OKResponseBusinessCustomersQualification:
      description: Legal entity qualification data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBusinessCustomersQualification'
    OKResponseBusinessCustomersFinancialRelation:
      description: Legal entity relationship data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBusinessCustomersFinancialRelation'
    BadRequest:
      description: 'The request was malformed, omitting mandatory attributes, either in the payload or through attributes in the URL.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Forbidden:
      description: The token has an incorrect scope or a security policy was violated.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    GatewayTimeout:
      description: GATEWAY TIMEOUT - The request was not met within the established time limit.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    InternalServerError:
      description: An error occurred in the API gateway or the microservice.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    SiteIsOverloaded:
      description: 'The site is overloaded and the operation was rejected because the global maximum TPS limit was reached at this moment.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Locked:
      description: Locked
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    MethodNotAllowed:
      description: The consumer attempted to access the resource with an unsupported method.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotAcceptable:
      description: The request contained an Accept header different from the allowed media types or a character set different from UTF-8.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotFound:
      description: The requested resource does not exist or has not been implemented.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    TooManyRequests:
      description: 'The operation was rejected because too many requests were made within a certain period or the global limit of concurrent requests was reached.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Unauthorized:
      description: Missing/invalid authentication header or invalid token.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnprocessableEntity:
      description: 'The request syntax is correct, but it was not possible to process the instructions present.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Default:
      description: Unexpected error.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
