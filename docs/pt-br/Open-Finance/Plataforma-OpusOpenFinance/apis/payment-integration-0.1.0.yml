openapi: 3.0.0
info:
  title: API Payment Initiation - Integration Layer - Opus Open Finance Brasil
  description: | 
    API de Iniciação de Pagamentos, responsável por viabilizar as operações
    de iniciação de pagamentos para o Opus Open Finance Brasil.
    
    Deve ser disponibilizada pela Instituição Detentora de Conta e receberá requisições feitas pela Plataforma Opus Open Finance.
    
    # Cenários de Pagamentos a Serem Cobertos pela Integração

    Na implementação da integração de pagamentos, é necessário cobrir a criação e a consulta de pagamentos em cada um dos cenários a seguir.

    Para pagamentos retidos para análise (status "PDNG" no Open Finance) ou agendados, também é necessário contemplar a possibilidade de revogação do pagamento.

    ## Cenários por Tipo de Cliente Pagador

    - **Pessoa Física (PF)**
    - **Pessoa Jurídica (PJ)** *(quando suportado pela retaguarda da instituição financeira)*

    ## Cenários por Data de Efetivação do Pagamento

    - **Instantâneo**: Pagamentos a serem efetivados no mesmo dia da solicitação.
    - **Agendado**: Pagamentos a serem efetivados em data futura.

    ## Cenários por Forma de Iniciação do Pagamento

    - **MANU**: Iniciado por inserção manual dos dados bancários.
    - **INIC**: Iniciado pelo recebedor (*creditor*).
    - **DICT**: Iniciado por uso de chave Pix.
    - **QRES**: Iniciado por QR Code Estático.
    - **QRDN**: Iniciado por QR Code Dinâmico.

    ## Cenários por Tipo de Tentativa de Pagamento

    O Arranjo Pix possibilita rententativas para pagamentos específicos, como o Pix automático.  
    Ao realizar um Pix pelo Open Finance, a integração deve tratar adequadamente as seguintes tentativas de pagamento:

    - **Solicitação Original:** A primeira tentativa de execução do pagamento, que acontece para todos os pagamentos.
    - **Retentativa Extradia:** Apenas suportada para pagamentos específicos (ex.: Pix automático). É uma nova tentativa realizada em um dia diferente da tentativa original.

    **⚠️ Importante:** A retentativa intradia (realizada no mesmo dia), quando aplicável, deve ser identificada e tratada pelo sistema de retaguarda da instituição financeira.

    ---

    ## Como Identificar os Cenários

    A seguir, é apresentada uma visão mais técnica das regras de identificação os cenários de pagamentos descritos anteriormente.

    A análise de campos abaixo é feita para o payload da requisição de criação de pagamentos.

    ### Como Identificar o Tipo de Cliente Pagador

    | Campo `consent.businessDocumentType.document.identification` | Interpretação |
    | ------------------------------------------------------------ | ------------- |
    | Ausente                                                      | Usuário PF    |
    | Preenchido                                                   | Usuário PJ    |

    ---

    **ℹ️ Observação:** Independentemente do tipo de usuário, o CPF dele estará disponível no campo `consent.loggedUser.document.identification`.

    <br>

    ### Como Identificar a Data de Efetivação do Pagamento

    O campo que define a data do pagamento varia conforme o tipo de pagamento (campo `paymentType`):

    - Caso `paymentType` seja `PAYMENT_CONSENT`

    | Campo `consent.payment.schedule`          | Cenário     | Data de Pagamento                      |
    | ----------------------------------------- | ----------- | -------------------------------------- |
    | **Ausente**                               | Instantâneo | Data atual                             |
    | Possui subcampo `single`                  | Agendado    | `consent.payment.schedule.single.date` |
    | Possui subcampo **diferente** de `single` | Agendado    | `requestBody.data.date`                |

    ---

    - Caso `paymentType` seja `PAYMENT_RECURRING_CONSENT`

    | Campo `requestBody.data.date` | Cenário     | Data de Pagamento       |
    | ----------------------------- | ----------- | ----------------------- |
    | É data **atual**              | Instantâneo | Data atual              |
    | É data **futura**             | Agendado    | `requestBody.data.date` |

    ---

    <br>

    ### Como Identificar a Forma de Iniciação e o Recebedor (creditor)

    A **forma de iniciação** do pagamento é determinada pelo valor do campo `requestBody.data.localInstrument`.  
    A forma de identificação do **recebedor (creditor)** varia conforme o tipo de iniciação informado.

    A tabela abaixo resume os campos para a identificação cada cenário:

    | Forma de Iniciação | Campos utilizados para identificar o recebedor                     |
    | :----------------: | ------------------------------------------------------------------ |
    |        MANU        | `creditorAccount` (objeto com informações bancárias)               |
    |        INIC        | `proxy` (Chave Pix)                                                |
    |        DICT        | `proxy` + `creditorAccount`                                        |
    |        QRES        | `proxy` + `creditorAccount` + `qrCode` (String com o QR Code lido) |
    |        QRDN        | `proxy` + `creditorAccount` + `qrCode`                             |

    ---

    **⚠️ Importante:** Quando houver mais de uma forma de identificação, deve-se validar a consistência entre elas.
    Exemplo: a chave Pix deve se referir à mesma conta indicada no campo creditorAccount.

    **ℹ️ Observação:** Todos os campos mencionados na tabela acima estão localizados dentro de `requestBody.data`.

    <br>

    ### Como Identificar a Tentativa de Pagamento

    | Campo `requestBody.data.originalRecurringPaymentId` | Interpretação        |
    | --------------------------------------------------- | -------------------- |
    | Ausente                                             | Tentativa Original   |
    | Preenchido com o ID do pagamento original           | Retentativa Extradia |

    ---

    <br>

    # Validações Obrigatórias para Pagamentos

    As validações a seguir devem ser implementadas na rota específica para a validação de dados do pagamento.

    Para cada validação, o erro listado na resposta da integração deve apresentar no campo `code` o código correspondente, conforme indicado.

    ## Validação do Valor Máximo do Pagamento

    **ℹ️ Observações:**

    - Validação realizada para pagamentos do tipo `PAYMENT_CONSENT` (valor do campo `requestBody.paymentType`).
    - Todos os demais campos abaixo estão localizados dentro de `requestBody.data.payment`.

    ### Regra

    O valor da transação (campo `amount`) deve estar abaixo:

    - Do limite estabelecido pela Instituição Detentora (caso exista).
    - Do valor máximo absoluto, em reais, de `999999999.99` (isto é, até 9 dígitos antes do ponto decimal e 2 após).
        - O valor **não** pode ser igual ao limite máximo.

    **Código de erro:** `VALOR_ACIMA_LIMITE`

    ## Validações de QR Code

    **ℹ️ Observações:**

    - Validações realizadas para pagamentos do tipo `PAYMENT_CONSENT` (valor do campo `requestBody.paymentType`).
    - Todos os demais campos abaixo estão localizados dentro de `requestBody.data.payment`.

    ### Regras Gerais

    1. O tipo do QR Code deve ser coerente com a forma de iniciação do pagamento (campo `details.localInstrument`):
        - Se a forma de iniciação for **QRES**, o QR Code deve ser **Estático**.
        - Se a forma de iniciação for **QRDN**, o QR Code deve ser **Dinâmico**.
        - **Código de erro:** `QRCODE_INVALIDO`

    ### Caso o QR Code seja **Estático**

    1. O valor presente no QR Code Estático deve ser o mesmo informado no payload do pagamento (campo `amount`).
        - **Código de erro:** `VALOR_INVALIDO`

    2. A chave Pix presente no QR Code Estático deve ser idêntica à chave Pix informada no payload do pagamento (campo `details.proxy`).
        - **Código de erro:** `QRCODE_INVALIDO`

    ### Caso o QR Code seja **Dinâmico**

    1. O status do QR Code Dinâmico deve ser válido para uso.
        - **Código de erro:** `QRCODE_INVALIDO`

    # Integração - Dúvidas Frequentes

    ## Sobre Descoberta de Recursos

    Dúvidas referentes ao processo de descoberta de recursos no Opus Open Finance. Para mais informações, confira `pt-br/integração-plugin/consent/readme.md` da documentação do produto.

    **O que é um "recurso"?**

    No Open Finance, "recursos" são componentes de dados ou serviço que pode ser consumido por APIs, respeitando os critérios de segurança e consentimento.
    Na prática, um "recurso" pode ser uma conta transacional, um cartão, um investimento, entre outros.

    **O que devo retornar nos campos `key` de `resourceLegacyId` e `resourceName`?**

    Os campos `resourceLegacyId` e `resourceName` funcionam como identificadores internos na retaguarda da instituição financeira e devem ser definidos para uso nessa camada. Ambos são estruturados como listas de pares *key-value* para oferecer suporte a identificadores compostos.

    Para o `resourceLegacyId`, caso o ID seja simples, é suficiente retornar algo como:

    ```json
    "resourceLegacyId": [
        { "key": "id", "value": "<valor do id>" }
    ]
    ```

    Já para o `resourceName`, é importante retornar valores que ajudem o usuário final a reconhecer o recurso. Por exemplo, no caso de uma conta bancária, pode-se retornar algo como:

    ```json
    "resourceName": [
        { "key": "agencia", "value": "<número da agência>" },
        { "key": "conta", "value": "<número da conta>" }
    ]
    ```

    **O usuário não possui contas a serem retornadas. Devo retornar erro ou lista vazia?**

    Caso o usuário não possua contas, o retorno deve ser sucesso (HTTP 200) com uma lista vazia de recursos (`{ "data": { "resources": [] } }`).

    **Na descoberta de contas do fluxo de pagamentos, qual conta deve vir como "selecionada por padrão"?**

    Se o campo `debtorAccount` do consentimento estiver preenchido com uma conta válida para pagamentos, essa conta deve ser marcada como "selecionada por padrão" (`"defaultSelected": true`). Independentemente disso, todas as contas disponíveis para pagamento devem ser retornadas.

    ## Sobre Validação dos Dados de Pagamento

    **O que deve ser validado na rota específica para a validação de dados do pagamento?**

    Conferir a seção ["Validações Obrigatórias para Pagamentos"](#validações-obrigatórias-para-pagamentos).

    ## Sobre Solicitações de Criação de Pagamentos

    **Como identificar a conta escolhida pelo portador para realizar o débito?**

    Após a aprovação do consentimento de pagamento, a lista `consent.resources` enviada no payload da requisição de pagamento sempre conterá apenas um único recurso, representando a conta selecionada.  
    O campo `consent.debtorAccount` estará também sempre preenchido com as informações da conta escolhida.

    **Onde encontrar a data do pagamento para cada cenário ou tipo de pagamento?**

    Conferir a seção ["Cenários por Data de Efetivação do Pagamento"](#cenários-por-data-de-efetivação-do-pagamento).

    **A retaguarda da instituição financeira precisa suportar Agendamentos Recorrentes?**

    Não. A plataforma Opus Open Finance realizará uma requisição separada para cada data de recorrência.

    Por exemplo, ao receber uma requisição de agendamento recorrente por 5 meses, um débito por mês, a plataforma solicitará para a retaguarda da instituição financeira 5 agendamento independentes.  
    A data de cada agendamento deve ser determinada conforme descrito na seção ["Cenários por Data de Efetivação do Pagamento"](#cenários-por-data-de-efetivação-do-pagamento).
  version: 0.1.0-base4.0.0-2.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: Consentimento
  - name: Pagamentos
paths:
  /account-discovery:
    post:
      tags:
        - Consentimento
      summary: Descobrir contas de pagamento Pix.
      description: Método para descobrir contas para pagamento Pix.
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/DiscoveryAccountsPayment'
        description: Payload para descobrimento de contas para pagamento Pix.
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200ResponseDiscoveryAccountsPayment'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /payment-validation:
    post:
      tags:
        - Consentimento
      summary: Validar dados de pagamento Pix.
      description: Método para validar dados para pagamento Pix.
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/PaymentValidation'
        description: Payload para validação de dados para pagamento Pix.
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200ResponsePaymentValidation'
        '422':
          $ref: '#/components/responses/422ResponseErrorPaymentValidation'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /payments:
    post:
      tags:
        - Pagamentos
      summary: Criar iniciação de pagamento.
      description: Método para criar uma iniciação de pagamento.
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/CreatePixPayment'
        description: Payload para criação da iniciação do pagamento Pix.
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201ResponseCreatePixPayment'
        '422':
          $ref: '#/components/responses/422ResponseErrorCreatePixPayment'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /find:
    post:
      tags:
        - Pagamentos
      summary: Consultar iniciação de pagamento.
      description: Método para consultar uma iniciação de pagamento.
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/FindPixPayment'
        description: Payload para consulta da iniciação do pagamento Pix.
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200ResponseFindPixPayment'
        '422':
          $ref: '#/components/responses/422ResponseErrorFindPixPayment'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /cancellation:
    post:
      tags:
        - Pagamentos
      summary: Cancelar iniciação de pagamento.
      description: "Esse endpoint deve ser usado para cancelar, a pedido do cliente
        pagador, as transações que estejam em uma das seguintes situações: Agendada
        com sucesso (SCHD) ou retida para análise (PDNG).\n\n\n\n- Caso a requisição
        seja bem sucedida, a transação vai para a situação CANC.\n\n\n\n- Caso o status
        do pagamento seja diferente de SCHD/PDNG ou alguma outra regra de negócio
        impeça o cancelamento, a requisição retorna HTTP Status 422 com o code PAGAMENTO_NAO_PERMITE_CANCELAMENTO.\n
        \n\n\n- Caso receba um 422, a iniciadora fará uma requisição find no pagamento
        para verificar a situação atual dele, bem como detalhes associados.\n\n\n\n
        O cancelamento de pagamento agendado (SCHD) pode ser enviado até 23:59 (Horário
        de Brasília) do dia anterior à data de efetivação do pagamento.\n\n"
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/CancellationPixPayment'
        description: Payload para cancelamento do pagamento.
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200ResponseCancellationPixPayment'
        '422':
          $ref: '#/components/responses/422ResponseErrorCancellationPixPayment'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
components:
  schemas:
    BrandId:
      type: string
      description: Identificador da marca reportada pelo participante do Open Banking
      minLength: 1
      maxLength: 50
      example: cbanco
    RequestMeta:
      type: object
      description: Objeto que contém dados referentes ao contexto no qual o request
        for recebido
      required:
        - correlationId
        - brandId
      properties:
        correlationId:
          type: string
          description: UUID que identifica o correlation ID da requisição realizada.
            Deve ser propagado para todas as chamadas feitas entre sistemas e logado
            sempre que possível para facilitar o trace de erros
          pattern: 
            ^(localID:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          example: 97623ed1-4732-4bf2-8d4b-ae7aced5443b
        brandId:
          $ref: '#/components/schemas/BrandId'
      additionalProperties: false
    CreationDateTime:
      description: Data e hora em que o consentimento foi criado. Uma string com data
        e hora conforme especificação RFC-3339, sempre com a utilização de timezone
        UTC (UTC time format).
      type: string
      pattern: 
        ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
      maxLength: 20
      example: '2021-05-21T08:30:00Z'
    TPP:
      type: object
      description: Detalhes do TPP que solicitou o consentimento
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          description: Nome do TPP que solicitou o consentimento
          maxLength: 100
          example: GuiaBolsa
    ExternalId:
      type: string
      description: Identificador do consentimento utilizado fora da plataforma OOB
      maxLength: 100
      example: urn:oob-bank:2f710909-4ccd-4998-8679-3d8de00e5ccf
    LoggedUser:
      type: object
      description: Usuário (pessoa natural) que encontra-se logado na instituição
        Iniciadora de Pagamento.
      additionalProperties: false
      required:
        - document
      properties:
        document:
          type: object
          description: Documento de identificação oficial do usuário.
          additionalProperties: false
          required:
            - identification
            - rel
          properties:
            identification:
              type: string
              maxLength: 11
              description: Número do documento de identificação oficial do usuário.
              pattern: ^\d{11}$
              example: '11111111111'
            rel:
              type: string
              maxLength: 3
              description: Tipo do documento de identificação oficial do usuário.
              pattern: ^[A-Z]{3}$
              example: CPF
    BusinessEntity:
      type: object
      description: Usuário (pessoa jurídica) que encontra-se logado na instituição
        Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário
        logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).
      additionalProperties: false
      required:
        - document
      properties:
        document:
          type: object
          description: Documento de identificação oficial do titular pessoa jurídica.
          additionalProperties: false
          required:
            - identification
            - rel
          properties:
            identification:
              type: string
              maxLength: 14
              description: Número do documento de identificação oficial do titular
                pessoa jurídica.
              pattern: ^\d{14}$
              example: '11111111111111'
            rel:
              type: string
              maxLength: 4
              description: Tipo do documento de identificação oficial do titular pessoa
                jurídica.
              pattern: ^[A-Z]{4}$
              example: CNPJ
    AcceptedResources:
      description: Lista de recursos permitidos pelo cliente para serem usados no
        consentimento. Objeto de uso interno, em conectores
      type: array
      items:
        type: object
        description: Recursos selecionados pelo cliente
        required:
          - type
          - resourceLegacyId
        properties:
          type:
            description: Tipo do recurso
            type: string
            enum:
              - ACCOUNT
              - CREDIT_CARD_ACCOUNT
              - LOAN
              - FINANCING
              - UNARRANGED_ACCOUNT_OVERDRAFT
              - INVOICE_FINANCING
              - PAYMENT
              - INVOICE_FINANCING
              - BANK_FIXED_INCOME
              - CREDIT_FIXED_INCOME
              - VARIABLE_INCOME
              - TREASURE_TITLE
              - FUND
            example: PAYMENT
          resourceLegacyId:
            description: Array de chave e valor com a chave de identificação do recurso
              no sistema de origem (legado), permitindo chaves compostas
            type: array
            items:
              type: object
              required:
                - key
              properties:
                key:
                  description: Nome do campo do identificador no sistema de origem
                  type: string
                  example: internalAccountId
                value:
                  description: Valor do campo do identificador no sistema de origem
                  type: string
                  example: '1234'
            minItems: 1
            maxItems: 10
          authorizers:
            description: Lista dos autorizadores para o recurso para casos de multipla
              alçada. Caso o recurso seja selecionado, todos os autorizadores deverão
              aceitar o consentimento que o recurso faz parte
            type: array
            items:
              type: object
              required:
                - cpf
                - name
              properties:
                cpf:
                  description: CPF do autorizador
                  type: string
                  minLength: 11
                  maxLength: 11
                  pattern: ^\d{11}$
                  example: '11111111111'
                name:
                  description: Nome do autorizador
                  type: string
                  example: Marco Antonio de Brito
            minItems: 1
          hasMultipleAuthorisers:
            type: boolean
            example: 'false'
        additionalProperties: false
      maxItems: 1000
    Version:
      type: string
      description: Versão do consentimento relacionado ao pagamento.
      enum:
        - V1
        - V2
        - V3
        - V4
      example: V1
    ExpirationDateTime:
      description: Data e hora de expiração da permissão. De preenchimento obrigatório,
        reflete a data limite de validade do consentimento. Uma string com data e
        hora conforme especificação RFC-3339, sempre com a utilização de timezone
        UTC (UTC time format).
      type: string
      maxLength: 20
      pattern: 
        ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
      example: '2021-05-21T08:30:00Z'
    EnumPaymentPersonType:
      type: string
      maxLength: 15
      enum:
        - PESSOA_NATURAL
        - PESSOA_JURIDICA
      description: "Titular, pessoa natural ou juridica a quem se referem os dados
        de recebedor (creditor).\n\n"
      example: PESSOA_NATURAL
    Identification:
      type: object
      description: Somente para consentimentos de pagamento. Objeto contendo os dados
        do recebedor (creditor).
      required:
        - personType
        - cpfCnpj
        - name
      properties:
        personType:
          $ref: '#/components/schemas/EnumPaymentPersonType'
        cpfCnpj:
          type: string
          minLength: 11
          maxLength: 14
          pattern: ^\d{11}$|^\d{14}$
          description: "Identificação da pessoa envolvida na transação.  \n\nPreencher
            com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  \n\n
            O CPF será utilizado com 11 números e deverá ser informado sem pontos
            ou traços.  \n\nO CNPJ será utilizado com 14 números e deverá ser informado
            sem pontos ou traços.\n\n"
          example: '58764789000137'
        name:
          type: string
          maxLength: 140
          pattern: ^([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF,.@:&*+_<>()!?/\\$%\d'
            -]+)$
          description: "Em caso de pessoa natural deve ser informado o nome completo
            do titular da conta do recebedor.  \n\nEm caso de pessoa jurídica deve
            ser informada a razão social ou o nome fantasia da conta do recebedor.\n\
            \n"
          example: Marco Antonio de Brito
      additionalProperties: false
    EnumPaymentType:
      type: string
      maxLength: 3
      enum:
        - PIX
      description: "Este campo define o tipo de pagamento que será iniciado após a
        autorização do consentimento.\n\n"
      example: PIX
    Schedule:
      type: object
      required:
        - single
      properties:
        single:
          type: object
          description: Define a política de agendamento único.
          required:
            - date
          properties:
            date:
              type: string
              format: date
              maxLength: 10
              example: '2021-01-01'
              description: "Define a data alvo da liquidação do pagamento.\n\nO fuso
                horário de Brasília deve ser utilizado para criação e racionalização
                sobre os dados deste campo.\n\n\n\n[Restrição] Esse campo deverá sempre
                ser no mínimo D+1 corrido, ou seja, a data imediatamente posterior
                em relação a data do consentimento considerando o fuso horário de
                Brasília e deverá ser no máximo D+730 corridos a partir da data do
                consentimento, também considerando o fuso horário de Brasília."
    ScheduleDaily:
      type: object
      required:
        - daily
      properties:
        daily:
          type: object
          description: Define a política de agendamento diário.
          required:
            - startDate
            - quantity
          properties:
            startDate:
              type: string
              format: date
              pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
              maxLength: 10
              example: '2023-08-23'
              description: Define a data do primeiro pagamento de recorrência diária
            quantity:
              type: integer
              format: int32
              minimum: 2
              maximum: 60
              example: 3
              description: Define a quantidade de pagamentos que serão enviados para
                liquidação.
    ScheduleWeekly:
      type: object
      required:
        - weekly
      properties:
        weekly:
          type: object
          description: Define a política de agendamento semanal.
          required:
            - dayOfWeek
            - startDate
            - quantity
          properties:
            dayOfWeek:
              type: string
              description: Dia da semana em que ocorrerá o pagamento
              enum:
                - SEGUNDA_FEIRA
                - TERCA_FEIRA
                - QUARTA_FEIRA
                - QUINTA_FEIRA
                - SEXTA_FEIRA
                - SABADO
                - DOMINGO
              example: QUINTA_FEIRA
            startDate:
              type: string
              format: date
              pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
              maxLength: 10
              example: '2023-08-23'
            quantity:
              type: integer
              format: int32
              minimum: 2
              maximum: 60
              example: 10
              description: Define a quantidade de pagamentos que serão enviados para
                liquidação.
    ScheduleMonthly:
      type: object
      required:
        - monthly
      properties:
        monthly:
          type: object
          description: Define a política de agendamento mensal.
          required:
            - dayOfMonth
            - startDate
            - quantity
          properties:
            dayOfMonth:
              type: integer
              minimum: 1
              maximum: 31
              example: 10
            startDate:
              type: string
              format: date
              pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
              maxLength: 10
              example: '2023-08-23'
            quantity:
              type: integer
              format: int32
              minimum: 2
              maximum: 24
              example: 24
              description: Define a quantidade de pagamentos que serão enviados para
                liquidação.
    ScheduleCustom:
      type: object
      required:
        - custom
      properties:
        custom:
          type: object
          description: "[Restrição] As datas enviadas na lista de datas (array “dates”)
            não podem ser repetidas.\n\nCaso datas repetidas sejam enviadas, o detentor
            deve rejeitar a criação do consentimento, informando o erro PARAMETRO_INVALIDO."
          required:
            - dates
            - additionalInformation
          properties:
            dates:
              type: array
              maxItems: 60
              minItems: 2
              example:
                - '2023-08-23'
                - '2023-09-26'
              items:
                type: string
                format: date
                pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
                maxLength: 10
                example: '2023-08-23'
            additionalInformation:
              type: string
              description: "Texto livre para Iniciador preencher de forma compreensível
                pelo usuário aprovador/pagador.\n\nO texto pode ser utilizado pelo
                detentor para exibição do resumo da transação durante aprovação do
                usuário aprovador/pagador."
              pattern: '[\w\W\s]*'
              maxLength: 255
              example: Todas quintas e domingos por 6 meses
    PaymentConsent:
      type: object
      description: Somente para consentimentos de pagamento. Objeto contendo dados
        de pagamento para consentimento.
      required:
        - type
        - currency
        - amount
      properties:
        type:
          $ref: '#/components/schemas/EnumPaymentType'
        date:
          type: string
          format: date
          maxLength: 10
          description: "[Restrição] Mutuamente excludente com o objeto schedule. \n
            \n\n\nEste campo é obrigatório no caso de pagamento único. \n\n\n\nNeste
            caso, o objeto schedule não deve ser informado.\n\n"
          example: '2021-01-01'
        currency:
          type: string
          maxLength: 3
          pattern: ^([A-Z]{3})$
          description: "Código da moeda nacional segundo modelo ISO-4217, ou seja,
            'BRL'.\n\nTodos os valores monetários informados estão representados com
            a moeda vigente do Brasil.\n\n"
          example: BRL
        amount:
          type: string
          minLength: 4
          maxLength: 19
          pattern: ^((\d{1,16}\.\d{2}))$
          description: "Valor da transação com 2 casas decimais. O valor deve ser
            o mesmo enviado no consentimento. \n\n\n\nPara QR Code estático com valor
            pré-determinado no QR Code ou para QR Code dinâmico com indicação de que
            o valor não pode ser alterado: O campo amount deve ser preenchido com
            o valor estabelecido no QR Code. \n\nCaso seja preenchido com valor divergente
            do QR Code, deve ser retornado um erro HTTP Status 422.\n\n"
          example: '100000.12'
        schedule:
          description: "[Restrição] Mutuamente excludente com o campo date. \n\n\n
            \nEste campo é obrigatório no caso de agendamento. \n\n\n\nNeste caso,
            o campo date não deve ser informado.\n\n"
          oneOf:
            - $ref: '#/components/schemas/Schedule'
            - $ref: '#/components/schemas/ScheduleDaily'
            - $ref: '#/components/schemas/ScheduleWeekly'
            - $ref: '#/components/schemas/ScheduleMonthly'
            - $ref: '#/components/schemas/ScheduleCustom'
    EnumPaymentCancellationReasonType:
      type: string
      enum:
        - CANCELADO_PENDENCIA
        - CANCELADO_AGENDAMENTO
        - CANCELADO_MULTIPLAS_ALCADAS
      example: CANCELADO_PENDENCIA
      description: "O preenchimento desse campo para retorno, deve ocorrer pela detentora
        de contas a partir do status em que o pagamento estiver no momento da solicitação
        do cancelamento (ex. Status de pagamento = PDNG, campo deve ser preenchido
        com enum CANCELADO_PENDENCIA)\n\n\n\nValores possíveis:\n\n\n\nCANCELADO_PENDENCIA
        - Pagamento cancelado enquanto estava na situação PDNG\n\n\n\nCANCELADO_AGENDAMENTO
        - Pagamento cancelado enquanto estava na situação SCHD\n\n\n\nCANCELADO_MULTIPLAS_ALCADAS
        - Pagamento cancelado enquanto estava na situação PATC\n\n"
    EnumPaymentCancellationFromType:
      type: string
      enum:
        - INICIADORA
        - DETENTORA
      example: INICIADORA
      description: "Campo utilizado para informar o meio pelo qual foi realizado o
        cancelamento.\n\n\n\nValores possíveis:\n\n\n\nINICIADORA - Pagamento cancelado
        pelo usuário pagador nos canais da iniciadora\n\n\n\nDETENTORA - Pagamento
        cancelado pelo usuário pagador nos canais da detentora\n\n"
    PixPaymentCancellation:
      type: object
      description: "Objeto que contém os dados referentes ao usuário pagador que solicitou
        o cancelamento, o canal utilizado por ele e o motivo.  \n\n\n\n[Restrição]
        O objeto cancellation será obrigatório apenas quando o valor do campo status
        for igual a CANC. \n\n"
      required:
        - cancelledAt
        - cancelledBy
        - reason
        - cancelledFrom
      properties:
        reason:
          $ref: '#/components/schemas/EnumPaymentCancellationReasonType'
        cancelledFrom:
          $ref: '#/components/schemas/EnumPaymentCancellationFromType'
        cancelledAt:
          type: string
          description: Data e hora que foi realizado o cancelamento, conforme especificação
            RFC-3339, formato UTC.
          format: date-time
          maxLength: 20
          example: '2021-05-21T08:30:00Z'
        cancelledBy:
          type: object
          description: Informação relacionada ao usuário pagador que solicitou o cancelamento
            do pagamento.
          required:
            - document
          properties:
            document:
              type: object
              description: Objeto que consolida os dados do documento do usuário que
                solicitou o cancelamento.
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  maxLength: 11
                  description: Número do documento do usuário pagador responsável
                    pelo cancelamento do pagamento.
                  example: '11111111111'
                  pattern: ^\d{11}$
                rel:
                  type: string
                  maxLength: 3
                  description: Tipo do documento do usuário pagador responsável pelo
                    cancelamento do pagamento.
                  example: CPF
                  pattern: ^[A-Z]{3}$
    IbgeTownCode:
      type: string
      minLength: 7
      maxLength: 7
      pattern: ^\d{7}$
      description: "Traz o código da cidade segundo o IBGE (Instituto Brasileiro de
        Geografia e Estatística).\n\nPara o preenchimento deste campo, o Iniciador
        de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.\n
        \nO preenchimento do campo tanto em pix/payments quanto /consents deve ser
        igual. Caso haja divergência dos valores, a instituição deve retornar HTTP
        422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.\n\nEste campo
        faz referência ao campo CodMun do arranjo Pix.\n\n"
      example: '5300108'
    EnumLocalInstrument:
      type: string
      maxLength: 4
      enum:
        - MANU
        - DICT
        - QRDN
        - QRES
        - INIC
      description: "Especifica a forma de iniciação do pagamento:\n\n- MANU - Inserção
        manual de dados da conta transacional\n\n- DICT - Inserção manual de chave
        Pix\n\n- QRDN - QR code dinâmico\n\n- QRES - QR code estático\n\n- INIC -
        Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente
        para realizar iniciações de pagamento em que o beneficiário é previamente
        conhecido.\n\n[Restrição] Se /data/payment/schedule enviado com valor diferente
        de single durante a criação do consentimento, apenas os métodos MANU, DICT
        ou QRES são permitidos.\n\n"
      example: DICT
    QrCode:
      type: string
      maxLength: 512
      pattern: '[\w\W\s]*'
      description: "Sequência de caracteres que corresponde ao QR Code disponibilizado
        para o pagador.\n\nÉ a sequência de caracteres que seria lida pelo leitor
        de QR Code, e deve propiciar o retorno dos dados do pagador após consulta
        na DICT.\n\nEssa funcionalidade é possível tanto para QR Code estático quanto
        para QR Code dinâmico.\n\nNo arranjo do Pix esta é a mesma sequência gerada
        e/ou lida pela funcionalidade Pix Copia e Cola.\n\nEste campo deverá ser no
        formato UTF-8.\n\n[Restrição] Preenchimento obrigatório para pagamentos por
        QR Code, observado o tamanho máximo de 512 bytes.\n\n"
      example: "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\n\
        \nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n\
        \n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\n\
        \nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n\n"
    Proxy:
      description: 'Chave cadastrada no DICT pertencente ao recebedor. Os tipos de
        chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória. No caso de
        telefone celular deve ser informado no padrão E.1641. Para e-mail deve ter
        o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres. No caso de
        CPF deverá ser informado com 11 números, sem pontos ou traços. Para o caso
        de CNPJ deverá ser informado com 14 números, sem pontos ou traços. No caso
        de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato
        especificado na RFC41223. [Restrição] Obrigatório quando o campo localInstrument
        for igual a DICT.'
      type: string
      pattern: '[\w\W\s]*'
      maxLength: 77
      example: '12345678901'
    EnumAccountPaymentsType:
      type: string
      enum:
        - CACC
        - SVGS
        - TRAN
      example: CACC
      description: "Tipos de contas usadas para pagamento.\n\nModalidades tradicionais
        previstas pela Resolução 4.753, não contemplando contas vinculadas, \n\nconta
        de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente
        moeda eletrônica.\n\nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC
        - Current - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n-
        TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
    CreditorAccount:
      type: object
      description: "Objeto que contém a identificação da conta de destino do beneficiário/recebedor.\
        \  \n\n"
      required:
        - ispb
        - number
        - accountType
      properties:
        ispb:
          type: string
          minLength: 8
          maxLength: 8
          pattern: ^[0-9]{8}$
          description: "Deve ser preenchido com o ISPB (Identificador do Sistema de
            Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos
            instantâneos) somente com números.\n\n"
          example: '12345678'
        issuer:
          type: string
          minLength: 1
          maxLength: 4
          pattern: ^[0-9]{1,4}$
          description: "Código da Agência emissora da conta sem dígito.  \n\n(Agência
            é a dependência destinada ao atendimento aos clientes, ao público em geral
            e aos associados de cooperativas de crédito,  \n\nno exercício de atividades
            da instituição, não podendo ser móvel ou transitória).  \n\n[Restrição]
            Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA),
            SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n\n"
          example: '1774'
        number:
          type: string
          minLength: 1
          maxLength: 20
          pattern: ^[0-9]{1,20}$
          description: "Deve ser preenchido com o número da conta do usuário recebedor,
            com dígito verificador (se este existir),  \n\nse houver valor alfanumérico,
            este deve ser convertido para 0.\n\n"
          example: '1234567890'
        accountType:
          $ref: '#/components/schemas/EnumAccountPaymentsType'
      additionalProperties: false
    Details:
      type: object
      description: "Objeto contendo os detalhes do pagamento.\n\n"
      required:
        - localInstrument
        - creditorAccount
      properties:
        localInstrument:
          $ref: '#/components/schemas/EnumLocalInstrument'
        qrCode:
          $ref: '#/components/schemas/QrCode'
        proxy:
          $ref: '#/components/schemas/Proxy'
        creditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
      additionalProperties: false
    PixPaymentConsent:
      allOf:
        - $ref: '#/components/schemas/PaymentConsent'
      type: object
      description: Somente para consentimentos de pagamento pix. Objeto contendo dados
        de pagamento para consentimento.
      required:
        - details
      properties:
        cancellation:
          $ref: '#/components/schemas/PixPaymentCancellation'
        ibgeTownCode:
          $ref: '#/components/schemas/IbgeTownCode'
        details:
          $ref: '#/components/schemas/Details'
    EnumPurpose:
      type: integer
      maxLength: 5
      enum:
        - 1
        - 10
        - 100
        - 101
        - 103
        - 104
        - 107
        - 108
        - 109
        - 11
        - 110
        - 111
        - 112
        - 113
        - 114
        - 117
        - 12
        - 121
        - 123
        - 124
        - 13
        - 131
        - 132
        - 136
        - 139
        - 14
        - 149
        - 15
        - 150
        - 157
        - 175
        - 18
        - 19
        - 2
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 209
        - 23
        - 27
        - 28
        - 29
        - 3
        - 30
        - 300
        - 301
        - 302
        - 303
        - 31
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 4
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 47
        - 5
        - 50
        - 500
        - 501
        - 502
        - 504
        - 505
        - 507
        - 508
        - 509
        - 510
        - 511
        - 512
        - 513
        - 514
        - 515
        - 516
        - 517
        - 518
        - 519
        - 520
        - 6
        - 7
        - 8
        - 9
        - 97
        - 99999
      description: "Para o caso de TED o campo é obrigatório, para o caso de TEF não.
        É responsabilidade da iniciadora desenvolver esse condicionante de modo a
        garantir a usabilidade especificada pelo GT UX.\n\n1 - Pagamento de Impostos,
        Tributos e Taxas 10 - Crédito em Conta 100 - Depósito Judicial 101 - Pensão
        Alimentícia 103 - Cessão de créditos - Liquid.principal por aquis.créditos
        ou direitos creditórios ou fluxo de caixa garant.por créditos, por ordem cliente
        PJ financ. 104 - Cessão de créditos - Liquidação principal por aquisição de
        créditos ou direitos creditórios, por ordem de FIDC ou cia securitizadora
        107 - Cessão de créditos - Repasse contratual de fluxo de caixa ou de recebíveis
        pagos, por ordem de cliente PJ financeira 108 - Cessão de créditos - Repasse
        contratual de fluxo de caixa ou de recebíveis pagos antecipadamente, por ordem
        de cliente PJ financeira 109 - Cessão de créditos - Ajustes diversos 11 -
        Pagamento a Corretoras 110 - Transferência entre contas de mesma titularidade
        111 - Crédito para investidor em cliente da IF Creditada 112 - Débito de investidor
        em cliente da IF Debitada 113 - Pagamento de Operações de Crédito por Cliente
        114 - Resgate de aplicação financeira de cliente para conta de sua titularidade
        117 - Aplicação financeira em nome do cliente remetente 12 - Pagamento de
        Boleto Bancário em Cartório 121 - Pagamento da TIR - Pix Saque e/ou Pix Troco
        123 - Cessão de créditos - Liquid.princ.por recompra de créditos ou direitos
        creditórios ou fluxo de caixa garant.por créditos, por ordem cliente PJ financ.
        124 - Cessão de créditos - Liquidação principal por recompra de créditos ou
        direitos creditórios, por ordem de FIDC ou cia securitizadora 13 - Pagamento
        de Tarifas pela Prestação de Serviços de Arrecadação de Convênios 131 - FGCoop
        - Recolhimento Fundo Garantidor do Cooperativismo de Crédito 132 - FGCoop
        - devolução de recolhimento a maior 136 - FGTS - Saque Emergencial 139 - Crédito
        ao consumidor decorrente de programa de incentivo fiscal 14 - Repasse de Valores
        Referentes a Títulos Liquidados em Cartórios de Protesto 149 - Auxílio Emergencial
        Lei 13.982 15 - Liquidação Financeira de Operadora de Cartão 150 - Benefício
        Emergencial de Preservação do Emprego e da Renda - BEm 157 - Tributos Municipais
        ISS - LCP 157 175 - Tributos Municipais ISS TERCEIROS - LCP 157 18 - Operações
        Seguro Habitacional - SFH 19 - Operações do FDS - Caixa 2 - Pagamento à Concessionárias
        de Serviço Público 200 - Transferência Internacional em Reais 201 - Ajuste
        Posição Mercado Futuro 202 - Repasse de Valores do BNDES 203 - Liquidação
        de Compromissos Junto ao BNDES 204 - Operações de Compra e Venda de Ações
        - Bolsas de Valores e Mercado de Balcão 205 - Contratos Referenciados em Ações
        ou Índices de Ações - Bolsas de Valores, de Mercadorias e de futuros 206 -
        Operação de Câmbio - Não Interbancária 207 - Operações no Mercado de Renda
        Fixa e de Renda Variável com Utilização de Intermediário 208 - Operação de
        Câmbio - Mercado Interbancário - Instituições sem conta Reservas Bancárias
        209 - Pagamento de Operações com identificação de destinatário final 23 -
        Taxa de Administração 27 - Pagamento de Acordo / Execução Judicial 28 - Liquidação
        de Empréstimos Consignados 29 - Pagamento de bolsa auxílio 3 - Pagamentos
        de Dividendos 30 - Remuneração a cooperado 300 - Restituição de Imposto de
        Renda 301 - Ordem Bancária do Tesouro - OBT 302 - Pagamento de multas ao BACEN
        por atrasos de importação 303 - Restituição de tributos - RFB 31 - Pagamento
        de prebenda (Remuneração a padres e sacerdotes) 33 - Pagamento de juros sobre
        capital próprio 34 - Pagamento de rendimentos ou amortização s/ cotas e/ou
        debêntures 35 - Taxa de Serviço 36 - Pagamento de cheque para não correntista
        37 - Pagamento de juros e/ou amortização de títulos depositados em garantia
        nas Câmaras 38 - Estorno ou Restituição - Diversos 39 - Pagamento de Vale
        Transporte 4 - Pagamento de Salários 40 - Simples Nacional 41 - Repasse de
        valores para o FUNDEB 42 - Repasse de Valores de Convênio Centralizado 43
        - Patrocínio com Incentivo Fiscal 44 - Doação com Incentivo Fiscal 45 - Transferência
        de conta corrente de instituição não bancária para sua Conta de Liquidação
        47 - Pagamento de Rescisão de Contrato de Trabalho 5 - Pagamento de Fornecedores
        50 - Reembolso de despesas com estruturação de operações de renda fixa e variável
        500 - Restituição de Prêmios de Seguros 501 - Pagamento de Indenização de
        Sinistro de Seguro 502 - Pagamento de Prêmio de Co-Seguro 504 - Pagamento
        de Indenização de Sinistro de Co-Seguro 505 - Pagamento de Prêmio de Resseguro
        507 - Pagamento de Indenização de Sinistro de Resseguro 508 - Restituição
        de Indenização de Sinistro de Resseguro 509 - Pagamento de Despesas com Sinistros
        510 - Pagamento de Inspeções/Vistorias Prévias 511 - Pagamento de Resgate
        de Título da Capitalização 512 - Pagamento de Sorteio de Título de Capitalização
        513 - Pagamento de Devolução de Mensalidade de Título de Capitalização 514
        - Restituição de Contribuição de Plano Previdenciário 515 - Pagamento de Benefício
        Previdenciário de Pecúlio 516 - Pagamento de Benefício Previdenciário de Pensão
        517 - Pagamento de Benefício Previdenciário de Aposentadoria 518 - Pagamento
        de Resgate Previdenciário 519 - Pagamento de Comissão de Corretagem 520 -
        Pagamento de Transferências/Portabilidade de Reserva de Seguro/Previdência
        6 - Pagamento de Honorários 7 - Pagamento de Aluguéis e Taxas de Condomínio
        8 - Pagamento de Duplicatas e Títulos 9 - Pagamento de Mensalidade Escolar
        97 - Compra de Moeda Estrangeira pelo FSB - Fundo Soberano do Brasil 99999
        - Outros"
      example: 1
    PurposeAdditionalInfo:
      description: Texto livre para complementar informação relativa ao campo purpose.
        [Restrição] Preencher quando purpose for igual OUTROS.
      type: string
      pattern: '[\w\W\s]*'
      maxLength: 100
      example: Informações adicionais
    TedTefPaymentConsent:
      allOf:
        - $ref: '#/components/schemas/PaymentConsent'
      type: object
      description: Somente para consentimentos de pagamento TED. Objeto contendo dados
        de pagamento para consentimento.
      required:
        - creditorAccount
      properties:
        creditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
        purpose:
          $ref: '#/components/schemas/EnumPurpose'
        purposeAdditionalInfo:
          $ref: '#/components/schemas/PurposeAdditionalInfo'
    DebtorAccount:
      type: object
      description: "Objeto que contém a identificação da conta de origem do pagador.\
        \  \n\nAs informações quanto à conta de origem do pagador poderão ser trazidas
        no consentimento para a detentora, caso a iniciadora tenha coletado essas
        informações do cliente. Do contrário, será coletada na detentora e trazida
        para a iniciadora como resposta à criação do pagamento.\n\n"
      required:
        - ispb
        - number
        - accountType
      properties:
        ispb:
          type: string
          minLength: 8
          maxLength: 8
          pattern: ^[0-9]{8}$
          description: "Deve ser preenchido com o ISPB (Identificador do Sistema de
            Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos
            instantâneos) somente com números.\n\n"
          example: '12345678'
        issuer:
          type: string
          minLength: 1
          maxLength: 4
          pattern: ^[0-9]{1,4}$
          description: "Código da Agência emissora da conta sem dígito.  \n\n(Agência
            é a dependência destinada ao atendimento aos clientes, ao público em geral
            e aos associados de cooperativas de crédito,  \n\nno exercício de atividades
            da instituição, não podendo ser móvel ou transitória).  \n\n[Restrição]
            Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA),
            SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n\n"
          example: '1774'
        number:
          type: string
          minLength: 1
          maxLength: 20
          pattern: ^[0-9]{1,20}$
          description: "Deve ser preenchido com o número da conta transacional do
            usuário pagador, com dígito verificador (se este existir),  \n\nse houver
            valor alfanumérico, este deve ser convertido para 0.\n\n"
          example: '1234567890'
        accountType:
          $ref: '#/components/schemas/EnumAccountPaymentsType'
      additionalProperties: false
    AuthExtraData:
      type: array
      description: Array de chave e valor com dados da instituição, esses dados serão
        enviados para o conector de discovery e podem ser utilizados como filtros
        para escolha de recursos.
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            type: string
            example: agencia
          value:
            type: string
            example: '0011'
    ConsentOwner:
      type: array
      description: Array de chave e valor com os dados de indentificação referente
        ao dono do consentimento. Esses dados serão enviados para o conector de discovery.
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            type: string
            example: agencia
          value:
            type: string
            example: '0011'
    ConsentPayment:
      description: Consentimento de pagamento
      type: object
      required:
        - brandId
        - creationDateTime
        - tpp
        - externalId
        - loggedUser
        - expirationDateTime
        - creditor
        - payment
      properties:
        brandId:
          $ref: '#/components/schemas/BrandId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        tpp:
          $ref: '#/components/schemas/TPP'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        loggedUser:
          $ref: '#/components/schemas/LoggedUser'
        businessDocumentType:
          $ref: '#/components/schemas/BusinessEntity'
        resources:
          $ref: '#/components/schemas/AcceptedResources'
        version:
          $ref: '#/components/schemas/Version'
        expirationDateTime:
          $ref: '#/components/schemas/ExpirationDateTime'
        creditor:
          $ref: '#/components/schemas/Identification'
        payment:
          oneOf:
            - $ref: '#/components/schemas/PixPaymentConsent'
            - $ref: '#/components/schemas/TedTefPaymentConsent'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        authExtraData:
          $ref: '#/components/schemas/AuthExtraData'
        consentOwner:
          $ref: '#/components/schemas/ConsentOwner'
      additionalProperties: false
    StartDateTime:
      description: Data e hora em que o consentimento deve passar a ser válido. Uma
        string com data e hora conforme especificação RFC-3339, sempre com a utilização
        de timezone UTC(UTC time format).
      type: string
      maxLength: 20
      pattern: 
        ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
      example: '2021-05-21T08:30:00Z'
    Creditors:
      type: array
      minItems: 1
      items:
        type: object
        description: Objeto contendo os dados do recebedor (creditor).
        required:
          - personType
          - cpfCnpj
          - name
        properties:
          personType:
            $ref: '#/components/schemas/EnumPaymentPersonType'
          cpfCnpj:
            type: string
            minLength: 11
            maxLength: 14
            pattern: ^\d{11}$|^\d{14}$
            example: '58764789000137'
            description: "Identificação da pessoa envolvida na transação.  \n\nPreencher
              com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  \n
              \nO CPF será utilizado com 11 números e deverá ser informado sem pontos
              ou traços.  \n\nO CNPJ será utilizado com 14 números e deverá ser informado
              sem pontos ou traços.\n\n"
          name:
            type: string
            pattern: ^([A-Za-zÀ-ÖØ-öø-ÿ,.@:&*+_<>()!?/\\$%\d' -]+)$
            maxLength: 120
            example: Marco Antonio de Brito
            description: "Em caso de pessoa natural deve ser informado o nome completo
              do titular da conta do recebedor.  \n\nEm caso de pessoa jurídica deve
              ser informada a razão social ou o nome fantasia da conta do recebedor.\n\
              \n"
    ContractDebtor:
      type: object
      description: Informações sobre o cliente devedor do contrato.
      required:
        - name
        - document
      properties:
        name:
          type: string
          pattern: ^([A-Za-zÀ-ÖØ-öø-ÿ,.@:&*+_<>()!?/\\$%\d' -]+)$
          maxLength: 120
          example: Policarpo Quaresma
          description: Em caso de pessoa natural deve ser informado o nome completo
            do titular devedor do contrato.
        document:
          type: object
          required:
            - identification
            - rel
          properties:
            identification:
              type: string
              maxLength: 14
              description: Número do documento de identificação oficial do cliente
                devedor do contrato.
              example: '11111111111111'
              pattern: ^\d{14}$
            rel:
              type: string
              maxLength: 4
              description: Tipo do documento de identificação oficial do cliente devedor
                do contrato.
              example: CNPJ
              pattern: ^[A-Z]{4}$
    ImmediatePayment:
      type: object
      description: Definições para transação imediata.
      required:
        - type
        - date
        - currency
        - amount
        - creditorAccount
      properties:
        type:
          $ref: '#/components/schemas/EnumPaymentType'
        date:
          type: string
          format: date
          maxLength: 10
          pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
          example: '2021-01-01'
          description: "Define a data alvo da liquidação do pagamento.\n\nO fuso horário
            de Brasília deve ser utilizado para criação e racionalização sobre os
            dados deste campo.\n\n"
        currency:
          type: string
          maxLength: 3
          pattern: ^([A-Z]{3})$
          example: BRL
          description: "Código da moeda nacional segundo modelo ISO-4217, ou seja,
            'BRL'.\n\nTodos os valores monetários informados estão representados com
            a moeda vigente do Brasil.\n\n"
        amount:
          type: string
          minLength: 4
          maxLength: 19
          pattern: ^((\d{1,16}\.\d{2}))$
          example: '100000.12'
          description: "Valor da transação com 2 casas decimais.\n\n"
        remittanceInformation:
          type: string
          maxLength: 140
          pattern: '[\w\W\s]*'
          example: Pagamento da nota RSTO035-002
          description: "Deve ser preenchido sempre que o usuário pagador inserir alguma
            informação adicional em um pagamento, a ser enviada ao recebedor.\n\n"
        creditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
    AutomaticV1:
      type: object
      description: Definição da configuração de recorrência para pagamentos automáticos
      required:
        - contractId
        - period
        - contractDebtor
      properties:
        contractId:
          type: string
          pattern: ^[a-zA-Z0-9]{1,35}$
          minLength: 1
          maxLength: 35
          example: XE00038166201907261559y6j6
          description: Identificador do contrato de transação
        amount:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: Valor da transação com 2 casas decimais.
        transactionLimit:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '1000000.12'
          description: Valor da transação com 2 casas decimais.
        period:
          type: string
          enum:
            - DIARIO
            - SEMANAL
            - MENSAL
            - ANUAL
          example: DIARIO
          description: "Define a periodicidade permitida para realização de transações\n
            \n- DIARIO\n\n- SEMANAL\n\n- MENSAL\n\n- ANUAL\n\n"
        dayOfMonth:
          type: integer
          format: int32
          minimum: 1
          maximum: 31
          example: 10
          description: "Dia fixo do mês que está prevista a transação.\n\n\n\n[Restrição]
            Campo deve ser enviado quando o campo `/data/recurringConfiguration/automatic/period`
            for igual a MENSAL ou ANUAL.\n\n"
        dayOfWeek:
          type: string
          enum:
            - SEGUNDA_FEIRA
            - TERCA_FEIRA
            - QUARTA_FEIRA
            - QUINTA_FEIRA
            - SEXTA_FEIRA
          example: SEGUNDA_FEIRA
          description: "Dia da semana que está prevista a transação.\n\n- SEGUNDA_FEIRA\n
            \n- TERCA_FEIRA\n\n- QUARTA_FEIRA\n\n- QUINTA_FEIRA\n\n- SEXTA_FEIRA\n
            \n\n\n[Restrição] Campo deve ser enviado quando o campo `/data/recurringConfiguration/automatic/period`
            for igual a SEMANAL.\n\n"
        month:
          type: string
          enum:
            - JANEIRO
            - FEVEREIRO
            - MARCO
            - ABRIL
            - MAIO
            - JUNHO
            - JULHO
            - AGOSTO
            - SETEMBRO
            - OUTUBRO
            - NOVEMBRO
            - DEZEMBRO
          example: JANEIRO
          description: "Mês previstos para ocorrer transações.\n\n- JANEIRO\n\n- FEVEREIRO\n
            \n- MARCO\n\n- ABRIL\n\n- MAIO\n\n- JUNHO\n\n- JULHO\n\n- AGOSTO\n\n-
            SETEMBRO\n\n- OUTUBRO\n\n- NOVEMBRO\n\n- DEZEMBRO\n\n\n\n[Restrição] Campo
            deve ser enviado quando o campo `/data/recurringConfiguration/automatic/period`
            for igual a ANUAL\n\n"
        contractDebtor:
          $ref: '#/components/schemas/ContractDebtor'
        immediatePayment:
          $ref: '#/components/schemas/ImmediatePayment'
      additionalProperties: false
    AutomaticV2:
      type: object
      description: Definição da configuração de recorrência para pagamentos automáticos
      required:
        - contractId
        - interval
        - contractDebtor
        - isRetryAccepted
        - useOverdraftLimit
        - referenceStartDateTime
      properties:
        contractId:
          type: string
          pattern: ^[a-zA-Z0-9]{1,35}$
          minLength: 1
          maxLength: 35
          example: XE00038166201907261559y6j6
          description: Identificador do contrato de transação
        fixedAmount:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: "Valor fixo de cobrança, caso preenchido, representa um consentimento
            para pagamentos de valores fixos, ou não sujeitos a alteração durante
            a vigência do consentimento. \n\n\n\n[Restrição] Excludente com o campo
            “/data/recurringConfiguration/automatic/maximumVariableAmount”\n\n"
        maximumVariableAmount:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '1000000.12'
          description: "Valor máximo permitido por cobrança, caso preenchido, representa
            um consentimento para pagamentos de valores variáveis. \n\n\n\n[Restrição]
            Excludente com o campo “/data/recurringConfiguration/automatic/fixedAmount”\n\
            \n"
        interval:
          type: string
          enum:
            - SEMANAL
            - MENSAL
            - ANUAL
            - SEMESTRAL
            - TRIMESTRAL
          example: SEMANAL
          description: "Define a periodicidade permitida para realização de transações\n
            \n- SEMANAL\n\n- MENSAL\n\n- ANUAL\n\n- SEMESTRAL\n\n- TRIMESTRAL\n\n"
        contractDebtor:
          $ref: '#/components/schemas/ContractDebtor'
        firstPayment:
          $ref: '#/components/schemas/ImmediatePayment'
        minimumVariableAmount:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: "Valor definido pelo usuário recebedor. \n\nSe o usuário pagador
            atribuir um valor máximo para os pagamentos daquela autorização, ele não
            poderá ser inferior ao valor mínimo (piso) definido pelo usuário recebedor.
            \n\nNão pode ser preenchido nas autorizações de valor fixo.\n\n"
        isRetryAccepted:
          type: boolean
          description: Indica se é permitido pelo cliente recebedor fazer tentativas
            de pagamento (extradia), conforme as regras estabelecidas no arranjo Pix.
          example: false
        useOverdraftLimit:
          type: boolean
          default: true
          example: true
          description: Indica se o usuário pagador autorizou a utilização de limite
            pré-aprovado (cheque especial) na sua conta para realização de pagamentos,
            caso o cliente possua o produto.
        referenceStartDateTime:
          type: string
          format: date-time
          pattern: 
            ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
          description: "Representa a data prevista para a primeira ocorrência de um
            pagamento associado a recorrência. \n\nUma string com data e hora conforme
            especificação [RFC-3339](https://datatracker.ietf.org/doc/html/rfc3339),
            sempre com a utilização de timezone UTC(UTC time format).\n\n"
          example: '2023-05-21T08:30:00Z'
      additionalProperties: false
    Automatic:
      type: object
      required:
        - automatic
      properties:
        automatic:
          oneOf:
            - $ref: '#/components/schemas/AutomaticV1'
            - $ref: '#/components/schemas/AutomaticV2'
      additionalProperties: false
    Day:
      type: object
      description: "Configurar limite transacional diário determinado pelo usuário
        pagador.\n\n\n\n[Restrição] Caso enviado o objeto, ao menos um dos campos
        (`quantityLimit` ou `transactionLimit`) devem ser preenchidos.\n\n"
      properties:
        quantityLimit:
          type: integer
          example: 2
          description: Quantidade limite de transações permitidas para ocorrer durante
            um dia.
        transactionLimit:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: Valor máximo a ser transacionado diariamente.
    Week:
      type: object
      description: "Configurar limite transacional semanal determinado pelo usuário
        pagador.\n\n\n\n[Restrição] Caso enviado o objeto, ao menos um dos campos
        (`quantityLimit` ou `transactionLimit`) devem ser preenchidos\n\n"
      properties:
        quantityLimit:
          type: integer
          example: 10
          description: Quantidade limite de transações permitidas para ocorrer durante
            uma semana.
        transactionLimit:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: Valor máximo a ser transacionado semanalmente.
    Month:
      type: object
      description: "Configurar limite transacional mensal determinado pelo usuário
        pagador.\n\n\n\n[Restrição] Caso enviado o objeto, ao menos um dos campos
        (`quantityLimit` ou `transactionLimit`) devem ser preenchidos\n\n"
      properties:
        quantityLimit:
          type: integer
          example: 30
          description: Quantidade limite de transações permitidas para ocorrer durante
            um mês.
        transactionLimit:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: Valor máximo a ser transacionado mensalmente.
    Year:
      type: object
      description: "Configurar limite transacional anual determinado pelo usuário
        pagador.\n\n\n\n[Restrição] Caso enviado o objeto, ao menos um dos campos
        (`quantityLimit` ou `transactionLimit`) devem ser preenchidos\n\n"
      properties:
        quantityLimit:
          type: integer
          example: 100
          description: Quantidade limite de transações permitidas para ocorrer durante
            um ano.
        transactionLimit:
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.12'
          description: Valor máximo a ser transacionado por um ano, a partir da data
            definida no campo `/data/startDateTime`.
    PeriodicLimits:
      type: object
      description: Limites transacionais por período determinado pelo usuário pagador.
      properties:
        day:
          $ref: '#/components/schemas/Day'
        week:
          $ref: '#/components/schemas/Week'
        month:
          $ref: '#/components/schemas/Month'
        year:
          $ref: '#/components/schemas/Year'
    PostSweeping:
      type: object
      required:
        - sweeping
      properties:
        sweeping:
          type: object
          description: Definição da configuração de recorrência para transferências
            automáticas de fundos.
          properties:
            totalAllowedAmount:
              type: string
              minLength: 4
              maxLength: 19
              pattern: ^((\d{1,16}\.\d{2}))$
              example: '100000.12'
              description: Valor máximo a ser atingido pelo somatório de todas as
                transações que utilizam o consentimento autorizado pelo cliente. Caso
                o valor seja superado, a detentora de conta deve negar a transação
                solicitada pela iniciadora.
            transactionLimit:
              type: string
              pattern: ^((\d{1,16}\.\d{2}))$
              minLength: 4
              maxLength: 19
              example: '1000000.12'
              description: Valor máximo para cada transação de pagamento associada
                a esse consentimento. Caso valor do pagamento seja maior que esse
                limite, a detentora de contas deve rejeitar a transação de pagamento.
            periodicLimits:
              $ref: '#/components/schemas/PeriodicLimits'
      additionalProperties: false
    Vrp:
      type: object
      required:
        - vrp
      properties:
        vrp:
          type: object
          description: Definição da configuração de recorrência para realização de
            transações de valores variáveis
          properties:
            transactionLimit:
              type: string
              pattern: ^((\d{1,16}\.\d{2}))$
              minLength: 4
              maxLength: 19
              example: '100000.12'
              description: Limite máximo de valor permitido para cada transação de
                pagamento.
            globalLimits:
              type: object
              description: Limite transacional máximo para pagamentos, após atingir
                este valor, o consentimento deve ir para o status "CONSUMED".
              properties:
                quantityLimit:
                  type: integer
                  example: 10
                  description: Quantidade máxima de ocorrência  de pagamentos, após
                    atingir este valor, o consentimento deve ir para o status "CONSUMED"
                transactionLimit:
                  type: string
                  pattern: ^((\d{1,16}\.\d{2}))$
                  minLength: 4
                  maxLength: 19
                  example: '100000.12'
                  description: Valor transacional máximo para pagamentos sob este
                    consentimento, após atingir este valor, o consentimento deve ir
                    para o status "CONSUMED".
            periodicLimits:
              type: object
              description: Limites transacionais por período determinado pelo usuário
                pagador.
              properties:
                day:
                  $ref: '#/components/schemas/Day'
                week:
                  $ref: '#/components/schemas/Week'
                month:
                  $ref: '#/components/schemas/Month'
                year:
                  $ref: '#/components/schemas/Year'
      additionalProperties: false
    AdditionalInformation:
      description: Deve ser preenchido sempre que o usuário pagador inserir alguma
        informação adicional no consentimento
      type: string
      example: Minha recorrência
      pattern: '[\w\W\s]*'
      maxLength: 140
    ConsentRecurringPayment:
      description: Consentimento de pagamento recorrente
      type: object
      required:
        - brandId
        - creationDateTime
        - tpp
        - externalId
        - loggedUser
        - creditors
        - recurringConfiguration
      properties:
        brandId:
          $ref: '#/components/schemas/BrandId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        tpp:
          $ref: '#/components/schemas/TPP'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        loggedUser:
          $ref: '#/components/schemas/LoggedUser'
        businessDocumentType:
          $ref: '#/components/schemas/BusinessEntity'
        resources:
          $ref: '#/components/schemas/AcceptedResources'
        version:
          $ref: '#/components/schemas/Version'
        startDateTime:
          $ref: '#/components/schemas/StartDateTime'
        expirationDateTime:
          $ref: '#/components/schemas/ExpirationDateTime'
        creditors:
          $ref: '#/components/schemas/Creditors'
        recurringConfiguration:
          oneOf:
            - $ref: '#/components/schemas/Automatic'
            - $ref: '#/components/schemas/PostSweeping'
            - $ref: '#/components/schemas/Vrp'
        cancellation:
          $ref: '#/components/schemas/PixPaymentCancellation'
        additionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        authExtraData:
          $ref: '#/components/schemas/AuthExtraData'
        consentOwner:
          $ref: '#/components/schemas/ConsentOwner'
      additionalProperties: false
    Permissions:
      type: array
      items:
        description: Permissões atribuídas ao vínculo de conta
        type: string
        enum:
          - PAYMENTS_INITIATE
      minItems: 1
      example:
        - PAYMENTS_INITIATE
    ConsentEnrollment:
      description: Consentimento de pagamento
      type: object
      required:
        - brandId
        - creationDateTime
        - tpp
        - externalId
        - loggedUser
        - expirationDateTime
      properties:
        brandId:
          $ref: '#/components/schemas/BrandId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        tpp:
          $ref: '#/components/schemas/TPP'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        loggedUser:
          $ref: '#/components/schemas/LoggedUser'
        businessDocumentType:
          $ref: '#/components/schemas/BusinessEntity'
        resources:
          $ref: '#/components/schemas/AcceptedResources'
        version:
          $ref: '#/components/schemas/Version'
        permissions:
          $ref: '#/components/schemas/Permissions'
        expirationDateTime:
          $ref: '#/components/schemas/ExpirationDateTime'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        authExtraData:
          $ref: '#/components/schemas/AuthExtraData'
        consentOwner:
          $ref: '#/components/schemas/ConsentOwner'
      additionalProperties: false
    PaymentType:
      type: string
      description: Indicador do tipo de pagamento
      maxLength: 25
      enum:
        - PAYMENT_CONSENT
        - PAYMENT_RECURRING_CONSENT
        - PAYMENT_ENROLLMENT_CONSENT
      example: PAYMENT_CONSENT
    DiscoveryAccountsPayment:
      type: object
      required:
        - requestMeta
        - consent
      properties:
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        consent:
          oneOf:
            - $ref: '#/components/schemas/ConsentPayment'
            - $ref: '#/components/schemas/ConsentRecurringPayment'
            - $ref: '#/components/schemas/ConsentEnrollment'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
      additionalProperties: false
    EndToEndIdWithoutRestriction:
      type: string
      minLength: 32
      maxLength: 32
      description: 'Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk
        (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas),
        sendo: “E” – fixo (1 caractere);  xxxxxxxx – identificação do agente que gerou
        o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante
        indireto (8 caracteres numéricos [0-9]);  yyyyMMddHHmm – data, hora e minuto
        (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento,
        caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema
        de liquidação, caso seja realizado um agendamento. Para ordens prioritárias
        e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´,
        com uma tolerância máxima de 12 horas, para o futuro e para o passado, em
        relação ao horário efetivo de processamento da ordem pelo SPI;  kkkkkkkkkkk
        – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos
        [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”. Admite-se que
        o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto
        ou pelo iniciador de pagamento. Ele deve ser único, não podendo ser repetido
        em qualquer outra operação enviada ao SPI.'
      pattern: 
        ^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$
      example: E9040088820210128000800123873170
    RemittanceInformation:
      description: Deve ser preenchido sempre que o usuário pagador inserir alguma
        informação adicional em um pagamento, a ser enviada ao recebedor.
      type: string
      pattern: '[\w\W\s]*'
      maxLength: 140
      example: Pagamento da nota XPTO035-002.
    CnpjInitiator:
      type: string
      pattern: ^\d{14}$
      maxLength: 14
      description: CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação
        de Serviço de Iniciação no Pix.
      example: '50685362000135'
    TransactionIdentification:
      description: "Trata-se de um identificador de transação que deve ser retransmitido
        intacto pelo PSP do pagador ao gerar a ordem de pagamento.\n\n\n\n[Restrição]
        A detentora deve obrigatoriamente retornar o campo com o mesmo valor recebido
        da iniciadora, caso ele tenha sido enviado na requisição da iniciação do pagamento.\n\
        \n"
      type: string
      maxLength: 35
      pattern: ^[a-zA-Z0-9]{1,35}$
      example: E00038166201907261559y6j6
    EnumValidationStage:
      type: string
      enum:
        - POST_CONSENT
        - POST_PAYMENT
      example: POST_CONSENT
      description: "Momento referente a chamada da validação de pagamento\n\n\n\n
        Segue descrição de cada valor do ENUM.\n\n\n\n\n\n\n\n- POST_CONSENT - Validação
        chamada no momento do post consent\n\n\n\n- POST_PAYMENT - Validação chamada
        no momento do post payment\n\n\n\n"
    ValidatePaymentConsent:
      type: object
      description: Objeto contendo as informações de consentimento para a iniciação
        de pagamento individual.
      required:
        - tpp
        - loggedUser
        - creditor
        - payment
      properties:
        tpp:
          $ref: '#/components/schemas/TPP'
        loggedUser:
          $ref: '#/components/schemas/LoggedUser'
        BusinessEntity:
          $ref: '#/components/schemas/BusinessEntity'
        creditor:
          $ref: '#/components/schemas/Identification'
        payment:
          allOf:
            - $ref: '#/components/schemas/PixPaymentConsent'
            - type: object
              properties:
                endToEndId:
                  $ref: '#/components/schemas/EndToEndIdWithoutRestriction'
                remittanceInformation:
                  $ref: '#/components/schemas/RemittanceInformation'
                cnpjInitiator:
                  $ref: '#/components/schemas/CnpjInitiator'
                transactionIdentification:
                  $ref: '#/components/schemas/TransactionIdentification'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        validationStage:
          $ref: '#/components/schemas/EnumValidationStage'
      additionalProperties: false
    PixPaymentRecurringConsent:
      type: object
      description: Somente para consentimentos de pagamento pix. Objeto contendo dados
        de pagamento para consentimento.
      properties:
        cancellation:
          $ref: '#/components/schemas/PixPaymentCancellation'
        ibgeTownCode:
          $ref: '#/components/schemas/IbgeTownCode'
        recurringConfiguration:
          oneOf:
            - $ref: '#/components/schemas/Automatic'
            - $ref: '#/components/schemas/PostSweeping'
            - $ref: '#/components/schemas/Vrp'
    ValidatePaymentRecurringConsent:
      type: object
      description: Objeto contendo as informações de consentimento para a iniciação
        de pagamento individual.
      required:
        - tpp
        - loggedUser
        - creditors
        - payment
      properties:
        tpp:
          $ref: '#/components/schemas/TPP'
        loggedUser:
          $ref: '#/components/schemas/LoggedUser'
        BusinessEntity:
          $ref: '#/components/schemas/BusinessEntity'
        creditors:
          $ref: '#/components/schemas/Creditors'
        payment:
          allOf:
            - $ref: '#/components/schemas/PixPaymentRecurringConsent'
            - type: object
              properties:
                endToEndId:
                  $ref: '#/components/schemas/EndToEndIdWithoutRestriction'
                remittanceInformation:
                  $ref: '#/components/schemas/RemittanceInformation'
                cnpjInitiator:
                  $ref: '#/components/schemas/CnpjInitiator'
                transactionIdentification:
                  $ref: '#/components/schemas/TransactionIdentification'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        validationStage:
          $ref: '#/components/schemas/EnumValidationStage'
      additionalProperties: false
    PaymentValidation:
      type: object
      required:
        - requestMeta
        - requestBody
      properties:
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        requestBody:
          type: object
          description: Payload para validacao do pagamento.
          required:
            - data
          properties:
            data:
              oneOf:
                - $ref: '#/components/schemas/ValidatePaymentConsent'
                - $ref: '#/components/schemas/ValidatePaymentRecurringConsent'
            paymentType:
              $ref: '#/components/schemas/PaymentType'
      additionalProperties: false
    RequestMetaPayment:
      type: object
      description: Objeto que contém dados referentes ao contexto no qual o request
        for recebido
      required:
        - correlationId
        - brandId
      properties:
        correlationId:
          type: string
          description: UUID que identifica o correlation ID da requisição realizada.
            Deve ser propagado para todas as chamadas feitas entre sistemas e logado
            sempre que possível para facilitar o trace de erros
          pattern: 
            ^(localID:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          example: 97623ed1-4732-4bf2-8d4b-ae7aced5443b
        brandId:
          $ref: '#/components/schemas/BrandId'
        nfcHeader:
          type: string
          description: O campo representa uma transação iniciada via NFC. O envio
            desse campo é obrigatório nesse cenário. As detentoras devem armazenar
            a informação e correlacioná-la com o consentimento e o pagamento originado.
          example: 'true'
      additionalProperties: false
    RecurringConsentId:
      type: string
      pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9\-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
      maxLength: 256
      description: "Identificador único do consentimento de longa duração criado para
        a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource
        Name. \n\nUm URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141)
        é um Uniform Resource \n\nIdentifier - URI - que é atribuído sob o URI scheme
        \"urn\" e um namespace URN específico, com a intenção de que o URN \n\nseja
        um identificador de recurso persistente e independente da localização. \n\n
        Considerando a string urn:bancoex:C1DD33123 como exemplo para `recurringConsentId`
        temos:\n\n- o namespace(urn)\n\n- o identificador associado ao namespace da
        instituição transmissora (bancoex)\n\n- o identificador específico dentro
        do namespace (C1DD33123).\n\nInformações mais detalhadas sobre a construção
        de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n
        \n\n\n[Restrição] Este campo é de preenchimento obrigatório quando o valor
        do campo authorisationFlow for igual a FIDO_FLOW.\n\n"
    PaymentData:
      type: object
      description: Objeto contendo dados do pagameto como moeda e valor
      required:
        - amount
        - currency
      properties:
        amount:
          description: "Valor da transação com 2 casas decimais. O valor deve ser
            o mesmo enviado no consentimento. \n\n\n\nPara QR Code estático com valor
            pré-determinado no QR Code ou para QR Code dinâmico com indicação de que
            o valor não pode ser alterado: O campo amount deve ser preenchido com
            o valor estabelecido no QR Code. \n\nCaso seja preenchido com valor divergente
            do QR Code, deve ser retornado um erro HTTP Status 422.\n\n"
          type: string
          pattern: ^((\d{1,16}\.\d{2}))$
          minLength: 4
          maxLength: 19
          example: '100000.04'
        currency:
          type: string
          maxLength: 3
          description: Código da moeda nacional segundo modelo ISO-4217, ou seja,
            'BRL'. Todos os valores monetários informados estão representados com
            a moeda vigente do Brasil.
          pattern: ^([A-Z]{3})$
          example: BRL
      additionalProperties: false
    Date:
      type: string
      description: Data em que o recurso foi criado. Uma string com a utilização de
        timezone UTC(UTC time format).
      format: date
      maxLength: 10
      example: '2021-01-01'
    Document:
      type: object
      description: Informações do documento identificador.
      required:
        - identification
        - rel
      properties:
        identification:
          type: string
          minLength: 11
          maxLength: 14
          description: Número do documento de identificação oficial do titular pessoa
            natural ou jurídica.
          example: '11111111111111'
          pattern: ^(?:\d{11}|\d{14})$
        rel:
          type: string
          enum:
            - CPF
            - CNPJ
          example: CNPJ
          description: Tipo do documento de identificação oficial do titular pessoa
            natural ou jurídica.
    RiskSignalsPayments:
      type: object
      description: "Sinais de risco para iniciação de pagamentos automáticos\n\n\n
        \n[Restrição] Deve ser enviado quando o consentimento for para o produto Sweeping
        Accounts (O objeto \"/data/recurringConfiguration/sweeping\" usado no oneOf)\n\
        \n"
      properties:
        manual:
          type: object
          required:
            - deviceId
            - isRootedDevice
            - screenBrightness
            - elapsedTimeSinceBoot
            - osVersion
            - userTimeZoneOffset
            - language
            - screenDimensions
            - accountTenure
          description: "Representa a coleta de sinais de risco com a presença do usuário\n
            \n\n\n[Restrição] Obrigatório de ser enviado quando a transação ocorrer
            na presença do usuário\n\n"
          properties:
            deviceId:
              type: string
              description: ID único do dispositivo gerado pela plataforma.
              example: 00000000-54b3-e7c7-0000-000046bffd97
            isRootedDevice:
              type: boolean
              description: Indica se o dispositivo atualmente está com permissão de
                “root”.
              example: false
            screenBrightness:
              type: number
              format: double
              description: "Indica o nível de brilho da tela do dispositivo.  \n\n
                Em dispositivos Android o valor é um inteiro, entre 0 e 255, inclusive;\
                \  \n\nEm dispositivos iOS o valor é um ponto flutuante entre 0.0
                e 1.0.\n\n"
            elapsedTimeSinceBoot:
              type: integer
              format: int64
              description: Indica por quanto tempo (em milissegundos) o dispositivo
                está ligado.
            osVersion:
              type: string
              description: Versão do sistema operacional.
            userTimeZoneOffset:
              type: string
              description: "Indica a configuração de fuso horário do dispositivo do
                usuário, com o formato UTC offset: ±hh[:mm]\n\n"
            language:
              type: string
              description: Indica o idioma do dispositivo no formato ISO 639-1.
            screenDimensions:
              type: object
              description: Dimensões da tela do dispositivo
              required:
                - height
                - width
              properties:
                height:
                  type: integer
                  format: int64
                  description: Altura da tela, em pixels.
                width:
                  type: integer
                  format: int64
                  description: Largura da tela, em pixels.
            accountTenure:
              type: string
              format: date
              pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
              description: Data de cadastro do cliente na iniciadora.
            geolocation:
              type: object
              description: Dados de geolocalização do cliente enquanto logado na iniciadora
              properties:
                latitude:
                  type: number
                  format: double
                  description: Coordenada latitudial do cliente enquanto logado na
                    iniciadora
                longitude:
                  type: number
                  format: double
                  description: Coordenada longitudinal do cliente enquanto logado
                    na iniciadora
                type:
                  type: string
                  description: "Tipo de mecanismo utilizado na geração da geolocalização\n\
                    \n"
                  enum:
                    - COARSE
                    - FINE
                    - INFERRED
            isCallInProgress:
              type: boolean
              description: "Indica chamada ativa no momento do vínculo.\n\n\n\n[Restrição]
                Caso o sinal de risco esteja disponível (cliente permitiu que fosse
                coletado), o mesmo deverá ser enviado\n\n"
            isDevModeEnabled:
              type: boolean
              description: Indica se o dispositivo está em modo de desenvolvedor.
            isMockGPS:
              type: boolean
              description: Indica se o dispositivo está usando um GPS falso.
            isEmulated:
              type: boolean
              description: Indica se o dispositivo é emulado ou real.
            isMonkeyRunner:
              type: boolean
              description: Indica o uso do MonkeyRunner.
            isCharging:
              type: boolean
              description: Indica se a bateria do dispositivo está sendo carregada.
            antennaInformation:
              type: string
              description: Indica em qual antena o dispositivo está conectado.
            isUsbConnected:
              type: boolean
              description: Indica se o dispositivo está conectado a outro dispositivo
                via USB.
            integrity:
              type: object
              description: "Informa a integridade do dispositivo e app.  \n\nNo Android,
                conforme documentação Play API Integrity - [Android](https://developer.android.com/google/play/integrity/overview?hl=pt-br).\
                \  \n\nNo iOS, conforme documentação App Attest [iOS](https://developer.apple.com/documentation/devicecheck/establishing_your_app_s_integrity)\n\
                \n"
              properties:
                appRecognitionVerdict:
                  type: string
                  description: Informa a integridade do app
                deviceRecognitionVerdict:
                  type: string
                  description: Informa a integridade do dispositivo
        automatic:
          type: object
          required:
            - lastLoginDateTime
            - pixKeyRegistrationDateTime
          description: "Representa a coleta de sinais de risco com a presença do usuário\n
            \n\n\n[Restrição] Obrigatório de ser enviado quando a transação não ocorrer
            na presença do usuário\n\n"
          properties:
            lastLoginDateTime:
              type: string
              description: Data e hora do último login do cliente na iniciadora
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
            pixKeyRegistrationDateTime:
              type: string
              description: Data e hora de cadastro da chave Pix do recebedor na iniciadora
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
    LegacyId:
      description: Array de chave e valor com a chave de identificação do recurso
        no sistema de origem (legado), permitindo chaves compostas
      type: array
      items:
        type: object
        required:
          - key
        properties:
          key:
            description: Nome do campo do identificador no sistema de origem
            type: string
            example: internalPaymentId
          value:
            description: Valor do campo do identificador no sistema de origem
            type: string
            example: '1234'
      minItems: 1
      maxItems: 10
    CreatePixPaymentData:
      type: object
      description: Objeto contendo dados do pagamento e do recebedor (creditor).
      required:
        - localInstrument
        - payment
        - cnpjInitiator
        - endToEndId
      properties:
        endToEndId:
          $ref: '#/components/schemas/EndToEndIdWithoutRestriction'
        recurringConsentId:
          $ref: '#/components/schemas/RecurringConsentId'
        localInstrument:
          $ref: '#/components/schemas/EnumLocalInstrument'
        payment:
          $ref: '#/components/schemas/PaymentData'
        creditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
        remittanceInformation:
          $ref: '#/components/schemas/RemittanceInformation'
        qrCode:
          $ref: '#/components/schemas/QrCode'
        proxy:
          $ref: '#/components/schemas/Proxy'
        cnpjInitiator:
          $ref: '#/components/schemas/CnpjInitiator'
        transactionIdentification:
          $ref: '#/components/schemas/TransactionIdentification'
        ibgeTownCode:
          $ref: '#/components/schemas/IbgeTownCode'
        date:
          $ref: '#/components/schemas/Date'
        document:
          $ref: '#/components/schemas/Document'
        authorisationFlow:
          type: string
          enum:
            - HYBRID_FLOW
            - CIBA_FLOW
            - FIDO_FLOW
          example: HYBRID_FLOW
          description: "Campo condicional utilizado para identificar o fluxo de autorização
            em que o pagamento foi solicitado.\n\n\n\n[Restrição] Se CIBA ou FIDO,
            preenchimento obrigatório. Caso o campo não esteja presente no payload,
            subentende-se que o fluxo de autorização utilizado é o HYBRID_FLOW.\n\n"
        riskSignals:
          $ref: '#/components/schemas/RiskSignalsPayments'
        originalRecurringPaymentId:
          $ref: '#/components/schemas/LegacyId'
      additionalProperties: false
    CreatePixPayment:
      type: object
      required:
        - requestMeta
        - consent
      properties:
        requestMeta:
          $ref: '#/components/schemas/RequestMetaPayment'
        consent:
          oneOf:
            - $ref: '#/components/schemas/ConsentPayment'
            - $ref: '#/components/schemas/ConsentRecurringPayment'
        idempotencyKey:
          type: string
          description: Identificador de solicitação exclusivo para suportar a idempotência.
          maxLength: 40
          pattern: ^(?!\s)(.*)(\S)$
          example: TXpRMU9UQTROMWhZV2xSU1FUazJSMDl
        requestBody:
          type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/CreatePixPaymentData'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
      additionalProperties: false
    PaymentId:
      description: Array de chave e valor com a chave de identificação do recurso
        no sistema de origem (legado), permitindo chaves compostas
      type: array
      items:
        type: object
        required:
          - key
        properties:
          key:
            description: Nome do campo do identificador no sistema de origem
            type: string
            example: internalPaymentId
          value:
            description: Valor do campo do identificador no sistema de origem
            type: string
            example: '1234'
      minItems: 1
      maxItems: 10
    FindPixPayment:
      type: object
      required:
        - requestMeta
        - consent
      properties:
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        paymentId:
          $ref: '#/components/schemas/PaymentId'
        consent:
          oneOf:
            - $ref: '#/components/schemas/ConsentPayment'
            - $ref: '#/components/schemas/ConsentRecurringPayment'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
      additionalProperties: false
    EnumPaymentCancellationStatusType:
      type: string
      enum:
        - CANC
        - REJECTED
      example: CANC
      description: "Utilizado para informar para qual estado deve ir o pagamento.\
        \  \n\nAtualmente o único valor possível é CANC.\n\n"
    PatchPixPaymentData:
      type: object
      required:
        - status
        - cancellation
      properties:
        status:
          $ref: '#/components/schemas/EnumPaymentCancellationStatusType'
        cancellation:
          type: object
          description: "Objeto que agrupa as informações de qual foi o usuário pagador
            que solicitou o cancelamento da transação.  \n\nObservação: este campo
            é necessário porque, em casos de múltiplas alçadas de autorização, é possível
            que o pagamento seja solicitado por um usuário pagador e cancelado por
            outro.\n\n"
          required:
            - cancelledBy
          properties:
            cancelledBy:
              type: object
              description: Informação relacionada ao usuário pagador que solicitou
                o cancelamento do pagamento.
              required:
                - document
              properties:
                document:
                  type: object
                  description: Objeto que consolida os dados do documento do usuário
                    que solicitou o cancelamento.
                  required:
                    - identification
                    - rel
                  properties:
                    identification:
                      type: string
                      maxLength: 11
                      description: Número do documento do usuário pagador responsável
                        pelo cancelamento do pagamento.
                      example: '11111111111'
                      pattern: ^\d{11}$
                    rel:
                      type: string
                      maxLength: 3
                      description: Tipo do documento do usuário pagador responsável
                        pelo cancelamento do pagamento.
                      example: CPF
                      pattern: ^[A-Z]{3}$
    EnumRecurringPaymentCancellationStatusType:
      type: string
      enum:
        - REJECTED
      example: REJECTED
      description: "Estado para qual o pagamento deverá transitar\n\n"
    PatchPixRecurringPaymentData:
      type: object
      required:
        - status
        - cancellation
      properties:
        status:
          $ref: '#/components/schemas/EnumRecurringPaymentCancellationStatusType'
        cancellation:
          type: object
          description: "Informações gerais sobre o cancelamento.\n\n"
          required:
            - cancelledBy
          properties:
            cancelledBy:
              type: object
              description: Informações gerais sobre o usuário que solicitou o cancelamento.
              required:
                - document
              properties:
                document:
                  type: object
                  description: Objeto que consolida os dados do documento do usuário
                    que solicitou o cancelamento.
                  required:
                    - identification
                    - rel
                  properties:
                    identification:
                      type: string
                      maxLength: 11
                      description: Número do documento de identificação oficial do
                        usuário.
                      example: '11111111111'
                      pattern: ^\d{11}$
                    rel:
                      type: string
                      maxLength: 3
                      description: Tipo do documento de identificação oficial do usuário.
                      example: CPF
                      pattern: ^[A-Z]{3}$
    CancellationPixPayment:
      type: object
      required:
        - requestMeta
        - consent
      properties:
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        paymentId:
          $ref: '#/components/schemas/PaymentId'
        idempotencyKey:
          type: string
          description: Identificador de solicitação exclusivo para suportar a idempotência.
          maxLength: 40
          pattern: ^(?!\s)(.*)(\S)$
          example: TXpRMU9UQTROMWhZV2xSU1FUazJSMDl
        consent:
          oneOf:
            - $ref: '#/components/schemas/ConsentPayment'
            - $ref: '#/components/schemas/ConsentRecurringPayment'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        requestBody:
          type: object
          required:
            - data
          properties:
            data:
              oneOf:
                - $ref: '#/components/schemas/PatchPixPaymentData'
                - $ref: '#/components/schemas/PatchPixRecurringPaymentData'
      additionalProperties: false
    DiscoveryPaymentsResponse:
      description: Retorno do discovery de recursos
      type: object
      required:
        - resources
      properties:
        resources:
          description: Lista de recursos relacionados ao discovery
          type: array
          items:
            type: object
            required:
              - resourceName
              - resourceLegacyId
              - authorizers
              - debtorAccount
            properties:
              resourceName:
                description: "Array de chave e valor com o nome do recurso, esses
                  dados serão apresentados nos frontends no formato: 'Key1: Value1
                  Key2: Value2 ...'"
                type: array
                items:
                  type: object
                  required:
                    - key
                  properties:
                    key:
                      description: Chave do caption do nome do recurso
                      type: string
                      example: Numero da conta
                    value:
                      description: Valor do caption do nome do recurso
                      type: string
                      example: 1234-5
                minItems: 1
                maxItems: 10
              resourceLegacyId:
                description: Array de chave e valor com a chave de identificação do
                  recurso no sistema de origem (legado), permitindo chaves compostas
                type: array
                items:
                  type: object
                  required:
                    - key
                  properties:
                    key:
                      description: Nome do campo do identificador no sistema de origem
                      type: string
                      example: internalAccountId
                    value:
                      description: Valor do campo do identificador no sistema de origem
                      type: string
                      example: '1234'
                minItems: 1
                maxItems: 10
              resourceBalanceCurrency:
                description: Moeda do saldo do recurso. Opcional para apresentação
                  na seleção do recurso no consentimento de pagamento.
                type: string
                maxLength: 3
                pattern: ^([A-Z]{3})$
                example: BRL
              resourceBalanceAmount:
                description: Valor do saldo do recurso. Opcional para apresentação
                  na seleção do recurso no consentimento de pagamento.
                type: string
                pattern: ^((\d{1,16}\.\d{2}))$
                minLength: 4
                maxLength: 19
                example: '100000.04'
              authorizers:
                description: Lista dos autorizadores para o recurso para casos de
                  multipla alçada. Caso o recurso seja selecionado, todos os autorizadores
                  deverão aceitar o consentimento que o recurso faz parte
                type: array
                items:
                  type: object
                  required:
                    - cpf
                    - name
                  properties:
                    cpf:
                      description: CPF do autorizador
                      type: string
                      minLength: 11
                      maxLength: 11
                      pattern: ^\d{11}$
                      example: '11111111111'
                    name:
                      description: Nome do autorizador
                      type: string
                      example: Marco Antonio de Brito
                minItems: 1
              defaultSelected:
                description: 'Indica se o recurso deve estar selecionado por padrão
                  na tela de consentimento. Valor padrão: false'
                type: boolean
                example: 'false'
              debtorAccount:
                type: object
                description: "Objeto que contém a identificação da conta de origem
                  do pagador.  \n\n\n\nAs informações quanto à conta de origem do
                  pagador poderão ser trazidas no consentimento para a detentora,
                  caso a iniciadora tenha coletado essas informações do cliente. Do
                  contrário, será coletada na detentora e trazida para a iniciadora
                  como resposta à criação do pagamento.\n\n\n\n"
                required:
                  - ispb
                  - number
                  - accountType
                properties:
                  ispb:
                    type: string
                    minLength: 8
                    maxLength: 8
                    pattern: ^[0-9]{8}$
                    example: '12345678'
                    description: "Deve ser preenchido com o ISPB (Identificador do
                      Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema
                      de pagamentos instantâneos) somente com números.\n\n\n\n"
                  issuer:
                    type: string
                    minLength: 1
                    maxLength: 4
                    pattern: ^[0-9]{1,4}$
                    example: '1774'
                    description: "Código da Agência emissora da conta sem dígito.
                      \n\n\n\n(Agência é a dependência destinada ao atendimento aos
                      clientes, ao público em geral e aos associados de cooperativas
                      de crédito, \n\n\n\nno exercício de atividades da instituição,
                      não podendo ser móvel ou transitória).\n\n\n\n\n\n\n\n[Restrição]
                      Preenchimento obrigatório para os seguintes tipos de conta:
                      CACC (CONTA_DEPOSITO_A_VISTA) e SVGS (CONTA_POUPANCA).\n\n\n\
                      \n"
                  number:
                    type: string
                    minLength: 1
                    maxLength: 20
                    pattern: ^[0-9]{1,20}$
                    example: '1234567890'
                    description: "Deve ser preenchido com o número da conta transacional
                      do usuário pagador, com dígito verificador (se este existir),\
                      \  \n\n\n\nse houver valor alfanumérico, este deve ser convertido
                      para 0.\n\n\n\n"
                  accountType:
                    type: string
                    enum:
                      - CACC
                      - SVGS
                      - TRAN
                    example: CACC
                    description: "Tipos de contas usadas para pagamento.\n\n\n\nModalidades
                      tradicionais previstas pela Resolução 4.753, não contemplando
                      contas vinculadas, \n\n\n\nconta de domiciliados no exterior,
                      contas em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                      \n\n\nSegue descrição de cada valor do ENUM.\n\n\n\n\n\n\n\n
                      - CACC - Current - Conta Corrente.\n\n\n\n- SVGS - Savings -
                      Conta de Poupança.\n\n\n\n- TRAN - TransactingAccount - Conta
                      de Pagamento pré-paga.\n\n\n\n"
              useOverdraftLimit:
                type: boolean
                default: true
                example: true
                description: Indica se o usuário pagador autorizou a utilização de
                  limite pré-aprovado (cheque especial) na sua conta para realização
                  de pagamentos, caso o cliente possua o produto.
    ResponseDiscoveryAccountsPayment:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/DiscoveryPaymentsResponse'
      additionalProperties: false
    ResponsePaymentValidation:
      type: object
      additionalProperties: false
    ResponseCreatePixPayment:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo dados do pagamento e da conta do recebedor
            (creditor).
          required:
            - paymentId
            - endToEndId
            - creationDateTime
            - statusUpdateDateTime
            - status
            - localInstrument
            - payment
            - creditorAccount
            - cnpjInitiator
            - debtorAccount
          properties:
            paymentId:
              description: Array de chave e valor com a chave de identificação do
                recurso no sistema de origem (legado), permitindo chaves compostas
              type: array
              items:
                type: object
                properties:
                  key:
                    description: Nome do campo do identificador no sistema de origem
                    type: string
                  value:
                    description: Valor do campo do identificador no sistema de origem
                    type: string
                required:
                  - key
              example:
                - key: pk_CampoUm
                  value: ABC
                - key: pk_CampoDois
                  value: '123'
            endToEndId:
              type: string
              minLength: 32
              maxLength: 32
              pattern: 
                ^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$
              example: E9040088820210128000800123873170
              description: "Trata-se de um identificador único, gerado na instituição
                iniciadora de pagamento e recebido na instituição detentora de conta,
                permeando toda a jornada do pagamento Pix.\n\n\n\n[Restrição] A detentora
                deve obrigatoriamente retornar o campo Com o mesmo valor recebido
                da iniciadora.\n\n"
            consentId:
              type: string
              maxLength: 256
              pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9\-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
              example: urn:bancoex:C1DD33123
              description: "Identificador único do consentimento criado para a iniciação
                de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.\n
                \nUm URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141)
                é um Uniform Resource\n\nIdentifier - URI - que é atribuído sob o
                URI scheme \"urn\" e um namespace URN específico, com a intenção de
                que o URN\n\nseja um identificador de recurso persistente e independente
                da localização.\n\nConsiderando a string urn:bancoex:C1DD33123 como
                exemplo para consentId temos:\n\n- o namespace(urn)\n\n- o identificador
                associado ao namespace da instituição transnmissora (bancoex)\n\n
                - o identificador específico dentro do namespace (C1DD33123).\n\n
                Informações mais detalhadas sobre a construção de namespaces devem
                ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
                Não deve ser retornado para pagamentos automáticos.\n\n"
            creationDateTime:
              type: string
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
              example: '2020-07-21T08:30:00Z'
              description: "Data e hora em que o recurso foi criado.\n\nUma string
                com data e hora conforme especificação RFC-3339,\n\nsempre com a utilização
                de timezone UTC(UTC time format).\n\n"
            statusUpdateDateTime:
              type: string
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
              example: '2020-07-21T08:30:00Z'
              description: "Data e hora da última atualização da iniciação de pagamento.\n
                \nUma string com data e hora conforme especificação RFC-3339,\n\n
                sempre com a utilização de timezone UTC(UTC time format).\n\n"
            proxy:
              type: string
              maxLength: 77
              pattern: '[\w\W\s]*'
              example: '12345678901'
              description: "Chave cadastrada no DICT pertencente ao recebedor. Os
                tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.\n
                \nNo caso de telefone celular deve ser informado no padrão E.1641.\n
                \nPara e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo
                77 caracteres.\n\nNo caso de CPF deverá ser informado com 11 números,
                sem pontos ou traços.\n\nPara o caso de CNPJ deverá ser informado
                com 14 números, sem pontos ou traços.\n\nNo caso de chave aleatória
                deve ser informado o UUID gerado pelo DICT, conforme formato especificado
                na RFC41223.\n\nSe informado, a detentora da conta deve validar o
                proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES
                e validar o campo creditorAccount.\n\nEsta validação é opcional caso
                o localInstrument for igual a INIC.\n\n[Restrição] Se localInstrument
                for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument
                for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre
                preenchido com a chave Pix.\n\n"
            ibgeTownCode:
              type: string
              minLength: 7
              maxLength: 7
              pattern: ^\d{7}$
              example: '5300108'
              description: "O campo ibgetowncode no arranjo PIX, tem o mesmo comportamento
                que o campo codMun descrito no item 1.6.6 do manual do PIX, conforme
                segue:\n\n\n\n1. Caso a informação referente ao município não seja
                enviada; o PSP do recebedor assumirá que não existem feriados estaduais
                e municipais no período em questão;\n\n"
            status:
              type: string
              enum:
                - RCVD
                - PATC
                - CANC
                - ACCP
                - ACPD
                - RJCT
                - ACSC
                - PDNG
                - SCHD
              example: PDNG
              description: "Estado atual da iniciação de pagamento. O estado evolui
                na seguinte ordem:  \n\n\n\n1.  RCVD (Received) - Indica que a requisição
                de pagamento foi recebida com sucesso pela detentora, mas ainda há
                validações a serem feitas antes de ser submetida para liquidação.\n\
                \n\n\n2.  PATC (Partially Accepted Technical Correct) - Indica que
                a transação precisa da confirmação de mais autorizadores para que
                o processamento do pagamento possa prosseguir.  \n\n\n\n3.  CANC (Cancelled)
                - Indica que a transação Pix pendente foi cancelada com sucesso pelo
                usuário antes que fosse confirmada (ACCP) ou rejeitada (RJCT) pela
                detentora.\n\n\n\n4.  ACCP( Accepted Customer Profile) - Indica que
                todas as verificações necessárias já foram realizadas pela detentora
                e que a transação está pronta para ser enviada para liquidação (no
                SPI se for Pix para outra instituição ou internamente se for para
                outra conta na mesma instituição).\n\n\n\n5.  ACPD (Accepted Clearing
                Processed) - Indica que a detentora já submeteu a transação para liquidação,
                mas ainda não tem a confirmação se foi liquidada ou rejeitada.\n\n\
                \n\n6.  RJCT (Rejected) Indica que a transação foi rejeitada pela
                detentora ou pelo SPI.\n\n\n\n7.  ACSC (Accepted Settlement Completed
                Debitor Account) - Indica que a transação foi efetivada pela detentora
                ou pelo SPI.\n\n\n\n8.  PDNG (Pending) - Indica que a detentora reteve
                temporariamente a transação Pix para análise.\n\n\n\n9.  SCHD (Scheduled)
                - Indica que a transação Pix foi agendada com sucesso na detentora.\n
                \n\n\nEm caso insucesso: \n\n \n\nRJCT (REJECTED) - Instrução de pagamento
                rejeitada.\n\n[Restrição] O status PATC não deverá ser retornado para
                pagamentos de consentimento de versão maior que V4.\n\n"
            rejectionReason:
              type: object
              description: "Motivo da rejeição do pagamento. Informações complementares
                sobre o motivo do status\n\n[Restrição] Esse motivo deverá ser enviado
                quando o campo /data/status for igual a RJCT (REJECTED)."
              required:
                - code
                - detail
              properties:
                code:
                  type: string
                  enum:
                    - SALDO_INSUFICIENTE
                    - VALOR_ACIMA_LIMITE
                    - VALOR_INVALIDO
                    - COBRANCA_INVALIDA
                    - NAO_INFORMADO
                    - PAGAMENTO_DIVERGENTE_CONSENTIMENTO
                    - DETALHE_PAGAMENTO_INVALIDO
                    - PAGAMENTO_RECUSADO_DETENTORA
                    - PAGAMENTO_RECUSADO_SPI
                    - FALHA_INFRAESTRUTURA
                    - FALHA_INFRAESTRUTURA_SPI
                    - FALHA_INFRAESTRUTURA_DICT
                    - FALHA_INFRAESTRUTURA_ICP
                    - FALHA_INFRAESTRUTURA_PSP_RECEBEDOR
                    - FALHA_INFRAESTRUTURA_DETENTORA
                    - CONTAS_ORIGEM_DESTINO_IGUAIS
                  example: SALDO_INSUFICIENTE
                  description: "Define o código da razão pela qual o pagamento foi
                    rejeitado\n\n\n\n- SALDO_INSUFICIENTE - A conta selecionada não
                    possui saldo suficiente para realizar o pagamento.\n\n\n\n- VALOR_ACIMA_LIMITE
                    - O valor ultrapassa o limite estabelecido [na instituição/no
                    arranjo/outro] para permitir a realização de transações pelo cliente.\n
                    \n\n\n- VALOR_INVALIDO - O valor enviado não é válido para o QR
                    Code informado.\n\n\n\n- COBRANCA_INVALIDA - Validação de expiração,
                    validação de vencimento ou Status Válido.\n\n\n\n- NAO_INFORMADO
                    - Não reportado/identificado pela instituição detentora de conta.\n
                    \n\n\n- PAGAMENTO_DIVERGENTE_CONSENTIMENTO - Dados do pagamento
                    divergentes dos dados do consentimento.\n\n\n\n- DETALHE_PAGAMENTO_INVALIDO
                    - Parâmetro [nome_campo] não obedecer às regras de negócio.\n\n
                    \n\n- PAGAMENTO_RECUSADO_DETENTORA - [Descrição do motivo de recusa].\n
                    \n\n\n- PAGAMENTO_RECUSADO_SPI - [Código de erro conforme tabela
                    de domínios reason PACS.002].\n\n\n\n- FALHA_INFRAESTRUTURA -
                    [Descrição de qual falha na infraestrutura inviabilizou o processamento].\n
                    \n\n\n- FALHA_INFRAESTRUTURA_SPI - Indica uma falha no Sistema
                    de Pagamentos Instantâneos (SPI).\n\n\n\n- FALHA_INFRAESTRUTURA_DICT
                    - Indica uma falha no Diretório de Identificadores de Contas Transacionais
                    (DICT).\n\n\n\n- FALHA_INFRAESTRUTURA_ICP - Indica uma falha na
                    Infraestrutura de Chaves Públicas (ICP).\n\n\n\n- FALHA_INFRAESTRUTURA_PSP_RECEBEDOR
                    - Indica uma falha na infraestrutura do Prestador de Serviço de
                    Pagamento (PSP) que recebe o pagamento.\n\n\n\n- FALHA_INFRAESTRUTURA_DETENTORA
                    - indica uma falha na infraestrutura da instituição detentora
                    das informações ou recursos.\n\n\n\n- CONTAS_ORIGEM_DESTINO_IGUAIS
                    - Indica uma tentativa de pagamento onde a conta origem e a conta
                    de destino são iguais.\n\n\n\nO rejectionReason FALHA_INFRAESTRUTURA
                    não será excluído, apenas deixará de ser utilizado, permitindo
                    assim, retrocompatibilidade e integridade entre os participantes.\n\
                    \n"
                detail:
                  type: string
                  pattern: '[\w\W\s]*'
                  maxLength: 2048
                  description: Contém informações adicionais ao pagamento rejeitado
            localInstrument:
              type: string
              enum:
                - MANU
                - DICT
                - QRDN
                - QRES
                - INIC
              example: DICT
              description: "Especifica a forma de iniciação do pagamento:\n\n- MANU
                - Inserção manual de dados da conta transacional\n\n- DICT - Inserção
                manual de chave Pix\n\n- QRDN - QR code dinâmico\n\n- QRES - QR code
                estático\n\n- INIC - Indica que o recebedor (creditor) contratou o
                Iniciador de Pagamentos especificamente para realizar iniciações de
                pagamento em que o beneficiário é previamente conhecido.\n\n"
            cnpjInitiator:
              type: string
              pattern: ^\d{14}$
              maxLength: 14
              example: '50685362000135'
              description: CNPJ do Iniciador de Pagamento devidamente habilitado para
                a prestação de Serviço de Iniciação no Pix.
            payment:
              type: object
              description: Objeto contendo dados do pagameto como moeda e valor.
              required:
                - amount
                - currency
              properties:
                amount:
                  type: string
                  minLength: 4
                  maxLength: 19
                  pattern: ^((\d{1,16}\.\d{2}))$
                  example: '100000.12'
                  description: "Valor da transação com 2 casas decimais. O valor deve
                    ser o mesmo enviado no consentimento. \n\n\n\nPara QR Code estático
                    com valor pré-determinado no QR Code ou para QR Code dinâmico
                    com indicação de que o valor não pode ser alterado: O campo amount
                    deve ser preenchido com o valor estabelecido no QR Code. \n\n
                    Caso seja preenchido com valor divergente do QR Code, deve ser
                    retornado um erro HTTP Status 422.\n\n"
                currency:
                  type: string
                  maxLength: 3
                  pattern: ^([A-Z]{3})$
                  example: BRL
                  description: "Código da moeda nacional segundo modelo ISO-4217,
                    ou seja, 'BRL'.  \n\nTodos os valores monetários informados estão
                    representados com a moeda vigente do Brasil.\n\n"
            transactionIdentification:
              type: string
              pattern: ^[a-zA-Z0-9]{1,35}$
              maxLength: 35
              example: E00038166201907261559y6j6
              description: "Trata-se de um identificador de transação que deve ser
                retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento.\n
                \n\n\n[Restrição] A detentora deve obrigatoriamente retornar o campo
                com o mesmo valor recebido da iniciadora, caso ele tenha sido enviado
                na requisição da iniciação do pagamento.\n\n"
            remittanceInformation:
              type: string
              maxLength: 140
              pattern: '[\w\W\s]*'
              example: Pagamento da nota RSTO035-002.
              description: "Deve ser preenchido sempre que o usuário pagador inserir
                alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n\
                \n"
            creditorAccount:
              type: object
              description: "Objeto que contém a identificação da conta de destino
                do beneficiário/recebedor.  \n\n"
              required:
                - ispb
                - number
                - accountType
              properties:
                ispb:
                  type: string
                  minLength: 8
                  maxLength: 8
                  pattern: ^[0-9]{8}$
                  example: '12345678'
                  description: "Deve ser preenchido com o ISPB (Identificador do Sistema
                    de Pagamentos Brasileiros) do participante do SPI (Sistema de
                    pagamentos instantâneos) somente com números.\n\n"
                issuer:
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: ^[0-9]{1,4}$
                  example: '1774'
                  description: "Código da Agência emissora da conta sem dígito. \n
                    \n(Agência é a dependência destinada ao atendimento aos clientes,
                    ao público em geral e aos associados de cooperativas de crédito,
                    \n\nno exercício de atividades da instituição, não podendo ser
                    móvel ou transitória).\n\n\n\n[Restrição] Preenchimento obrigatório
                    para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA)
                    e SVGS (CONTA_POUPANCA).\n\n"
                number:
                  type: string
                  minLength: 1
                  maxLength: 20
                  pattern: ^[0-9]{1,20}$
                  example: '1234567890'
                  description: "Deve ser preenchido com o número da conta do usuário
                    recebedor, com dígito verificador (se este existir),  \n\nse houver
                    valor alfanumérico, este deve ser convertido para 0.\n\n"
                accountType:
                  type: string
                  enum:
                    - CACC
                    - SVGS
                    - TRAN
                  example: CACC
                  description: "Tipos de contas usadas para pagamento.\n\nModalidades
                    tradicionais previstas pela Resolução 4.753, não contemplando
                    contas vinculadas, \n\nconta de domiciliados no exterior, contas
                    em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                    \nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC - Current
                    - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n
                    - TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
            debtorAccount:
              type: object
              description: "Objeto que contém a identificação da conta de origem do
                pagador.  \n\nAs informações quanto à conta de origem do pagador poderão
                ser trazidas no consentimento para a detentora, caso a iniciadora
                tenha coletado essas informações do cliente. Do contrário, será coletada
                na detentora e trazida para a iniciadora como resposta à criação do
                pagamento.\n\n"
              required:
                - ispb
                - number
                - accountType
              properties:
                ispb:
                  type: string
                  minLength: 8
                  maxLength: 8
                  pattern: ^[0-9]{8}$
                  example: '12345678'
                  description: "Deve ser preenchido com o ISPB (Identificador do Sistema
                    de Pagamentos Brasileiros) do participante do SPI (Sistema de
                    pagamentos instantâneos) somente com números.\n\n"
                issuer:
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: ^[0-9]{1,4}$
                  example: '1774'
                  description: "Código da Agência emissora da conta sem dígito. \n
                    \n(Agência é a dependência destinada ao atendimento aos clientes,
                    ao público em geral e aos associados de cooperativas de crédito,
                    \n\nno exercício de atividades da instituição, não podendo ser
                    móvel ou transitória).\n\n\n\n[Restrição] Preenchimento obrigatório
                    para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA)
                    e SVGS (CONTA_POUPANCA).\n\n"
                number:
                  type: string
                  minLength: 1
                  maxLength: 20
                  pattern: ^[0-9]{1,20}$
                  example: '1234567890'
                  description: "Deve ser preenchido com o número da conta transacional
                    do usuário pagador, com dígito verificador (se este existir),\
                    \  \n\nse houver valor alfanumérico, este deve ser convertido
                    para 0.\n\n"
                accountType:
                  type: string
                  enum:
                    - CACC
                    - SVGS
                    - TRAN
                  example: CACC
                  description: "Tipos de contas usadas para pagamento.\n\nModalidades
                    tradicionais previstas pela Resolução 4.753, não contemplando
                    contas vinculadas, \n\nconta de domiciliados no exterior, contas
                    em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                    \nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC - Current
                    - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n
                    - TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
            authorisationFlow:
              type: string
              enum:
                - HYBRID_FLOW
                - CIBA_FLOW
                - FIDO_FLOW
              example: HYBRID_FLOW
              description: "Campo condicional utilizado para identificar o fluxo de
                autorização em que o pagamento foi solicitado.\n\n\n\n[Restrição]
                Se CIBA ou FIDO, preenchimento obrigatório. Caso o campo não esteja
                presente no payload, subentende-se que o fluxo de autorização utilizado
                é o HYBRID_FLOW.\n\n"
            document:
              type: object
              description: Informações do documento identificador.
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  minLength: 11
                  maxLength: 14
                  description: Número do documento de identificação oficial do titular
                    pessoa natural ou jurídica.
                  example: '11111111111111'
                  pattern: ^(?:\d{11}|\d{14})$
                rel:
                  type: string
                  enum:
                    - CPF
                    - CNPJ
                  example: CNPJ
                  description: Tipo do documento de identificação oficial do titular
                    pessoa natural ou jurídica.
            date:
              type: string
              description: 'Data em que o recurso foi criado. Uma string com a utilização
                de timezone UTC(UTC time format). Atenção: campo de retorno obrigatório
                para pagamentos de transferências inteligentes.'
              format: date-time
              maxLength: 10
              example: '2021-01-01'
        meta:
          type: object
          description: Meta informações referente à API requisitada.
          required:
            - hasMoreRecords
            - requestDateTime
          properties:
            hasMoreRecords:
              type: boolean
              description: Indica se tem mais registros a serem retornados (true)
                ou não (false).
              example: true
    ResponseFindPixPayment:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo dados do pagamento e da conta do recebedor
            (creditor).
          required:
            - paymentId
            - endToEndId
            - creationDateTime
            - statusUpdateDateTime
            - status
            - localInstrument
            - payment
            - cnpjInitiator
            - debtorAccount
          properties:
            paymentId:
              description: Array de chave e valor com a chave de identificação do
                recurso no sistema de origem (legado), permitindo chaves compostas
              type: array
              items:
                type: object
                properties:
                  key:
                    description: Nome do campo do identificador no sistema de origem
                    type: string
                  value:
                    description: Valor do campo do identificador no sistema de origem
                    type: string
                required:
                  - key
              example:
                - key: pk_CampoUm
                  value: ABC
                - key: pk_CampoDois
                  value: '123'
            endToEndId:
              type: string
              minLength: 32
              maxLength: 32
              pattern: 
                ^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$
              example: E9040088820210128000800123873170
              description: "Trata-se de um identificador único, gerado na instituição
                iniciadora de pagamento e recebido na instituição detentora de conta,
                permeando toda a jornada do pagamento Pix.\n\n\n\n[Restrição] A detentora
                deve obrigatoriamente retornar o campo Com o mesmo valor recebido
                da iniciadora.\n\n"
            document:
              type: object
              description: Informações do documento identificador.
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  minLength: 11
                  maxLength: 14
                  description: Número do documento de identificação oficial do titular
                    pessoa natural ou jurídica.
                  example: '11111111111111'
                  pattern: ^(?:\d{11}|\d{14})$
                rel:
                  type: string
                  enum:
                    - CPF
                    - CNPJ
                  example: CNPJ
                  description: Tipo do documento de identificação oficial do titular
                    pessoa natural ou jurídica.
            consentId:
              type: string
              maxLength: 256
              pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9\-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
              example: urn:bancoex:C1DD33123
              description: "Identificador único do consentimento criado para a iniciação
                de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.\n
                \nUm URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141)
                é um Uniform Resource\n\nIdentifier - URI - que é atribuído sob o
                URI scheme \"urn\" e um namespace URN específico, com a intenção de
                que o URN\n\nseja um identificador de recurso persistente e independente
                da localização.\n\nConsiderando a string urn:bancoex:C1DD33123 como
                exemplo para consentId temos:\n\n- o namespace(urn)\n\n- o identificador
                associado ao namespace da instituição transnmissora (bancoex)\n\n
                - o identificador específico dentro do namespace (C1DD33123).\n\n
                Informações mais detalhadas sobre a construção de namespaces devem
                ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
                Não deve ser retornado para pagamentos automáticos.\n\n"
            creationDateTime:
              type: string
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
              example: '2020-07-21T08:30:00Z'
              description: "Data e hora em que o recurso foi criado.\n\nUma string
                com data e hora conforme especificação RFC-3339,\n\nsempre com a utilização
                de timezone UTC(UTC time format).\n\n"
            statusUpdateDateTime:
              type: string
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
              example: '2020-07-21T08:30:00Z'
              description: "Data e hora da última atualização da iniciação de pagamento.\n
                \nUma string com data e hora conforme especificação RFC-3339,\n\n
                sempre com a utilização de timezone UTC(UTC time format).\n\n"
            proxy:
              type: string
              maxLength: 77
              pattern: '[\w\W\s]*'
              example: '12345678901'
              description: "Chave cadastrada no DICT pertencente ao recebedor. Os
                tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.\n
                \nNo caso de telefone celular deve ser informado no padrão E.1641.\n
                \nPara e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo
                77 caracteres.\n\nNo caso de CPF deverá ser informado com 11 números,
                sem pontos ou traços.\n\nPara o caso de CNPJ deverá ser informado
                com 14 números, sem pontos ou traços.\n\nNo caso de chave aleatória
                deve ser informado o UUID gerado pelo DICT, conforme formato especificado
                na RFC41223.\n\nSe informado, a detentora da conta deve validar o
                proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES
                e validar o campo creditorAccount.\n\nEsta validação é opcional caso
                o localInstrument for igual a INIC.\n\n[Restrição] Se localInstrument
                for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument
                for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre
                preenchido com a chave Pix.\n\n"
            ibgeTownCode:
              type: string
              minLength: 7
              maxLength: 7
              pattern: ^\d{7}$
              example: '5300108'
              description: "O campo ibgetowncode no arranjo PIX, tem o mesmo comportamento
                que o campo codMun descrito no item 1.6.6 do manual do PIX, conforme
                segue:\n\n\n\n1. Caso a informação referente ao município não seja
                enviada; o PSP do recebedor assumirá que não existem feriados estaduais
                e municipais no período em questão;\n\n"
            status:
              type: string
              enum:
                - RCVD
                - PATC
                - CANC
                - ACCP
                - ACPD
                - RJCT
                - ACSC
                - PDNG
                - SCHD
              example: PDNG
              description: "Estado atual da iniciação de pagamento. O estado evolui
                na seguinte ordem:  \n\n\n\n1.  RCVD (Received) - Indica que a requisição
                de pagamento foi recebida com sucesso pela detentora, mas ainda há
                validações a serem feitas antes de ser submetida para liquidação.\n\
                \n\n\n2.  PATC (Partially Accepted Technical Correct) - Indica que
                a transação precisa da confirmação de mais autorizadores para que
                o processamento do pagamento possa prosseguir.  \n\n\n\n3.  CANC (Cancelled)
                - Indica que a transação Pix pendente foi cancelada com sucesso pelo
                usuário antes que fosse confirmada (ACCP) ou rejeitada (RJCT) pela
                detentora.\n\n\n\n4.  ACCP( Accepted Customer Profile) - Indica que
                todas as verificações necessárias já foram realizadas pela detentora
                e que a transação está pronta para ser enviada para liquidação (no
                SPI se for Pix para outra instituição ou internamente se for para
                outra conta na mesma instituição).\n\n\n\n5.  ACPD (Accepted Clearing
                Processed) - Indica que a detentora já submeteu a transação para liquidação,
                mas ainda não tem a confirmação se foi liquidada ou rejeitada.\n\n\
                \n\n6.  RJCT (Rejected) Indica que a transação foi rejeitada pela
                detentora ou pelo SPI.\n\n\n\n7.  ACSC (Accepted Settlement Completed
                Debitor Account) - Indica que a transação foi efetivada pela detentora
                ou pelo SPI.\n\n\n\n8.  PDNG (Pending) - Indica que a detentora reteve
                temporariamente a transação Pix para análise.\n\n\n\n9.  SCHD (Scheduled)
                - Indica que a transação Pix foi agendada com sucesso na detentora.\n
                \n\n\nEm caso insucesso: \n\n \n\nRJCT (REJECTED) - Instrução de pagamento
                rejeitada.\n\n[Restrição] O status PATC não deverá ser retornado para
                pagamentos de consentimento de versão maior que V4.\n\n"
            rejectionReason:
              type: object
              description: "Motivo da rejeição do pagamento. Informações complementares
                sobre o motivo do status\n\n[Restrição] Esse motivo deverá ser enviado
                quando o campo /data/status for igual a RJCT (REJECTED)."
              required:
                - code
                - detail
              properties:
                code:
                  type: string
                  enum:
                    - SALDO_INSUFICIENTE
                    - VALOR_ACIMA_LIMITE
                    - VALOR_INVALIDO
                    - COBRANCA_INVALIDA
                    - NAO_INFORMADO
                    - PAGAMENTO_DIVERGENTE_CONSENTIMENTO
                    - DETALHE_PAGAMENTO_INVALIDO
                    - PAGAMENTO_RECUSADO_DETENTORA
                    - PAGAMENTO_RECUSADO_SPI
                    - FALHA_INFRAESTRUTURA
                    - FALHA_INFRAESTRUTURA_SPI
                    - FALHA_INFRAESTRUTURA_DICT
                    - FALHA_INFRAESTRUTURA_ICP
                    - FALHA_INFRAESTRUTURA_PSP_RECEBEDOR
                    - FALHA_INFRAESTRUTURA_DETENTORA
                    - FALHA_AGENDAMENTO_PAGAMENTOS
                    - CONTAS_ORIGEM_DESTINO_IGUAIS
                    - CONSENTIMENTO_INVALIDO
                  example: SALDO_INSUFICIENTE
                  description: "Define o código da razão pela qual o pagamento foi
                    rejeitado\n\n\n\n- SALDO_INSUFICIENTE - A conta selecionada não
                    possui saldo suficiente para realizar o pagamento.\n\n\n\n- VALOR_ACIMA_LIMITE
                    - O valor ultrapassa o limite estabelecido [na instituição/no
                    arranjo/outro] para permitir a realização de transações pelo cliente.\n
                    \n\n\n- VALOR_INVALIDO - O valor enviado não é válido para o QR
                    Code informado.\n\n\n\n- COBRANCA_INVALIDA - Validação de expiração,
                    validação de vencimento ou Status Válido.\n\n\n\n- NAO_INFORMADO
                    - Não reportado/identificado pela instituição detentora de conta.\n
                    \n\n\n- PAGAMENTO_DIVERGENTE_CONSENTIMENTO - Dados do pagamento
                    divergentes dos dados do consentimento.\n\n\n\n- DETALHE_PAGAMENTO_INVALIDO
                    - Parâmetro [nome_campo] não obedecer às regras de negócio.\n\n
                    \n\n- PAGAMENTO_RECUSADO_DETENTORA - [Descrição do motivo de recusa].\n
                    \n\n\n- PAGAMENTO_RECUSADO_SPI - [Código de erro conforme tabela
                    de domínios reason PACS.002].\n\n\n\n- FALHA_INFRAESTRUTURA -
                    [Descrição de qual falha na infraestrutura inviabilizou o processamento].\n
                    \n\n\n- FALHA_INFRAESTRUTURA_SPI - Indica uma falha no Sistema
                    de Pagamentos Instantâneos (SPI).\n\n\n\n- FALHA_INFRAESTRUTURA_DICT
                    - Indica uma falha no Diretório de Identificadores de Contas Transacionais
                    (DICT).\n\n\n\n- FALHA_INFRAESTRUTURA_ICP - Indica uma falha na
                    Infraestrutura de Chaves Públicas (ICP).\n\n\n\n- FALHA_INFRAESTRUTURA_PSP_RECEBEDOR
                    - Indica uma falha na infraestrutura do Prestador de Serviço de
                    Pagamento (PSP) que recebe o pagamento.\n\n\n\n- FALHA_INFRAESTRUTURA_DETENTORA
                    - indica uma falha na infraestrutura da instituição detentora
                    das informações ou recursos.\n\n\n\n- CONTAS_ORIGEM_DESTINO_IGUAIS
                    - Indica uma tentativa de pagamento onde a conta origem e a conta
                    de destino são iguais.\n\n\n\n- FALHA_AGENDAMENTO_PAGAMENTOS -
                    Falha ao agendar pagamentos.\n\n\n\nO rejectionReason FALHA_INFRAESTRUTURA
                    não será excluído, apenas deixará de ser utilizado, permitindo
                    assim, retrocompatibilidade e integridade entre os participantes.\n\
                    \n"
                detail:
                  type: string
                  pattern: '[\w\W\s]*'
                  maxLength: 2048
                  description: Contém informações adicionais ao pagamento rejeitado
            date:
              type: string
              description: 'Data em que o recurso foi criado. Uma string com a utilização
                de timezone UTC(UTC time format). Atenção: campo de retorno obrigatório
                para pagamentos de transferências inteligentes.'
              format: date-time
              maxLength: 10
              example: '2021-01-01'
            localInstrument:
              type: string
              enum:
                - MANU
                - DICT
                - QRDN
                - QRES
                - INIC
              example: DICT
              description: "Especifica a forma de iniciação do pagamento:\n\n- MANU
                - Inserção manual de dados da conta transacional\n\n- DICT - Inserção
                manual de chave Pix\n\n- QRDN - QR code dinâmico\n\n- QRES - QR code
                estático\n\n- INIC - Indica que o recebedor (creditor) contratou o
                Iniciador de Pagamentos especificamente para realizar iniciações de
                pagamento em que o beneficiário é previamente conhecido.\n\n[Restrição]
                Se /data/payment/schedule enviado com valor diferente de single durante
                a criação do consentimento, apenas os métodos MANU, DICT ou QRES são
                permitidos.\n\n"
            cnpjInitiator:
              type: string
              pattern: ^\d{14}$
              maxLength: 14
              example: '50685362000135'
              description: CNPJ do Iniciador de Pagamento devidamente habilitado para
                a prestação de Serviço de Iniciação no Pix.
            payment:
              type: object
              description: Objeto contendo dados do pagameto como moeda e valor.
              required:
                - amount
                - currency
              properties:
                amount:
                  type: string
                  minLength: 4
                  maxLength: 19
                  pattern: ^((\d{1,16}\.\d{2}))$
                  example: '100000.12'
                  description: "Valor da transação com 2 casas decimais. O valor deve
                    ser o mesmo enviado no consentimento. \n\n\n\nPara QR Code estático
                    com valor pré-determinado no QR Code ou para QR Code dinâmico
                    com indicação de que o valor não pode ser alterado: O campo amount
                    deve ser preenchido com o valor estabelecido no QR Code. \n\n
                    Caso seja preenchido com valor divergente do QR Code, deve ser
                    retornado um erro HTTP Status 422.\n\n"
                currency:
                  type: string
                  maxLength: 3
                  pattern: ^([A-Z]{3})$
                  example: BRL
                  description: "Código da moeda nacional segundo modelo ISO-4217,
                    ou seja, 'BRL'.  \n\nTodos os valores monetários informados estão
                    representados com a moeda vigente do Brasil.\n\n"
            transactionIdentification:
              type: string
              pattern: ^[a-zA-Z0-9]{1,35}$
              maxLength: 35
              example: E00038166201907261559y6j6
              description: "Trata-se de um identificador de transação que deve ser
                retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento.\n
                \n\n\n[Restrição] A detentora deve obrigatoriamente retornar o campo
                com o mesmo valor recebido da iniciadora, caso ele tenha sido enviado
                na requisição da iniciação do pagamento.\n\n"
            remittanceInformation:
              type: string
              maxLength: 140
              pattern: '[\w\W\s]*'
              example: Pagamento da nota RSTO035-002.
              description: "Deve ser preenchido sempre que o usuário pagador inserir
                alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n\
                \n"
            creditorAccount:
              type: object
              description: "Objeto que contém a identificação da conta de destino
                do beneficiário/recebedor.  \n\n"
              required:
                - ispb
                - number
                - accountType
              properties:
                ispb:
                  type: string
                  minLength: 8
                  maxLength: 8
                  pattern: ^[0-9]{8}$
                  example: '12345678'
                  description: "Deve ser preenchido com o ISPB (Identificador do Sistema
                    de Pagamentos Brasileiros) do participante do SPI (Sistema de
                    pagamentos instantâneos) somente com números.\n\n"
                issuer:
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: ^[0-9]{1,4}$
                  example: '1774'
                  description: "Código da Agência emissora da conta sem dígito. \n
                    \n(Agência é a dependência destinada ao atendimento aos clientes,
                    ao público em geral e aos associados de cooperativas de crédito,
                    \n\nno exercício de atividades da instituição, não podendo ser
                    móvel ou transitória).\n\n\n\n[Restrição] Preenchimento obrigatório
                    para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA)
                    e SVGS (CONTA_POUPANCA).\n\n"
                number:
                  type: string
                  minLength: 1
                  maxLength: 20
                  pattern: ^[0-9]{1,20}$
                  example: '1234567890'
                  description: "Deve ser preenchido com o número da conta do usuário
                    recebedor, com dígito verificador (se este existir),  \n\nse houver
                    valor alfanumérico, este deve ser convertido para 0.\n\n"
                accountType:
                  type: string
                  enum:
                    - CACC
                    - SVGS
                    - TRAN
                  example: CACC
                  description: "Tipos de contas usadas para pagamento.\n\nModalidades
                    tradicionais previstas pela Resolução 4.753, não contemplando
                    contas vinculadas, \n\nconta de domiciliados no exterior, contas
                    em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                    \nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC - Current
                    - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n
                    - TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
            debtorAccount:
              type: object
              description: "Objeto que contém a identificação da conta de origem do
                pagador.  \n\nAs informações quanto à conta de origem do pagador poderão
                ser trazidas no consentimento para a detentora, caso a iniciadora
                tenha coletado essas informações do cliente. Do contrário, será coletada
                na detentora e trazida para a iniciadora como resposta à criação do
                pagamento.\n\n"
              required:
                - ispb
                - number
                - accountType
              properties:
                ispb:
                  type: string
                  minLength: 8
                  maxLength: 8
                  pattern: ^[0-9]{8}$
                  example: '12345678'
                  description: "Deve ser preenchido com o ISPB (Identificador do Sistema
                    de Pagamentos Brasileiros) do participante do SPI (Sistema de
                    pagamentos instantâneos) somente com números.\n\n"
                issuer:
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: ^[0-9]{1,4}$
                  example: '1774'
                  description: "Código da Agência emissora da conta sem dígito. \n
                    \n(Agência é a dependência destinada ao atendimento aos clientes,
                    ao público em geral e aos associados de cooperativas de crédito,
                    \n\nno exercício de atividades da instituição, não podendo ser
                    móvel ou transitória).\n\n\n\n[Restrição] Preenchimento obrigatório
                    para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA)
                    e SVGS (CONTA_POUPANCA).\n\n"
                number:
                  type: string
                  minLength: 1
                  maxLength: 20
                  pattern: ^[0-9]{1,20}$
                  example: '1234567890'
                  description: "Deve ser preenchido com o número da conta transacional
                    do usuário pagador, com dígito verificador (se este existir),\
                    \  \n\nse houver valor alfanumérico, este deve ser convertido
                    para 0.\n\n"
                accountType:
                  type: string
                  enum:
                    - CACC
                    - SVGS
                    - TRAN
                  example: CACC
                  description: "Tipos de contas usadas para pagamento.\n\nModalidades
                    tradicionais previstas pela Resolução 4.753, não contemplando
                    contas vinculadas, \n\nconta de domiciliados no exterior, contas
                    em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                    \nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC - Current
                    - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n
                    - TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
            authorisationFlow:
              type: string
              enum:
                - HYBRID_FLOW
                - CIBA_FLOW
                - FIDO_FLOW
              example: HYBRID_FLOW
              description: "Campo condicional utilizado para identificar o fluxo de
                autorização em que o pagamento foi solicitado.\n\n\n\n[Restrição]
                Se CIBA ou FIDO, preenchimento obrigatório. Caso o campo não esteja
                presente no payload, subentende-se que o fluxo de autorização utilizado
                é o HYBRID_FLOW.\n\n"
        meta:
          type: object
          description: Meta informações referente à API requisitada.
          required:
            - hasMoreRecords
            - requestDateTime
          properties:
            hasMoreRecords:
              type: boolean
              description: Indica se tem mais registros a serem retornados (true)
                ou não (false).
              example: true
    ResponseCancellationPixPayment:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo dados do pagamento e da conta do recebedor
            (creditor).
          required:
            - paymentId
            - endToEndId
            - creationDateTime
            - statusUpdateDateTime
            - status
            - localInstrument
            - payment
            - cnpjInitiator
            - debtorAccount
          properties:
            paymentId:
              description: Array de chave e valor com a chave de identificação do
                recurso no sistema de origem (legado), permitindo chaves compostas
              type: array
              items:
                type: object
                properties:
                  key:
                    description: Nome do campo do identificador no sistema de origem
                    type: string
                  value:
                    description: Valor do campo do identificador no sistema de origem
                    type: string
                required:
                  - key
              example:
                - key: pk_CampoUm
                  value: ABC
                - key: pk_CampoDois
                  value: '123'
            date:
              type: string
              description: 'Data em que o recurso foi criado. Uma string com a utilização
                de timezone UTC(UTC time format). Atenção: campo de retorno obrigatório
                para pagamentos de transferências inteligentes.'
              format: date-time
              maxLength: 10
              example: '2021-01-01'
            document:
              type: object
              description: Informações do documento identificador.
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  minLength: 11
                  maxLength: 14
                  description: Número do documento de identificação oficial do titular
                    pessoa natural ou jurídica.
                  example: '11111111111111'
                  pattern: ^(?:\d{11}|\d{14})$
                rel:
                  type: string
                  enum:
                    - CPF
                    - CNPJ
                  example: CNPJ
                  description: Tipo do documento de identificação oficial do titular
                    pessoa natural ou jurídica.
            endToEndId:
              type: string
              minLength: 32
              maxLength: 32
              pattern: 
                ^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$
              example: E9040088820210128000800123873170
              description: "Trata-se de um identificador único, gerado na instituição
                iniciadora de pagamento e recebido na instituição detentora de conta,
                permeando toda a jornada do pagamento Pix.\n\n\n\n[Restrição] A detentora
                deve obrigatoriamente retornar o campo Com o mesmo valor recebido
                da iniciadora.\n\n"
            consentId:
              type: string
              maxLength: 256
              pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9\-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
              example: urn:bancoex:C1DD33123
              description: "Identificador único do consentimento criado para a iniciação
                de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.\n
                \nUm URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141)
                é um Uniform Resource\n\nIdentifier - URI - que é atribuído sob o
                URI scheme \"urn\" e um namespace URN específico, com a intenção de
                que o URN\n\nseja um identificador de recurso persistente e independente
                da localização.\n\nConsiderando a string urn:bancoex:C1DD33123 como
                exemplo para consentId temos:\n\n- o namespace(urn)\n\n- o identificador
                associado ao namespace da instituição transnmissora (bancoex)\n\n
                - o identificador específico dentro do namespace (C1DD33123).\n\n
                Informações mais detalhadas sobre a construção de namespaces devem
                ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
                Não deve ser retornado para pagamentos automáticos.\n\n"
            creationDateTime:
              type: string
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
              example: '2020-07-21T08:30:00Z'
              description: "Data e hora em que o recurso foi criado.\n\nUma string
                com data e hora conforme especificação RFC-3339,\n\nsempre com a utilização
                de timezone UTC(UTC time format).\n\n"
            statusUpdateDateTime:
              type: string
              pattern: 
                ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
              example: '2020-07-21T08:30:00Z'
              description: "Data e hora da última atualização da iniciação de pagamento.\n
                \nUma string com data e hora conforme especificação RFC-3339,\n\n
                sempre com a utilização de timezone UTC(UTC time format).\n\n"
            proxy:
              type: string
              maxLength: 77
              pattern: '[\w\W\s]*'
              example: '12345678901'
              description: "Chave cadastrada no DICT pertencente ao recebedor. Os
                tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.\n
                \nNo caso de telefone celular deve ser informado no padrão E.1641.\n
                \nPara e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo
                77 caracteres.\n\nNo caso de CPF deverá ser informado com 11 números,
                sem pontos ou traços.\n\nPara o caso de CNPJ deverá ser informado
                com 14 números, sem pontos ou traços.\n\nNo caso de chave aleatória
                deve ser informado o UUID gerado pelo DICT, conforme formato especificado
                na RFC41223.\n\nSe informado, a detentora da conta deve validar o
                proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES
                e validar o campo creditorAccount.\n\nEsta validação é opcional caso
                o localInstrument for igual a INIC.\n\n[Restrição] Se localInstrument
                for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument
                for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre
                preenchido com a chave Pix.\n\n"
            ibgeTownCode:
              type: string
              minLength: 7
              maxLength: 7
              pattern: ^\d{7}$
              example: '5300108'
              description: "O campo ibgetowncode no arranjo PIX, tem o mesmo comportamento
                que o campo codMun descrito no item 1.6.6 do manual do PIX, conforme
                segue:\n\n\n\n1. Caso a informação referente ao município não seja
                enviada; o PSP do recebedor assumirá que não existem feriados estaduais
                e municipais no período em questão;\n\n"
            status:
              type: string
              enum:
                - RCVD
                - PATC
                - CANC
                - ACCP
                - ACPD
                - RJCT
                - ACSC
                - PDNG
                - SCHD
              example: PDNG
              description: "Estado atual da iniciação de pagamento. O estado evolui
                na seguinte ordem:  \n\n\n\n1.  RCVD (Received) - Indica que a requisição
                de pagamento foi recebida com sucesso pela detentora, mas ainda há
                validações a serem feitas antes de ser submetida para liquidação.\n\
                \n\n\n2.  PATC (Partially Accepted Technical Correct) - Indica que
                a transação precisa da confirmação de mais autorizadores para que
                o processamento do pagamento possa prosseguir.  \n\n\n\n3.  CANC (Cancelled)
                - Indica que a transação Pix pendente foi cancelada com sucesso pelo
                usuário antes que fosse confirmada (ACCP) ou rejeitada (RJCT) pela
                detentora.\n\n\n\n4.  ACCP( Accepted Customer Profile) - Indica que
                todas as verificações necessárias já foram realizadas pela detentora
                e que a transação está pronta para ser enviada para liquidação (no
                SPI se for Pix para outra instituição ou internamente se for para
                outra conta na mesma instituição).\n\n\n\n5.  ACPD (Accepted Clearing
                Processed) - Indica que a detentora já submeteu a transação para liquidação,
                mas ainda não tem a confirmação se foi liquidada ou rejeitada.\n\n\
                \n\n6.  RJCT (Rejected) Indica que a transação foi rejeitada pela
                detentora ou pelo SPI.\n\n\n\n7.  ACSC (Accepted Settlement Completed
                Debitor Account) - Indica que a transação foi efetivada pela detentora
                ou pelo SPI.\n\n\n\n8.  PDNG (Pending) - Indica que a detentora reteve
                temporariamente a transação Pix para análise.\n\n\n\n9.  SCHD (Scheduled)
                - Indica que a transação Pix foi agendada com sucesso na detentora.\n
                \n\n\nEm caso insucesso: \n\n \n\nRJCT (REJECTED) - Instrução de pagamento
                rejeitada.\n\n[Restrição] O status PATC não deverá ser retornado para
                pagamentos de consentimento de versão maior que V4.\n\n"
            rejectionReason:
              type: object
              description: "Motivo da rejeição do pagamento. Informações complementares
                sobre o motivo do status\n\n[Restrição] Esse motivo deverá ser enviado
                quando o campo /data/status for igual a RJCT (REJECTED)."
              required:
                - code
                - detail
              properties:
                code:
                  type: string
                  enum:
                    - SALDO_INSUFICIENTE
                    - VALOR_ACIMA_LIMITE
                    - VALOR_INVALIDO
                    - COBRANCA_INVALIDA
                    - NAO_INFORMADO
                    - PAGAMENTO_DIVERGENTE_CONSENTIMENTO
                    - DETALHE_PAGAMENTO_INVALIDO
                    - PAGAMENTO_RECUSADO_DETENTORA
                    - PAGAMENTO_RECUSADO_SPI
                    - FALHA_INFRAESTRUTURA
                    - FALHA_INFRAESTRUTURA_SPI
                    - FALHA_INFRAESTRUTURA_DICT
                    - FALHA_INFRAESTRUTURA_ICP
                    - FALHA_INFRAESTRUTURA_PSP_RECEBEDOR
                    - FALHA_INFRAESTRUTURA_DETENTORA
                    - CONTAS_ORIGEM_DESTINO_IGUAIS
                  example: SALDO_INSUFICIENTE
                  description: "Define o código da razão pela qual o pagamento foi
                    rejeitado\n\n\n\n- SALDO_INSUFICIENTE - A conta selecionada não
                    possui saldo suficiente para realizar o pagamento.\n\n\n\n- VALOR_ACIMA_LIMITE
                    - O valor ultrapassa o limite estabelecido [na instituição/no
                    arranjo/outro] para permitir a realização de transações pelo cliente.\n
                    \n\n\n- VALOR_INVALIDO - O valor enviado não é válido para o QR
                    Code informado.\n\n\n\n- COBRANCA_INVALIDA - Validação de expiração,
                    validação de vencimento ou Status Válido.\n\n\n\n- NAO_INFORMADO
                    - Não reportado/identificado pela instituição detentora de conta.\n
                    \n\n\n- PAGAMENTO_DIVERGENTE_CONSENTIMENTO - Dados do pagamento
                    divergentes dos dados do consentimento.\n\n\n\n- DETALHE_PAGAMENTO_INVALIDO
                    - Parâmetro [nome_campo] não obedecer às regras de negócio.\n\n
                    \n\n- PAGAMENTO_RECUSADO_DETENTORA - [Descrição do motivo de recusa].\n
                    \n\n\n- PAGAMENTO_RECUSADO_SPI - [Código de erro conforme tabela
                    de domínios reason PACS.002].\n\n\n\n- FALHA_INFRAESTRUTURA -
                    [Descrição de qual falha na infraestrutura inviabilizou o processamento].\n
                    \n\n\n- FALHA_INFRAESTRUTURA_SPI - Indica uma falha no Sistema
                    de Pagamentos Instantâneos (SPI).\n\n\n\n- FALHA_INFRAESTRUTURA_DICT
                    - Indica uma falha no Diretório de Identificadores de Contas Transacionais
                    (DICT).\n\n\n\n- FALHA_INFRAESTRUTURA_ICP - Indica uma falha na
                    Infraestrutura de Chaves Públicas (ICP).\n\n\n\n- FALHA_INFRAESTRUTURA_PSP_RECEBEDOR
                    - Indica uma falha na infraestrutura do Prestador de Serviço de
                    Pagamento (PSP) que recebe o pagamento.\n\n\n\n- FALHA_INFRAESTRUTURA_DETENTORA
                    - indica uma falha na infraestrutura da instituição detentora
                    das informações ou recursos.\n\n\n\n- CONTAS_ORIGEM_DESTINO_IGUAIS
                    - Indica uma tentativa de pagamento onde a conta origem e a conta
                    de destino são iguais.\n\n\n\nO rejectionReason FALHA_INFRAESTRUTURA
                    não será excluído, apenas deixará de ser utilizado, permitindo
                    assim, retrocompatibilidade e integridade entre os participantes.\n\
                    \n"
                detail:
                  type: string
                  pattern: '[\w\W\s]*'
                  maxLength: 2048
                  description: Contém informações adicionais ao pagamento rejeitado
            localInstrument:
              type: string
              enum:
                - MANU
                - DICT
                - QRDN
                - QRES
                - INIC
              example: DICT
              description: "Especifica a forma de iniciação do pagamento:\n\n- MANU
                - Inserção manual de dados da conta transacional\n\n- DICT - Inserção
                manual de chave Pix\n\n- QRDN - QR code dinâmico\n\n- QRES - QR code
                estático\n\n- INIC - Indica que o recebedor (creditor) contratou o
                Iniciador de Pagamentos especificamente para realizar iniciações de
                pagamento em que o beneficiário é previamente conhecido.\n\n[Restrição]
                Se /data/payment/schedule enviado com valor diferente de single durante
                a criação do consentimento, apenas os métodos MANU, DICT ou QRES são
                permitidos.\n\n"
            cnpjInitiator:
              type: string
              pattern: ^\d{14}$
              maxLength: 14
              example: '50685362000135'
              description: CNPJ do Iniciador de Pagamento devidamente habilitado para
                a prestação de Serviço de Iniciação no Pix.
            payment:
              type: object
              description: Objeto contendo dados do pagameto como moeda e valor.
              required:
                - amount
                - currency
              properties:
                amount:
                  type: string
                  minLength: 4
                  maxLength: 19
                  pattern: ^((\d{1,16}\.\d{2}))$
                  example: '100000.12'
                  description: "Valor da transação com 2 casas decimais. O valor deve
                    ser o mesmo enviado no consentimento. \n\n\n\nPara QR Code estático
                    com valor pré-determinado no QR Code ou para QR Code dinâmico
                    com indicação de que o valor não pode ser alterado: O campo amount
                    deve ser preenchido com o valor estabelecido no QR Code. \n\n
                    Caso seja preenchido com valor divergente do QR Code, deve ser
                    retornado um erro HTTP Status 422.\n\n"
                currency:
                  type: string
                  maxLength: 3
                  pattern: ^([A-Z]{3})$
                  example: BRL
                  description: "Código da moeda nacional segundo modelo ISO-4217,
                    ou seja, 'BRL'.  \n\nTodos os valores monetários informados estão
                    representados com a moeda vigente do Brasil.\n\n"
            transactionIdentification:
              type: string
              pattern: ^[a-zA-Z0-9]{1,35}$
              maxLength: 35
              example: E00038166201907261559y6j6
              description: "Trata-se de um identificador de transação que deve ser
                retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento.\n
                \n\n\n[Restrição] A detentora deve obrigatoriamente retornar o campo
                com o mesmo valor recebido da iniciadora, caso ele tenha sido enviado
                na requisição da iniciação do pagamento.\n\n"
            remittanceInformation:
              type: string
              maxLength: 140
              pattern: '[\w\W\s]*'
              example: Pagamento da nota RSTO035-002.
              description: "Deve ser preenchido sempre que o usuário pagador inserir
                alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n\
                \n"
            creditorAccount:
              type: object
              description: "Objeto que contém a identificação da conta de destino
                do beneficiário/recebedor.  \n\n"
              required:
                - ispb
                - number
                - accountType
              properties:
                ispb:
                  type: string
                  minLength: 8
                  maxLength: 8
                  pattern: ^[0-9]{8}$
                  example: '12345678'
                  description: "Deve ser preenchido com o ISPB (Identificador do Sistema
                    de Pagamentos Brasileiros) do participante do SPI (Sistema de
                    pagamentos instantâneos) somente com números.\n\n"
                issuer:
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: ^[0-9]{1,4}$
                  example: '1774'
                  description: "Código da Agência emissora da conta sem dígito. \n
                    \n(Agência é a dependência destinada ao atendimento aos clientes,
                    ao público em geral e aos associados de cooperativas de crédito,
                    \n\nno exercício de atividades da instituição, não podendo ser
                    móvel ou transitória).\n\n\n\n[Restrição] Preenchimento obrigatório
                    para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA)
                    e SVGS (CONTA_POUPANCA).\n\n"
                number:
                  type: string
                  minLength: 1
                  maxLength: 20
                  pattern: ^[0-9]{1,20}$
                  example: '1234567890'
                  description: "Deve ser preenchido com o número da conta do usuário
                    recebedor, com dígito verificador (se este existir),  \n\nse houver
                    valor alfanumérico, este deve ser convertido para 0.\n\n"
                accountType:
                  type: string
                  enum:
                    - CACC
                    - SVGS
                    - TRAN
                  example: CACC
                  description: "Tipos de contas usadas para pagamento.\n\nModalidades
                    tradicionais previstas pela Resolução 4.753, não contemplando
                    contas vinculadas, \n\nconta de domiciliados no exterior, contas
                    em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                    \nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC - Current
                    - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n
                    - TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
            debtorAccount:
              type: object
              description: "Objeto que contém a identificação da conta de origem do
                pagador.  \n\nAs informações quanto à conta de origem do pagador poderão
                ser trazidas no consentimento para a detentora, caso a iniciadora
                tenha coletado essas informações do cliente. Do contrário, será coletada
                na detentora e trazida para a iniciadora como resposta à criação do
                pagamento.\n\n"
              required:
                - ispb
                - number
                - accountType
              properties:
                ispb:
                  type: string
                  minLength: 8
                  maxLength: 8
                  pattern: ^[0-9]{8}$
                  example: '12345678'
                  description: "Deve ser preenchido com o ISPB (Identificador do Sistema
                    de Pagamentos Brasileiros) do participante do SPI (Sistema de
                    pagamentos instantâneos) somente com números.\n\n"
                issuer:
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: ^[0-9]{1,4}$
                  example: '1774'
                  description: "Código da Agência emissora da conta sem dígito. \n
                    \n(Agência é a dependência destinada ao atendimento aos clientes,
                    ao público em geral e aos associados de cooperativas de crédito,
                    \n\nno exercício de atividades da instituição, não podendo ser
                    móvel ou transitória).\n\n\n\n[Restrição] Preenchimento obrigatório
                    para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA)
                    e SVGS (CONTA_POUPANCA).\n\n"
                number:
                  type: string
                  minLength: 1
                  maxLength: 20
                  pattern: ^[0-9]{1,20}$
                  example: '1234567890'
                  description: "Deve ser preenchido com o número da conta transacional
                    do usuário pagador, com dígito verificador (se este existir),\
                    \  \n\nse houver valor alfanumérico, este deve ser convertido
                    para 0.\n\n"
                accountType:
                  type: string
                  enum:
                    - CACC
                    - SVGS
                    - TRAN
                  example: CACC
                  description: "Tipos de contas usadas para pagamento.\n\nModalidades
                    tradicionais previstas pela Resolução 4.753, não contemplando
                    contas vinculadas, \n\nconta de domiciliados no exterior, contas
                    em moedas estrangeiras e conta correspondente moeda eletrônica.\n
                    \nSegue descrição de cada valor do ENUM.\n\n\n\n- CACC - Current
                    - Conta Corrente.\n\n- SVGS - Savings - Conta de Poupança.\n\n
                    - TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n\n"
            authorisationFlow:
              type: string
              enum:
                - HYBRID_FLOW
                - CIBA_FLOW
                - FIDO_FLOW
              example: HYBRID_FLOW
              description: "Campo condicional utilizado para identificar o fluxo de
                autorização em que o pagamento foi solicitado.\n\n\n\n[Restrição]
                Se CIBA ou FIDO, preenchimento obrigatório. Caso o campo não esteja
                presente no payload, subentende-se que o fluxo de autorização utilizado
                é o HYBRID_FLOW.\n\n"
        meta:
          type: object
          description: Meta informações referente à API requisitada.
          required:
            - hasMoreRecords
            - requestDateTime
          properties:
            hasMoreRecords:
              type: boolean
              description: Indica se tem mais registros a serem retornados (true)
                ou não (false).
              example: true
    CodeConsentStage:
      type: string
      maxLength: 30
      enum:
        - VALOR_INVALIDO
        - NAO_INFORMADO
        - FALHA_INFRAESTRUTURA
        - CONTA_NAO_PERMITE_PAGAMENTO
        - SALDO_INSUFICIENTE
        - VALOR_ACIMA_LIMITE
        - QRCODE_INVALIDO
      example: VALOR_INVALIDO
      description: Códigos de erros previstos na validação de pagamento durante post
        de consentimento
    CodePaymentStage:
      type: string
      maxLength: 30
      enum:
        - COBRANCA_INVALIDA
        - DETALHE_PAGAMENTO_INVALIDO
        - NAO_INFORMADO
        - PAGAMENTO_RECUSADO_DETENTORA
        - PAGAMENTO_RECUSADO_SPI
        - SALDO_INSUFICIENTE
        - VALOR_ACIMA_LIMITE
        - VALOR_INVALIDO
      example: COBRANCA_INVALIDA
      description: Códigos de erros previstos na validação de pagamento durante post
        de pagamento
    ResponseErrorValidatePaymentData:
      type: object
      description: Listagem de erros ocorridos ao processar a solicitação de criação
        de pagamento do tipo PIX
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 5
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                oneOf:
                  - $ref: '#/components/schemas/CodeConsentStage'
                  - $ref: '#/components/schemas/CodePaymentStage'
              title:
                type: string
                maxLength: 255
                pattern: '[\w\W\s]*'
                example: Cobrança inválida.
                description: "Título específico do erro reportado, de acordo com o
                  código enviado (Os valores permitidos dependem do validationStage
                  como indicado nos dois enums de code CodeConsentStage e CodePaymentStage):\
                  \  \n\n\n\n• COBRANCA_INVALIDA: Cobrança inválida.  \n\n\n\n• DETALHE_PAGAMENTO_INVALIDO:
                  Detalhe de pagamento inválido.  \n\n\n\n• NAO_INFORMADO: Não informado.\
                  \  \n\n\n\n• PAGAMENTO_RECUSADO_DETENTORA: Pagamento recusado detentora.\
                  \  \n\n\n\n• PAGAMENTO_RECUSADO_SPI: Pagamento recusado SPI.  \n
                  \n\n\n• SALDO_INSUFICIENTE: Saldo insuficiente.  \n\n\n\n• VALOR_ACIMA_LIMITE:
                  Valor acima do limite.\n\n\n\n• VALOR_INVALIDO: Valor inválido.\n
                  \n\n\n• FALHA_INFRAESTRUTURA: Falha infraestrutura.\n\n\n\n• CONTA_NAO_PERMITE_PAGAMENTO:
                  Conta não permite pagamento.\n\n\n\n• QRCODE_INVALIDO: QR Code inválido.\n\
                  \n\n\n"
              detail:
                type: string
                maxLength: 2048
                pattern: '[\w\W\s]*'
                example: Forma de pagamento [Modalidade] não suportada.
                description: "Descrição específica do erro de acordo com o código
                  reportado (Os valores permitidos dependem do validationStage como
                  indicado nos dois enums de code CodeConsentStage e CodePaymentStage):\
                  \  \n\n\n\n• COBRANCA_INVALIDA – Validação de expiração, validação
                  de vencimento, Status Válido.\n\n\n\n• DETALHE_PAGAMENTO_INVALIDO:
                  Parâmetro [nome_campo] não obedece às regras de negócio.\n\n\n\n
                  • NAO_INFORMADO: Não informada pela detentora de conta.\n\n\n\n
                  • PAGAMENTO_RECUSADO_DETENTORA: [descrição do motivo de recusa].\n
                  \n\n\n• PAGAMENTO_RECUSADO_SPI: [código de erro conforme tabela
                  de domínios reason PACS.002].\n\n\n\n• SALDO_INSUFICIENTE: A conta
                  selecionada não possui saldo suficiente para realizar o pagamento.\n
                  \n\n\n• VALOR_ACIMA_LIMITE: Acima do limite estabelecido.\n\n\n\n
                  • VALOR_INVALIDO: O valor enviado não é válido para o QR Code informado.\n
                  \n\n\n• FALHA_INFRAESTRUTURA: [Descrição de qual falha na infraestrutura
                  inviabilizou o processamento].\n\n\n\n• CONTA_NAO_PERMITE_PAGAMENTO:
                  [Descrição do motivo que a conta não permite pagamento].\n\n\n\n
                  • QRCODE_INVALIDO: [Descrição do motivo que o qr code é inválido].\n\
                  \n\n\n"
            additionalProperties: false
      additionalProperties: false
    ErrorPaymentValidation:
      description: Objeto com detalhes do erro ocorrido. Deve ser um objeto do tipo
        ResponseErrorCreatePixConsent caso o consentimento não possa ser criado por
        uma restrição de negócio. Deve ser um responseError padrão se for um erro
        de sistema
      oneOf:
        - $ref: '#/components/schemas/ResponseErrorValidatePaymentData'
        - $ref: '#/components/schemas/BaseResponseErrorPaymentValidation'
      additionalProperties: false
    ResponseErrorCreatePixPayment:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 9
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                type: string
                enum:
                  - SALDO_INSUFICIENTE
                  - VALOR_ACIMA_LIMITE
                  - VALOR_INVALIDO
                  - COBRANCA_INVALIDA
                  - CONSENTIMENTO_INVALIDO
                  - PARAMETRO_NAO_INFORMADO
                  - PARAMETRO_INVALIDO
                  - NAO_INFORMADO
                  - PAGAMENTO_DIVERGENTE_CONSENTIMENTO
                  - DETALHE_PAGAMENTO_INVALIDO
                  - PAGAMENTO_RECUSADO_DETENTORA
                  - PAGAMENTO_RECUSADO_SPI
                  - ERRO_IDEMPOTENCIA
                  - LIMITE_PERIODO_VALOR_EXCEDIDO
                  - LIMITE_PERIODO_QUANTIDADE_EXCEDIDO
                example: SALDO_INSUFICIENTE
                description: "Códigos de erros previstos na criação da iniciação de
                  pagamento:\n\n\n\n\n\n\n\n• SALDO_INSUFICIENTE: Esta conta não possui
                  saldo suficiente para realizar o pagamento.\n\n\n\n\n\n\n\n• VALOR_ACIMA_LIMITE:
                  O valor (ou quantidade de transações) ultrapassa a faixa de limite
                  parametrizada na detentora para permitir a realização de transações
                  pelo cliente.\n\n\n\n\n\n\n\n• VALOR_INVALIDO: O valor enviado não
                  é válido para o QR Code informado.\n\n\n\n\n\n\n\n• COBRANCA_INVALIDA:
                  Validação de expiração, validação de vencimento, Status Válido.\n
                  \n\n\n\n\n\n\n• CONSENTIMENTO_INVALIDO: Consentimento inválido (status
                  não é \"authorised\" ou está expirado).\n\n\n\n\n\n\n\n• PARAMETRO_NAO_INFORMADO:
                  Parâmetro não informado.  \n\n\n\n\n\n\n\n• PARAMETRO_INVALIDO:
                  Parâmetro inválido.\n\n\n\n\n\n\n\n• NAO_INFORMADO: Não informada
                  pela detentora de conta.\n\n\n\n\n\n\n\n• PAGAMENTO_DIVERGENTE_CONSENTIMENTO:
                  Dados do pagamento divergentes dos dados do consentimento.\n\n\n
                  \n\n\n\n\n• DETALHE_PAGAMENTO_INVALIDO: Detalhe do pagamento inválido.\n
                  \n\n\n\n\n\n\n• PAGAMENTO_RECUSADO_DETENTORA: Pagamento recusado
                  pela detentora de conta.\n\n\n\n\n\n\n\n• PAGAMENTO_RECUSADO_SPI:
                  Pagamento recusado no Sistema de Pagamentos Instantâneos (SPI).\n
                  \n\n\n\n\n\n\n• ERRO_IDEMPOTENCIA: Erro idempotência.\n\n\n\n"
              title:
                type: string
                maxLength: 255
                pattern: '[\w\W\s]*'
                example: Pagamento não permite cancelamento.
                description: "Título específico do erro reportado, de acordo com o
                  código enviado:\n\n\n\n\n\n\n\n• PAGAMENTO_NAO_PERMITE_CANCELAMENTO:
                  Pagamento não permite cancelamento\n\n\n\n"
              detail:
                type: string
                maxLength: 2048
                pattern: '[\w\W\s]*'
                example: Pagamento não permite cancelamento.
                description: "Descrição específica do erro de acordo com o código
                  reportado:\n\n\n\n\n\n\n\n• PAGAMENTO_NAO_PERMITE_CANCELAMENTO:
                  Pagamento não permite cancelamento\n\n\n\n"
    ErrorCreatePixPayment:
      description: Objeto com detalhes do erro ocorrido. Deve ser um objeto do tipo
        ResponseErrorCreatePixPayment em caso de erro de negócio ao tentar realizar
        o pagamento. Deve ser um responseError padrão se for um erro de sistema
      anyOf:
        - $ref: '#/components/schemas/ResponseErrorCreatePixPayment'
        - $ref: '#/components/schemas/BaseResponseErrorPaymentValidation'
    ErrorFindAndCancellationPixPayment:
      description: Objeto com detalhes do erro ocorrido. Deve ser um objeto do tipo
        ResponseErrorCreatePixPayment em caso de erro de negócio ao tentar realizar
        o pagamento. Deve ser um responseError padrão se for um erro de sistema
      oneOf:
        - $ref: '#/components/schemas/BaseResponseErrorPaymentValidation'
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Código de erro específico do endpoint
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              title:
                description: Título legível por humanos deste erro específico
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              detail:
                description: Descrição legível por humanos deste erro específico
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 2048
        meta:
          type: object
          description: Meta informações referente à API requisitada.
          required:
            - requestDateTime
          properties:
            requestDateTime:
              description: Data e hora da consulta, conforme especificação RFC-3339,
                formato UTC.
              type: string
              maxLength: 20
              format: date-time
              example: '2021-05-21T08:30:00Z'
    422ResponseErrorCreateConsent:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 3
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                type: string
                enum:
                  - FORMA_PAGAMENTO_INVALIDA
                  - DATA_PAGAMENTO_INVALIDA
                  - DETALHE_PAGAMENTO_INVALIDO
                  - PARAMETRO_NAO_INFORMADO
                  - PARAMETRO_INVALIDO
                  - ERRO_IDEMPOTENCIA
                  - NAO_INFORMADO
                example: FORMA_PAGAMENTO_INVALIDA
                description: "Códigos de erros previstos na criação de consentimento
                  para a iniciação de pagamentos:  \n\n• FORMA_PAGAMENTO_INVALIDA:
                  Forma de pagamento inválida.  \n\n• DATA_PAGAMENTO_INVALIDA: Data
                  de pagamento inválida.  \n\n• DETALHE_PAGAMENTO_INVALIDO: Detalhe
                  do pagamento inválido.  \n\n• PARAMETRO_NAO_INFORMADO: Parâmetro
                  não informado.  \n\n• PARAMETRO_INVALIDO: Parâmetro inválido.  \n
                  \n• ERRO_IDEMPOTENCIA: Erro idempotência.  \n\n• NAO_INFORMADO:
                  Não informado.   \n\n"
              title:
                type: string
                maxLength: 255
                pattern: '[\w\W\s]*'
                example: Forma de pagamento inválida.
                description: "Título específico do erro reportado, de acordo com o
                  código enviado:  \n\n• FORMA_PAGAMENTO_INVALIDA: Forma de pagamento
                  inválida.  \n\n• DATA_PAGAMENTO_INVALIDA: Data de pagamento inválida.\
                  \  \n\n• DETALHE_PAGAMENTO_INVALIDO: Detalhe do pagamento inválido.\
                  \  \n\n• PARAMETRO_NAO_INFORMADO: Parâmetro não informado.  \n\n
                  • PARAMETRO_INVALIDO: Parâmetro inválido.  \n\n• ERRO_IDEMPOTENCIA:
                  Erro idempotência.  \n\n• NAO_INFORMADO: Não informado.    \n\n"
              detail:
                type: string
                maxLength: 2048
                pattern: '[\w\W\s]*'
                example: Forma de pagamento [Modalidade] não suportada.
                description: "Descrição específica do erro de acordo com o código
                  reportado:  \n\n• FORMA_PAGAMENTO_INVALIDA: Forma de pagamento [Modalidade]
                  não suportada.  \n\n• DATA_PAGAMENTO_INVALIDA: Data de pagamento
                  inválida para a forma de pagamento selecionada.  \n\n• DETALHE_PAGAMENTO_INVALIDO:
                  Parâmetro [nome_campo] não obedece às regras de negócio.  \n\n•
                  PARAMETRO_NAO_INFORMADO: Parâmetro [nome_campo] obrigatório não
                  informado.  \n\n• PARAMETRO_INVALIDO: Parâmetro [nome_campo] não
                  obedece as regras de formatação esperadas.  \n\n• ERRO_IDEMPOTENCIA:
                  Conteúdo da mensagem (claim data) diverge do conteúdo associado
                  a esta chave de idempotência (x-idempotency-key).  \n\n• NAO_INFORMADO:
                  Não reportado/identificado pela instituição detentora de conta.\
                  \  \n\n"
        meta:
          $ref: '#/components/schemas/Meta'
    Meta:
      type: object
      description: Meta informação referente a API requisitada.
      required:
        - requestDateTime
      properties:
        requestDateTime:
          description: Data e hora da consulta, conforme especificação RFC-3339, formato
            UTC.
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
    422ResponseErrorCreatePixPayments:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 9
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                $ref: '#/components/schemas/EnumErrorsCreatePayment'
              title:
                type: string
                maxLength: 255
                pattern: '[\w\W\s]*'
                example: Saldo insuficiente.
                description: "Título específico do erro reportado, de acordo com o
                  código enviado:\n\n- SALDO_INSUFICIENTE: Saldo insuficiente.\n\n
                  - VALOR_ACIMA_LIMITE: Acima do limite estabelecido.\n\n- VALOR_INVALIDO:
                  Valor inválido.\n\n- COBRANCA_INVALIDA: Cobrança inválida.\n\n-
                  CONSENTIMENTO_INVALIDO – Consentimento inválido (em status final).\n
                  \n- PARAMETRO_NAO_INFORMADO: Parâmetro obrigatório não informado.\n
                  \n- PARAMETRO_INVALIDO: Parâmetro com valor inválido.\n\n- NAO_INFORMADO:
                  Não informado.\n\n- PAGAMENTO_DIVERGENTE_CONSENTIMENTO: Divergência
                  entre pagamento e consentimento.\n\n- DETALHE_PAGAMENTO_INVALIDO:
                  Detalhe do pagamento inválido.\n\n- PAGAMENTO_RECUSADO_DETENTORA:
                  Pagamento recusado pela detentora de conta.\n\n- PAGAMENTO_RECUSADO_SPI:
                  Pagamento recusado no Sistema de Pagamentos Instantâneos (SPI).\n
                  \n- ERRO_IDEMPOTENCIA: Erro idempotência.\n\n- CONSENTIMENTO_PENDENTE_AUTORIZACAO:
                  Consentimento pendente autorização de múltiplas alçadas (status
                  “PARTIALLY_ACCEPTED”).\n\n"
              detail:
                type: string
                maxLength: 2048
                pattern: '[\w\W\s]*'
                example: A conta selecionada não possui saldo suficiente para realizar
                  o pagamento.
                description: "Descrição específica do erro de acordo com o código
                  reportado:\n\n- SALDO_INSUFICIENTE: A conta selecionada não possui
                  saldo suficiente para realizar o pagamento.\n\n- VALOR_ACIMA_LIMITE:
                  O valor (ou quantidade de transações) ultrapassa a faixa de limite
                  parametrizada na detentora para permitir a realização de transações
                  pelo cliente.\n\n- VALOR_INVALIDO: O valor enviado não é válido
                  para o QR Code informado.\n\n- COBRANCA_INVALIDA: Validação de expiração,
                  validação de vencimento ou Status Válido.\n\n- CONSENTIMENTO_INVALIDO
                  – Consentimento inválido (em status final).\n\n- PARAMETRO_NAO_INFORMADO:
                  endToEndId\n\n- PARAMETRO_INVALIDO: endToEndId\n\n- NAO_INFORMADO:
                  Não reportado/identificado pela instituição detentora de conta.\n
                  \n- PAGAMENTO_DIVERGENTE_CONSENTIMENTO: Dados do pagamento divergentes
                  dos dados do consentimento.\n\n- DETALHE_PAGAMENTO_INVALIDO: Parâmetro
                  [nome_campo] não obedece às regras de negócio.\n\n- PAGAMENTO_RECUSADO_DETENTORA:
                  [descrição do motivo de recusa].\n\n- PAGAMENTO_RECUSADO_SPI: [código
                  de erro conforme tabela de domínios reason PACS.002].\n\n- ERRO_IDEMPOTENCIA:
                  Conteúdo da mensagem (claim data) diverge do conteúdo associado
                  a esta chave de idempotência (x-idempotency-key).\n\n- CONSENTIMENTO_PENDENTE_AUTORIZACAO:
                  Consentimento pendente autorização de múltiplas alçadas (status
                  “PARTIALLY_ACCEPTED”).\n\n"
        meta:
          $ref: '#/components/schemas/Meta'
    422ResponseErrorCreatePixPayment:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 9
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                $ref: '#/components/schemas/EnumErrorsCreatePixPayment'
              title:
                type: string
                maxLength: 255
                pattern: '[\w\W\s]*'
                example: Pagamento não permite cancelamento.
                description: "Título específico do erro reportado, de acordo com o
                  código enviado:\n\n\n\n• PAGAMENTO_NAO_PERMITE_CANCELAMENTO: Pagamento
                  não permite cancelamento\n\n"
              detail:
                type: string
                maxLength: 2048
                pattern: '[\w\W\s]*'
                example: Pagamento não permite cancelamento.
                description: "Descrição específica do erro de acordo com o código
                  reportado:\n\n\n\n• PAGAMENTO_NAO_PERMITE_CANCELAMENTO: Pagamento
                  não permite cancelamento\n\n"
        meta:
          $ref: '#/components/schemas/Meta'
    EnumErrorsCreatePixPayment:
      type: string
      enum:
        - PAGAMENTO_NAO_PERMITE_CANCELAMENTO
      example: PAGAMENTO_NAO_PERMITE_CANCELAMENTO
      description: "Códigos de erros previstos na criação da iniciação de pagamento:\n
        \n\n\n• PAGAMENTO_NAO_PERMITE_CANCELAMENTO: Pagamento não permite cancelamento\n\
        \n"
    EnumErrorsCreatePayment:
      type: string
      enum:
        - SALDO_INSUFICIENTE
        - VALOR_ACIMA_LIMITE
        - VALOR_INVALIDO
        - COBRANCA_INVALIDA
        - CONSENTIMENTO_INVALIDO
        - PARAMETRO_NAO_INFORMADO
        - PARAMETRO_INVALIDO
        - NAO_INFORMADO
        - PAGAMENTO_DIVERGENTE_CONSENTIMENTO
        - DETALHE_PAGAMENTO_INVALIDO
        - PAGAMENTO_RECUSADO_DETENTORA
        - PAGAMENTO_RECUSADO_SPI
        - ERRO_IDEMPOTENCIA
        - CONSENTIMENTO_PENDENTE_AUTORIZACAO
      example: SALDO_INSUFICIENTE
      description: "Códigos de erros previstos na criação da iniciação de pagamento:\n
        \n- SALDO_INSUFICIENTE: Esta conta não possui saldo suficiente para realizar
        o pagamento.\n\n- VALOR_ACIMA_LIMITE: O valor (ou quantidade de transações)
        ultrapassa a faixa de limite parametrizada na detentora para permitir a realização
        de transações pelo cliente.\n\n- VALOR_INVALIDO: O valor enviado não é válido
        para o QR Code informado.\n\n- COBRANCA_INVALIDA: Validação de expiração,
        validação de vencimento, Status Válido.\n\n- CONSENTIMENTO_INVALIDO – Consentimento
        inválido (em status final).\n\n- PARAMETRO_NAO_INFORMADO: Parâmetro não informado.\
        \  \n\n- PARAMETRO_INVALIDO: Parâmetro inválido.\n\n- NAO_INFORMADO: Não informada
        pela detentora de conta.\n\n- PAGAMENTO_DIVERGENTE_CONSENTIMENTO: Dados do
        pagamento divergentes dos dados do consentimento.\n\n- DETALHE_PAGAMENTO_INVALIDO:
        Detalhe do pagamento inválido.\n\n- PAGAMENTO_RECUSADO_DETENTORA: Pagamento
        recusado pela detentora de conta.\n\n- PAGAMENTO_RECUSADO_SPI: Pagamento recusado
        no Sistema de Pagamentos Instantâneos (SPI).\n\n- ERRO_IDEMPOTENCIA: Erro
        idempotência.\n\n- CONSENTIMENTO_PENDENTE_AUTORIZACAO: Consentimento pendente
        autorização de múltiplas alçadas (status “PARTIALLY_ACCEPTED”)\n\n"
    BaseResponseErrorPaymentValidation:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: Listagem de erros ocorridos ao processar a solicitação
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                type: string
                description: Código de erro específico do endpoint
                minLength: 1
                maxLength: 255
                pattern: \w+(\W\w+)*
                example: '500'
              title:
                type: string
                description: Título legível por humanos deste erro específico
                minLength: 1
                maxLength: 255
                pattern: \w+(\W\w+)*
                example: Erro interno
              detail:
                type: string
                description: Descrição legível por humanos deste erro específico
                minLength: 1
                maxLength: 2048
                pattern: \w+(\W\w+)*
                example: Um erro interno ocorreu ao processar a solicitação, tente
                  novamente mais tarde.
            additionalProperties: false
      additionalProperties: false
  responses:
    200ResponseDiscoveryAccountsPayment:
      description: Dados de contas de pagamento Pix obtidos com sucesso.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseDiscoveryAccountsPayment'
    200ResponsePaymentValidation:
      description: Validação de informações de pagamento feito com sucesso.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponsePaymentValidation'
    201ResponseCreatePixPayment:
      description: Iniciação de pagamento Pix criada com sucesso.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseCreatePixPayment'
    200ResponseFindPixPayment:
      description: Dados de iniciação de pagamento Pix obtidos com sucesso.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseFindPixPayment'
    200ResponseCancellationPixPayment:
      description: Iniciação de pagamento Pix cancelada com sucesso.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseCancellationPixPayment'
    422ResponseErrorPaymentValidation:
      description: Listagem de erros ocorridos ao processar a solicitação de criação
        de pagamento.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ErrorPaymentValidation'
    422ResponseErrorCreatePixPayment:
      description: Listagem de erros ocorridos ao criar iniciação de pagamento.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ErrorCreatePixPayment'
    422ResponseErrorFindPixPayment:
      description: Listagem de erros ocorridos ao obter dados do pagamento.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ErrorFindAndCancellationPixPayment'
    422ResponseErrorCancellationPixPayment:
      description: Listagem de erros ocorridos ao cancelar iniciação de pagamento.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ErrorFindAndCancellationPixPayment'
